{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6890e7455160ade4fbc5","webpack:///./packages/full-text-search/src/fuzzy/long.ts","webpack:///./packages/full-text-search/src/inverted_index.ts","webpack:///./packages/full-text-search/src/tokenizer.ts","webpack:///./packages/full-text-search/src/query_builder.ts","webpack:///./packages/full-text-search/src/fuzzy/parametric_description.ts","webpack:///./packages/full-text-search/src/index.ts","webpack:///./packages/full-text-search/src/full_text_search.ts","webpack:///./packages/full-text-search/src/index_searcher.ts","webpack:///./packages/full-text-search/src/scorer.ts","webpack:///./packages/full-text-search/src/fuzzy/run_automaton.ts","webpack:///./packages/full-text-search/src/fuzzy/levenshtein_automata.ts","webpack:///./packages/full-text-search/src/fuzzy/automaton.ts","webpack:///./packages/full-text-search/src/fuzzy/lev1t_parametric_description.ts","webpack:///./packages/full-text-search/src/fuzzy/lev2t_parametric_description.ts","webpack:///./packages/common/plugin.ts","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":"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AAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC;IACnI,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,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;IACpI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC;IACpI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACpI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACrI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC;IACtI,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAI,mDAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,I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","file":"lokijs.full-text-search.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@lokijs/full-text-search\"] = factory();\n\telse\n\t\troot[\"@lokijs/full-text-search\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6890e7455160ade4fbc5","/**\n * Class supports 64Bit integer operations.\n * A cut-down version of dcodeIO/long.js.\n * @hidden\n */\nexport class Long {\n  private _low: number;\n  private _high: number;\n\n  constructor(low: number = 0, high: number = 0) {\n    this._low = low;\n    this._high = high;\n  }\n\n  /**\n   * Returns this long with bits arithmetically shifted to the right by the given amount.\n   * @param {number} numBits - number of bits\n   * @returns {Long} the long\n   */\n  shiftRight(numBits: number): Long {\n    if ((numBits &= 63) === 0)\n      return this;\n    else if (numBits < 32)\n      return new Long((this._low >>> numBits) | (this._high << (32 - numBits)), this._high >> numBits);\n    else\n      return new Long((this._high >> (numBits - 32)), this._high >= 0 ? 0 : -1);\n  }\n\n  /**\n   * Returns this long with bits arithmetically shifted to the left by the given amount.\n   * @param {number} numBits - number of bits\n   * @returns {Long} the long\n   */\n  shiftLeft(numBits: number): Long {\n    if ((numBits &= 63) === 0)\n      return this;\n    else if (numBits < 32)\n      return new Long(this._low << numBits, (this._high << numBits) | (this._low >>> (32 - numBits)));\n    else\n      return new Long(0, this._low << (numBits - 32));\n  }\n\n  /**\n   * Returns the bitwise AND of this Long and the specified.\n   * @param {Long} other - the other Long\n   * @returns {Long} the long\n   */\n  and(other: Long): Long {\n    return new Long(this._low & other._low, this._high & other._high);\n  }\n\n  /**\n   * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n   * @returns {number}\n   */\n  toInt(): number {\n    return this._low;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/long.ts","import {Tokenizer} from \"./tokenizer\";\nimport Index = InvertedIndex.Index;\n\n/**\n * Converts a string into an array of code points.\n * @param str - the string\n * @returns {number[]} to code points\n * @hidden\n */\nexport function toCodePoints(str: string): number[] {\n  const r = [];\n  for (let i = 0; i < str.length;) {\n    const chr = str.charCodeAt(i++);\n    if (chr >= 0xD800 && chr <= 0xDBFF) {\n      // surrogate pair\n      const low = str.charCodeAt(i++);\n      r.push(0x10000 + ((chr - 0xD800) << 10) | (low - 0xDC00));\n    } else {\n      // ordinary character\n      r.push(chr);\n    }\n  }\n  return r;\n}\n\n/**\n * Inverted index class handles featured text search for specific document fields.\n * @hidden\n */\nexport class InvertedIndex {\n  private _store: boolean;\n  private _optimizeChanges: boolean;\n  private _tokenizer: Tokenizer;\n  private _docCount: number = 0;\n  private _docStore: Map<number, InvertedIndex.DocStore> = new Map();\n  private _totalFieldLength: number = 0;\n  private _root: Index = new Map();\n\n  /**\n   * @param {boolean} [options.store=true] - inverted index will be stored at serialization rather than rebuilt on load.\n   * @param {boolean} optimizeChanges\n   * @param {Tokenizer} tokenizer\n   */\n  constructor(options: InvertedIndex.FieldOptions = {}) {\n    (\n      {\n        store: this._store = true,\n        optimizeChanges: this._optimizeChanges = true,\n        tokenizer: this._tokenizer = new Tokenizer()\n      } = options\n    );\n  }\n\n  get store() {\n    return this._store;\n  }\n\n  set store(val: boolean) {\n    this._store = val;\n  }\n\n  get tokenizer() {\n    return this._tokenizer;\n  }\n\n  get documentCount() {\n    return this._docCount;\n  }\n\n  get documentStore() {\n    return this._docStore;\n  }\n\n  get totalFieldLength() {\n    return this._totalFieldLength;\n  }\n\n  get root() {\n    return this._root;\n  }\n\n  /**\n   * Adds defined fields of a document to the inverted index.\n   * @param {string} field - the field to add\n   * @param {number} docId - the doc id of the field\n   */\n  insert(field: string, docId: number) {\n    if (this._docStore.has(docId)) {\n      throw Error(\"Field already added.\");\n    }\n\n    // Tokenize document field.\n    const fieldTokens = this._tokenizer.tokenize(field);\n    this._totalFieldLength += fieldTokens.length;\n    this._docCount += 1;\n    this._docStore.set(docId, {fieldLength: fieldTokens.length});\n\n    // Holds references to each index of a document.\n    const indexRef: Index[] = [];\n    if (this._optimizeChanges) {\n      Object.defineProperties(this._docStore.get(docId), {\n        indexRef: {enumerable: false, configurable: true, writable: true, value: indexRef}\n      });\n    }\n\n    // Iterate over all unique field terms.\n    for (const token of new Set(fieldTokens)) {\n      if (token === \"\") {\n        continue;\n      }\n      // Calculate term frequency.\n      let tf = 0;\n      for (let j = 0; j < fieldTokens.length; j++) {\n        if (fieldTokens[j] === token) {\n          ++tf;\n        }\n      }\n\n      // Add term to index tree.\n      let branch = this._root;\n\n      for (const c of toCodePoints(token)) {\n        let child = branch.get(c);\n        if (child === undefined) {\n          child = new Map();\n          if (this._optimizeChanges) {\n            child.pa = branch;\n          }\n          branch.set(c, child);\n        }\n        branch = child;\n      }\n      // Add term info to index leaf.\n      if (branch.dc === undefined) {\n        branch.dc = new Map();\n        branch.df = 0;\n      }\n      branch.dc.set(docId, tf);\n      branch.df += 1;\n\n      // Store index leaf for deletion.\n      indexRef.push(branch);\n    }\n  }\n\n  /**\n   * Removes all relevant terms of a document from the inverted index.\n   * @param {number} docId - the document.\n   */\n  remove(docId: number) {\n    if (!this._docStore.has(docId)) {\n      return;\n    }\n    const docStore = this._docStore.get(docId);\n    // Remove document.\n    this._docStore.delete(docId);\n    this._docCount -= 1;\n\n    // Reduce total field length.\n    this._totalFieldLength -= docStore.fieldLength;\n\n    if (this._optimizeChanges) {\n      // Iterate over all term references.\n      // Remove docId from docs and decrement document frequency.\n      const indexRef = docStore.indexRef;\n      for (let j = 0; j < indexRef.length; j++) {\n        let index = indexRef[j];\n        index.df -= 1;\n        index.dc.delete(docId);\n\n        // Check if no document is left for current tree.\n        if (index.df === 0) {\n          // Delete unused meta data of branch.\n          delete index.df;\n          delete index.dc;\n\n          // Check for sub branches.\n          if (index.size !== 0) {\n            continue;\n          }\n\n          // Delete term branch if not used anymore.\n          do {\n            // Go tree upwards.\n            const parent = index.pa;\n            // Delete parent reference for preventing memory leak (cycle reference).\n            delete index.pa;\n\n            // Iterate over all children.\n            for (const key of parent.keys()) {\n              // Remove previous child form parent.\n              if (parent.get(key) === index) {\n                parent.delete(key);\n                break;\n              }\n            }\n            index = parent;\n          } while (index.pa !== undefined && index.size === 0 && index.df === undefined);\n        }\n      }\n    } else {\n      this._remove(this._root, docId);\n    }\n  }\n\n  /**\n   * Gets the term index of a term.\n   * @param {string} term - the term\n   * @param {object} root - the term index to start from\n   * @param {number} start - the position of the term string to start from\n   * @return {object} - The term index or null if the term is not in the term tree.\n   */\n  static getTermIndex(term: number[], root: Index, start: number = 0) {\n    if (start >= term.length) {\n      return null;\n    }\n    for (let i = start; i < term.length; i++) {\n      let child = root.get(term[i]);\n      if (child === undefined) {\n        return null;\n      }\n      root = child;\n    }\n    return root;\n  }\n\n  /**\n   * Extends a term index to all available term leafs.\n   * @param {object} idx - the term index to start from\n   * @param {number[]} [term=[]] - the current term\n   * @param {Array} termIndices - all extended indices with their term\n   * @returns {Array} - Array with term indices and extension\n   */\n  static extendTermIndex(idx: Index, term: number[] = [], termIndices: InvertedIndex.IndexTerm[] = []): InvertedIndex.IndexTerm[] {\n    if (idx.df !== undefined) {\n      termIndices.push({index: idx, term: term.slice()});\n    }\n\n    term.push(0);\n    for (const child of idx) {\n      term[term.length - 1] = child[0];\n      InvertedIndex.extendTermIndex(child[1], term, termIndices);\n    }\n    term.pop();\n    return termIndices;\n  }\n\n  /**\n   * Serialize the inverted index.\n   * @returns {{docStore: *, _fields: *, index: *}}\n   */\n  public toJSON() {\n    if (this._store) {\n      return {\n        _store: true,\n        _optimizeChanges: this._optimizeChanges,\n        _tokenizer: this._tokenizer,\n        _docCount: this._docCount,\n        _docStore: [...this._docStore],\n        _totalFieldLength: this._totalFieldLength,\n        _root: InvertedIndex.serializeIndex(this._root)\n      };\n    }\n    return {\n      _store: false,\n      _optimizeChanges: this._optimizeChanges,\n      _tokenizer: this._tokenizer\n    };\n  }\n\n  /**\n   * Deserialize the inverted index.\n   * @param {{docStore: *, _fields: *, index: *}} serialized - The serialized inverted index.\n   * @param {Object.<string, function>|Tokenizer} funcTok[undefined] - the depending functions with labels\n   *  or an equivalent tokenizer\n   */\n  public static fromJSONObject(serialized: InvertedIndex.Serialization, funcTok?: Tokenizer.FunctionSerialization) {\n    const invIdx = new InvertedIndex({\n      store: serialized._store,\n      optimizeChanges: serialized._optimizeChanges,\n      tokenizer: Tokenizer.fromJSONObject(serialized._tokenizer, funcTok)\n    });\n    if (invIdx._store) {\n      invIdx._docCount = serialized._docCount;\n      invIdx._docStore = new Map(serialized._docStore);\n      invIdx._totalFieldLength = serialized._totalFieldLength;\n      invIdx._root = InvertedIndex.deserializeIndex(serialized._root);\n    }\n\n    if (invIdx._optimizeChanges) {\n      invIdx._regenerate(invIdx._root, null);\n    }\n\n    return invIdx;\n  }\n\n  private static serializeIndex(idx: Index): InvertedIndex.SerializedIndex {\n    const serialized: InvertedIndex.SerializedIndex = {};\n    if (idx.dc !== undefined) {\n      serialized.d = {df: idx.df, dc: [...idx.dc]};\n    }\n\n    if (idx.size === 0) {\n      return serialized;\n    }\n\n    const keys = [];\n    const values = [];\n    for (const child of idx) {\n      keys.push(child[0]);\n      values.push(InvertedIndex.serializeIndex(child[1]));\n    }\n    serialized.k = keys;\n    serialized.v = values;\n\n    return serialized;\n  }\n\n  private static deserializeIndex(serialized: InvertedIndex.SerializedIndex): Index {\n    const idx: Index = new Map();\n\n    if (serialized.k !== undefined) {\n      for (let i = 0; i < serialized.k.length; i++) {\n        idx.set(serialized.k[i], InvertedIndex.deserializeIndex(serialized.v[i]));\n      }\n    }\n    if (serialized.d !== undefined) {\n      idx.df = serialized.d.df;\n      idx.dc = new Map(serialized.d.dc);\n    }\n    return idx;\n  }\n\n  /**\n   * Set parent of to each index and regenerate the indexRef.\n   * @param {Index} index - the index\n   * @param {Index} parent - the parent\n   */\n  private _regenerate(index: Index, parent: Index) {\n    // Set parent.\n    if (parent !== null) {\n      index.pa = parent;\n    }\n\n    // Iterate over subtree.\n    for (const child of index.values()) {\n      this._regenerate(child, index);\n    }\n\n    if (index.dc !== undefined) {\n      // Get documents of term.\n      for (const docId of index.dc.keys()) {\n        // Get document store at specific document/field.\n        const ref = this._docStore.get(docId);\n        if (ref.indexRef === undefined) {\n          Object.defineProperties(ref, {\n            indexRef: {enumerable: false, configurable: true, writable: true, value: []}\n          });\n        }\n        // Set reference to term index.\n        ref.indexRef.push(index);\n      }\n    }\n  }\n\n  /**\n   * Iterate over the whole inverted index and remove the document.\n   * Delete branch if not needed anymore.\n   * Function is needed if index is used without optimization.\n   * @param {Index} idx - the index\n   * @param {number} docId - the doc id\n   * @returns {boolean} true if index is empty\n   */\n  private _remove(idx: Index, docId: number) {\n    for (const child of idx) {\n      // Checkout branch.\n      if (this._remove(child[1], docId)) {\n        idx.delete(child[0]);\n      }\n    }\n    // Remove docId from docs and decrement document frequency.\n    if (idx.df !== undefined) {\n      if (idx.dc.has(docId)) {\n        idx.df -= 1;\n        idx.dc.delete(docId);\n\n        // Delete unused meta data of branch.\n        if (idx.df === 0) {\n          delete idx.df;\n          delete idx.dc;\n        }\n      }\n    }\n    return idx.size === 0 && idx.dc === undefined;\n  }\n}\n\nexport namespace InvertedIndex {\n  export interface FieldOptions {\n    store?: boolean;\n    optimizeChanges?: boolean;\n    tokenizer?: Tokenizer;\n  }\n\n  export type Index = Map<number, any> & { dc?: Map<number, number>, df?: number, pa?: Index };\n\n  export type IndexTerm = { index: Index, term: number[] };\n\n  export interface SerializedIndex {\n    d?: {\n      df: number;\n      dc: [number, number][]\n    };\n    k?: number[];\n    v?: SerializedIndex[];\n  }\n\n  export interface Serialization {\n    _store: boolean;\n    _optimizeChanges: boolean;\n    _tokenizer: Tokenizer.Serialization;\n    _docCount?: number;\n    _docStore?: Map<number, DocStore>;\n    _totalFieldLength?: number;\n    _root?: SerializedIndex;\n  }\n\n  export interface DocStore {\n    fieldLength?: number;\n    indexRef?: Index[];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/inverted_index.ts","/**\n * Splits a string at non-alphanumeric characters into lower case tokens.\n * @param {string} str - the string\n * @returns {string[]} - the tokens\n * @private\n */\nimport {Dict} from \"../../common/types\";\n\nfunction defaultSplitter(str: string) {\n  let tokens = str.split(/[^\\w]+/);\n  for (let i = 0; i < tokens.length; i++) {\n    tokens[i] = tokens[i].toLowerCase();\n  }\n  return tokens;\n}\n\n/**\n * The tokenizer is used to prepare the string content of a document field for the inverted index.\n * Firstly the string gets split into tokens.\n * After that the tokens will be trimmed/stemmed with defined functions from the queue.\n *\n * * To change the splitter function, use {@link Tokenizer#setSplitter}.\n * * To add functions to the queue, use {@link Tokenizer#add}, {@link Tokenizer#addBefore} and\n *   {@link Tokenizer#addAfter}.\n * * To remove a function from the queue, use {@link Tokenizer#remove}.\n * * To reset the tokenizer, use {@link Tokenizer#reset}.\n */\nexport class Tokenizer {\n  private _splitter: Tokenizer.SplitterFunction;\n  private _queue: Tokenizer.TokinizeFunction[] = [];\n  private _symbol: any = Symbol(\"label\");\n\n  /**\n   * Initializes the tokenizer with a splitter, which splits a string at non-alphanumeric characters.\n   * The queue is empty.\n   */\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * Sets a function with defined label as the splitter function.\n   * The function must take a string as argument and return an array of tokens.\n   *\n   * @param {string} label - the label\n   * @param {function} func - the function\n   */\n  setSplitter(label: string, func: Tokenizer.SplitterFunction) {\n    if (label === \"\") {\n      throw Error(\"Label cannot be empty.\");\n    }\n    func[this._symbol] = label;\n    this._splitter = func;\n  }\n\n  /**\n   * Gets the splitter.\n   * @return {Array.<string, function>} - tuple with label and function\n   */\n  getSplitter() {\n    return [this._splitter[this._symbol], this._splitter];\n  }\n\n  /**\n   * Resets the splitter to default.\n   */\n  resetSplitter() {\n    this._splitter = defaultSplitter;\n  }\n\n  /**\n   * Checks if a function is inside the queue.\n   * @param {string|function} labelFunc - an existing label or function\n   * @returns {boolean} true if exists, otherwise false\n   */\n  has(labelFunc: string | Tokenizer.TokinizeFunction) {\n    return this._getPosition(labelFunc) !== -1;\n  }\n\n  /**\n   * Gets a function from the queue.\n   * Only the first found function gets returned if a label or a function is multiple used.\n   *\n   * @param {string|function} labelFunc - an existing label or function\n   * @return {Array.<string, function>} - tuple with label and function\n   */\n  get(labelFunc: string | Tokenizer.TokinizeFunction) {\n    let pos = this._getPosition(labelFunc);\n    if (pos === -1) {\n      throw Error(\"Cannot find existing function.\");\n    }\n    return [this._queue[pos][this._symbol], this._queue[pos]];\n  }\n\n  /**\n   * Adds a function with defined label to the end of the queue.\n   * The function must take a token string as argument and return a token.\n   *\n   * @param {string} label - the label\n   * @param {function} func - the function\n   */\n  add(label: string, func: Tokenizer.TokinizeFunction) {\n    this._addFunction(label, func, this._queue.length);\n  }\n\n  /**\n   * Adds a function with defined label before an existing function to the queue.\n   * The function must take a token string as argument and return a token.\n   *\n   * @param {string|function} labelFunc - an existing label or function\n   * @param {string} label - the label\n   * @param {function} func - the function\n   */\n  addBefore(labelFunc: string | Tokenizer.TokinizeFunction, label: string, func: Tokenizer.TokinizeFunction) {\n    let pos = this._getPosition(labelFunc);\n    if (pos === -1) {\n      throw Error(\"Cannot find existing function.\");\n    }\n    this._addFunction(label, func, pos);\n  }\n\n  /**\n   * Adds a function with defined label after an existing function to the queue.\n   * The function must take a token string as argument and return a token.\n   *\n   * @param {string|function} labelFunc - an existing label or function\n   * @param {string} label - the label\n   * @param {function} func - the function\n   */\n  addAfter(labelFunc: string | Tokenizer.TokinizeFunction, label: string, func: Tokenizer.TokinizeFunction) {\n    let pos = this._getPosition(labelFunc);\n    if (pos === -1) {\n      throw Error(\"Cannot find existing function.\");\n    }\n    this._addFunction(label, func, pos + 1);\n  }\n\n  /**\n   * Removes a function from the queue.\n   * @param {string|function} labelFunc - an existing label or function\n   */\n  remove(labelFunc: string | Tokenizer.TokinizeFunction) {\n    let pos = this._getPosition(labelFunc);\n    if (pos === -1) {\n      throw Error(\"Cannot find existing function.\");\n    }\n    this._queue.splice(pos, 1);\n  }\n\n  /**\n   * Resets the splitter and tokenize queue to default.\n   */\n  reset() {\n    this._splitter = defaultSplitter;\n    this._queue = [];\n  }\n\n  /**\n   * Tokenizes a string into tokens.\n   * @param {string} str - the string\n   * @return {string[]} the tokens\n   */\n  tokenize(str: string) {\n    let tokens = this._splitter(str);\n    // Apply each token over the queue functions.\n    for (let i = 0; i < this._queue.length; i++) {\n      let newTokens: string[] = [];\n      for (let j = 0; j < tokens.length; j++) {\n        let token: string = this._queue[i](tokens[j]);\n        if (token) {\n          newTokens.push(token);\n        }\n      }\n      tokens = newTokens;\n    }\n    return tokens;\n  }\n\n  /**\n   * Serializes the tokenizer by returning the labels of the used functions.\n   * @returns {{splitter: string?, tokenizers: string[]}} - the serialization\n   */\n  toJSON() {\n    let serialized: Tokenizer.Serialization = {\n      tokenizers: []\n    };\n    if (this._splitter !== defaultSplitter) {\n      serialized.splitter = this._splitter[this._symbol];\n    }\n    for (let i = 0; i < this._queue.length; i++) {\n      serialized.tokenizers.push(this._queue[i][this._symbol]);\n    }\n    return serialized;\n  }\n\n  /**\n   * Deserializes the tokenizer by reassign the correct function to each label.\n   * @param {{splitter: string, tokenizers: string[]}} serialized - the serialized labels\n   * @param {Object.<string, function>|Tokenizer} funcTok - the depending functions with labels\n   *  or an equivalent tokenizer\n   */\n  static fromJSONObject(serialized: Tokenizer.Serialization, funcTok?: Tokenizer.FunctionSerialization) {\n    let tkz = new Tokenizer();\n    if (funcTok instanceof Tokenizer) {\n      if (serialized.splitter !== undefined) {\n        let splitter = funcTok.getSplitter();\n        if (serialized.splitter !== splitter[0]) {\n          throw Error(\"Splitter function not found.\");\n        }\n        tkz.setSplitter(splitter[0], splitter[1]);\n      }\n\n      for (let i = 0; i < serialized.tokenizers.length; i++) {\n        if (!funcTok.has(serialized.tokenizers[i])) {\n          throw Error(\"Tokenizer function not found.\");\n        }\n        let labelFunc = funcTok.get(serialized.tokenizers[i]);\n        tkz.add(labelFunc[0], labelFunc[1]);\n      }\n    } else {\n      if (serialized.splitter !== undefined) {\n        if (funcTok.splitters[serialized.splitter] === undefined) {\n          throw Error(\"Splitter function not found.\");\n        }\n        tkz.setSplitter(serialized.splitter, funcTok.splitters[serialized.splitter]);\n      }\n      for (let i = 0; i < serialized.tokenizers.length; i++) {\n        if (funcTok.tokenizers[serialized.tokenizers[i]] === undefined) {\n          throw Error(\"Tokenizer function not found.\");\n        }\n        tkz.add(serialized.tokenizers[i], funcTok.tokenizers[serialized.tokenizers[i]]);\n      }\n    }\n    return tkz;\n  }\n\n  /**\n   * Returns the position of a function inside the queue.\n   * @param {string|function} labelFunc - an existing label or function\n   * @return {number} the position\n   * @private\n   */\n  private _getPosition(labelFunc: string | Tokenizer.TokinizeFunction) {\n    if (labelFunc instanceof Function) {\n      return this._queue.indexOf(labelFunc);\n    } else {\n      for (let i = 0; i < this._queue.length; i++) {\n        if (this._queue[i][this._symbol] === labelFunc) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Adds a function with defined label at a specific position to the queue.\n   * @param {string} label - the label\n   * @param {function} func - the function\n   * @param {number} pos - the position\n   * @private\n   */\n  private _addFunction(label: string, func: Tokenizer.TokinizeFunction, pos: number) {\n    if (label === \"\") {\n      throw Error(\"Label cannot be empty.\");\n    }\n    func[this._symbol] = label;\n    this._queue.splice(pos, 0, func);\n  }\n}\n\nexport namespace Tokenizer {\n  export type SplitterFunction = (word: string) => string[];\n  export type TokinizeFunction = (word: string) => string;\n\n  export interface Serialization {\n    splitter?: string;\n    tokenizers: string[];\n  }\n\n  export type FunctionSerialization =\n    { splitters: Dict<SplitterFunction>, tokenizers: Dict<TokinizeFunction> }\n    | Tokenizer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/tokenizer.ts","/**\n * The base query class to enable boost to a query type.\n */\nexport class BaseQueryBuilder {\n  protected _data: any;\n\n  /**\n   * @param {string} type - the type name of the query\n   * @param data\n   */\n  constructor(type: string, data: any = {}) {\n    this._data = data;\n    this._data.type = type;\n  }\n\n  /**\n   * Boosts the query result.\n   *\n   * See also [Lucene#BoostQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/BoostQuery.html}\n   * and [Elasticsearch#boost]{@link https://www.elastic.co/guide/en/elasticsearch/reference/5.2/mapping-boost.html}.\n   *\n   * @param {number} value - the positive boost\n   * @return {BaseQueryBuilder} object itself for cascading\n   */\n  boost(value: number) {\n    if (value < 0) {\n      throw TypeError(\"Boost must be a positive number.\");\n    }\n    this._data.boost = value;\n    return this;\n  }\n\n  /**\n   * Build the final query.\n   * @return {Object} - the final query\n   */\n  build(): any {\n    return this._data;\n  }\n}\n\nexport interface BaseQuery<Type> {\n  type: Type;\n  boost?: number;\n}\n\n/**\n * A query which finds documents where a document field contains a term.\n *\n * See also [Lucene#TermQueryBuilder]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/TermQuery.html}\n * and [Elasticsearch#TermQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .term(\"name\", \"infinity\"])\n * .build();\n * // The resulting documents:\n * // contains the term infinity\n *\n * @extends BaseQueryBuilder\n */\nexport class TermQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param {string} term - the term\n   * @param data\n   */\n  constructor(field: string, term: string, data: any = {}) {\n    super(\"term\", data);\n    this._data.field = field;\n    this._data.value = term;\n  }\n}\n\nexport interface TermQuery extends BaseQuery<\"term\"> {\n  field: string;\n  value: string;\n}\n\n/**\n * A query which finds documents where a document field contains any of the terms.\n *\n * See also [Lucene#TermRangeQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/TermRangeQuery.html}\n * and [Elasticsearch#TermsQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .terms(\"quotes\", [\"infinity\", \"atom\", \"energy\"])\n * .build();\n * // The resulting documents:\n * // contains the terms infinity, atom or energy\n *\n * @extends BaseQueryBuilder\n */\nexport class TermsQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param {string[]} terms - the terms\n   * @param data\n   */\n  constructor(field: string, terms: Array<string>, data: any = {}) {\n    super(\"terms\", data);\n    this._data.field = field;\n    this._data.value = terms;\n  }\n}\n\nexport interface TermsQuery extends BaseQuery<\"terms\"> {\n  field: string;\n  value: string[];\n}\n\n/**\n * A query which finds documents where the wildcard term can be applied at an existing document field term.\n *\n * Wildcard | Description\n * -------- | ------------\n * ? (question mark) | Skips a single character.\n *\n * To escape a wildcard character, use _\\_ (backslash), e.g. \\?.\n *\n * * To enable scoring for wildcard queries, use {@link WildcardQueryBuilder#enableScoring}.\n *\n * See also [Lucene#WildcardQueryBuilder]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/WildcardQuery.html}\n * and [Elasticsearch#WildcardQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .wildcard(\"question\", \"e?nst*n\\?\")\n * .build();\n * // The resulting documents:\n * // contains the wildcard surname e?nst*n\\? (like Einstein? or Eynsteyn? but not Einsteine or Ensten?)\n *\n * @extends BaseQueryBuilder\n */\nexport class WildcardQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param {string} wildcard - the wildcard term\n   * @param data\n   */\n  constructor(field: string, wildcard: string, data: any = {}) {\n    super(\"wildcard\", data);\n    this._data.field = field;\n    this._data.value = wildcard;\n  }\n\n  /**\n   * This flag enables scoring for wildcard results, similar to {@link TermQueryBuilder}.\n   * @param {boolean} enable - flag to enable or disable scoring\n   * @return {WildcardQueryBuilder}\n   */\n  enableScoring(enable: boolean) {\n    this._data.enable_scoring = enable;\n    return this;\n  }\n}\n\nexport interface WildcardQuery extends BaseQuery<\"wildcard\"> {\n  field: string;\n  value: string;\n  enable_scoring?: boolean;\n}\n\n/**\n * A query which finds documents where the fuzzy term can be transformed into an existing document field term within a\n * given edit distance.\n * ([Damerau–Levenshtein distance]{@link https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance}).\n *\n * The edit distance is the minimum number of an insertion, deletion or substitution of a single character\n * or a transposition of two adjacent characters.\n *\n * * To set the maximal allowed edit distance, use {@link FuzzyQueryBuilder#fuzziness} (default is AUTO).\n * * To set the initial word length, which should ignored for fuzziness, use {@link FuzzyQueryBuilder#prefixLength}.\n * * To include longer document field terms than the fuzzy term and edit distance together, use\n *   {@link FuzzyQueryBuilder#extended}.\n *\n * See also [Lucene#FuzzyQueryBuilder]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/FuzzyQuery.html}\n * and [Elasticsearch#FuzzyQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .fuzzy(\"surname\", \"einsten\")\n *     .fuzziness(2)\n *     .prefixLength(3)\n * .build();\n * // The resulting documents:\n * // contains the fuzzy surname einstn (like Einstein or Einst but not Eisstein or Insten)\n *\n * @extends BaseQueryBuilder\n */\nexport class FuzzyQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param {string} fuzzy - the fuzzy term\n   * @param data\n   */\n  constructor(field: string, fuzzy: string, data: any = {}) {\n    super(\"fuzzy\", data);\n    this._data.field = field;\n    this._data.value = fuzzy;\n  }\n\n  /**\n   * Sets the maximal allowed fuzziness.\n   * @param {number|string} fuzziness - the edit distance 0, 1, 2 or AUTO\n   *\n   * AUTO generates an edit distance based on the length of the term:\n   * * 0..2 -> must match exactly\n   * * 3..5 -> one edit allowed\n   * * >5 two edits allowed\n   *\n   * @return {FuzzyQueryBuilder} - object itself for cascading\n   */\n  fuzziness(fuzziness: 0 | 1 | 2 | \"AUTO\") {\n    if (fuzziness !== \"AUTO\" && (fuzziness < 0 || fuzziness > 2)) {\n      throw TypeError(\"Fuzziness must be 0, 1, 2 or AUTO.\");\n    }\n    this._data.fuzziness = fuzziness;\n    return this;\n  }\n\n  /**\n   * Sets the initial word length.\n   * @param {number} prefixLength - the positive prefix length\n   * @return {FuzzyQueryBuilder}  object itself for cascading\n   */\n  prefixLength(prefixLength: number) {\n    if (prefixLength < 0) {\n      throw TypeError(\"Prefix length must be a positive number.\");\n    }\n    this._data.prefix_length = prefixLength;\n    return this;\n  }\n\n  /**\n   * This flag allows longer document field terms than the actual fuzzy.\n   * @param {boolean} extended - flag to enable or disable extended search\n   * @return {FuzzyQueryBuilder}\n   */\n  extended(extended: boolean) {\n    this._data.extended = extended;\n    return this;\n  }\n}\n\nexport interface FuzzyQuery extends BaseQuery<\"fuzzy\"> {\n  field: string;\n  value: string;\n  fuzziness?: 0 | 1 | 2 | \"AUTO\";\n  prefix_length?: number;\n  extended?: boolean;\n}\n\n/**\n * A query which matches documents containing the prefix of a term inside a field.\n *\n * * To enable scoring for wildcard queries, use {@link WildcardQueryBuilder#enableScoring}.\n *\n * See also [Lucene#PrefixQueryBuilder]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/PrefixQuery.html}\n * and [Elasticsearch#MatchQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-prefix-query.html}\n *\n * @example\n * new QueryBuilder()\n *   .prefix(\"surname\", \"alb\")\n * .build()\n * // The resulting documents:\n * // contains the term prefix alb as surname\n *\n * @extends BaseQueryBuilder\n */\nexport class PrefixQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param {string} prefix - the prefix of a term\n   * @param data\n   */\n  constructor(field: string, prefix: string, data: any = {}) {\n    super(\"prefix\", data);\n    this._data.field = field;\n    this._data.value = prefix;\n  }\n\n  /**\n   * This flag enables scoring for prefix results, similar to {@link TermQueryBuilder}.\n   * @param {boolean} enable - flag to enable or disable scoring\n   * @return {PrefixQueryBuilder}\n   */\n  enableScoring(enable: boolean) {\n    this._data.enable_scoring = enable;\n    return this;\n  }\n}\n\nexport interface PrefixQuery extends BaseQuery<\"prefix\"> {\n  field: string;\n  value: string;\n  enable_scoring?: boolean;\n}\n\n/**\n * A query which matches all documents with a given field.\n *\n * See also [Elasticsearch#ExistsQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .exists(\"name\")\n * .build()\n * // The resulting documents:\n * // has the field \"name\"\n *\n * @extends BaseQueryBuilder\n */\nexport class ExistsQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param data\n   */\n  constructor(field: string, data: any = {}) {\n    super(\"exists\", data);\n    this._data.field = field;\n  }\n}\n\nexport interface ExistsQuery extends BaseQuery<\"exists\"> {\n  field: string;\n}\n\n\n/**\n * A query which tokenizes the given query text, performs a query foreach token and combines the results using a boolean\n * operator.\n *\n * Operator      | Description\n * ------------- | -------------\n * or (default) | Finds documents which matches some tokens. The minimum amount of matches can be controlled with [minimumShouldMatch]{@link MatchQueryBuilder#minimumShouldMatch} (default is 1).\n * and | Finds documents which matches all tokens.\n *\n * To enable a [fuzzy query]{@link FuzzyQueryBuilder} for the tokens, use {@link MatchQueryBuilder#fuzziness},\n * {@link MatchQueryBuilder#prefixLength} and {@link MatchQueryBuilder#extended}\n *\n * See also [Lucene#?]{@link ?}\n * and [Elasticsearch#MatchQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .match(\"name\", \"albrt einsten\")\n *     .boost(2.5)\n *     .operator(\"and\")\n *     .fuzziness(2)\n *     .prefixLength(3)\n * .build();\n * // The resulting documents:\n * // contains the fuzzy name albrt einsten (like Albert Einstein) with a boost of 2.5\n *\n * @extends BaseQueryBuilder\n */\nexport class MatchQueryBuilder extends BaseQueryBuilder {\n  /**\n   * @param {string} field - the field name of the document\n   * @param {string} query - the query text\n   * @param data\n   */\n  constructor(field: string, query: string, data: any = {}) {\n    super(\"match\", data);\n    this._data.field = field;\n    this._data.value = query;\n  }\n\n  /**\n   * Controls the amount of minimum matching sub queries before a document will be considered.\n   * @param {number} minShouldMatch - number of minimum matching sub queries\n   *   minShouldMatch >= 1: Indicates a fixed value regardless of the number of sub queries.\n   *   minShouldMatch <= -1: Indicates that the number of sub queries, minus this number should be mandatory.\n   *   minShouldMatch < 0: Indicates that this percent of the total number of sub queries can be missing.\n   *     The number computed from the percentage is rounded down, before being subtracted from the total to determine\n   *     the minimum.\n   *   minShouldMatch < 1: Indicates that this percent of the total number of sub queries are necessary.\n   *     The number computed from the percentage is rounded down and used as the minimum.\n   * @return {MatchQueryBuilder} object itself for cascading\n   */\n  minimumShouldMatch(minShouldMatch: number) {\n    if (this._data.operator !== undefined && this._data.operator === \"and\") {\n      throw SyntaxError(\"Match query with \\\"and\\\" operator does not support minimum should match.\");\n    }\n    this._data.minimum_should_match = minShouldMatch;\n    return this;\n  }\n\n  /**\n   * Sets the boolean operator.\n   * @param {string} op - the operator (\"or\" || \"and\")\n   * @return {MatchQueryBuilder} object itself for cascading\n   */\n  operator(op: string) {\n    if (op !== \"and\" && op !== \"or\") {\n      throw SyntaxError(\"Unknown operator.\");\n    }\n    this._data.operator = op;\n    if (this._data.minimum_should_match !== undefined && this._data.operator === \"and\") {\n      throw SyntaxError(\"Match query with \\\"and\\\" operator does not support minimum should match.\");\n    }\n    return this;\n  }\n\n  /**\n   * Sets the maximal allowed fuzziness.\n   * @param {number|string} fuzziness - the edit distance 0, 1, 2 or AUTO\n   *\n   * AUTO generates an edit distance based on the length of the term:\n   * * 0..2 -> must match exactly\n   * * 3..5 -> one edit allowed\n   * * >5 two edits allowed\n   *\n   * @return {MatchQueryBuilder} - object itself for cascading\n   */\n  fuzziness(fuzziness: 0 | 1 | 2 | \"AUTO\") {\n    if (fuzziness !== \"AUTO\" && (fuzziness < 0 || fuzziness > 2)) {\n      throw TypeError(\"Fuzziness must be 0, 1, 2 or AUTO.\");\n    }\n    this._data.fuzziness = fuzziness;\n    return this;\n  }\n\n  /**\n   * Sets the starting word length which should not be considered for fuzziness.\n   * @param {number} prefixLength - the positive prefix length\n   * @return {MatchQueryBuilder} - object itself for cascading\n   */\n  prefixLength(prefixLength: number) {\n    if (prefixLength < 0) {\n      throw TypeError(\"Prefix length must be a positive number.\");\n    }\n    this._data.prefix_length = prefixLength;\n    return this;\n  }\n\n  /**\n   * This flag allows longer document field terms than the actual fuzzy.\n   * @param {boolean} extended - flag to enable or disable extended search\n   * @return {MatchQueryBuilder}\n   */\n  extended(extended: boolean) {\n    this._data.extended = extended;\n    return this;\n  }\n}\n\nexport interface MatchQuery extends BaseQuery<\"match\"> {\n  field: string;\n  value: string;\n  minimum_should_match?: number;\n  operator?: \"and\" | \"or\";\n  fuzziness?: 0 | 1 | 2 | \"AUTO\";\n  prefix_length?: number;\n  extended?: boolean;\n}\n\n/**\n * A query that matches all documents and giving them a constant score equal to the query boost.\n *\n * Typically used inside a must clause of a {@link BoolQueryBuilder} to subsequently reject non matching documents with the not\n * clause.\n *\n * See also [Lucene#MatchAllDocsQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/MatchAllDocsQuery.html}\n * and [Elasticsearch#MatchAllQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-all-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .matchAll()\n *     .boost(2.5)\n * .build()\n * // The resulting documents:\n * // all documents and giving a score of 2.5\n *\n * @extends BaseQueryBuilder\n */\nexport class MatchAllQueryBuilder extends BaseQueryBuilder {\n  constructor(data: any = {}) {\n    super(\"match_all\", data);\n  }\n}\n\nexport interface MatchQueryAll extends BaseQuery<\"match_all\"> {\n}\n\n/**\n * A query that wraps sub queries and returns a constant score equal to the query boost for every document in the filter.\n *\n * See also [Lucene#BooleanQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/ConstantScoreQuery.html}\n * and [Elasticsearch#ConstantScoreQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-constant-score-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .constantScore()\n *     .boost(1.5)\n *     .beginFilter()\n *       .term(\"first_name\", \"albert\")\n *       .term(\"surname\", \"einstein\")\n *     .endFilter()\n * .build()\n * // The resulting documents:\n * // * contains albert as first name, einstein as surname and the document score is 42.\n *\n * @extends BaseQueryBuilder\n */\nexport class ConstantScoreQueryBuilder extends BaseQueryBuilder {\n  constructor(data: any = {}) {\n    super(\"constant_score\", data);\n  }\n\n  /**\n   * Starts an array of queries. Use endFilter() to finish the array.\n   * @return {ArrayQueryBuilder} array query for holding sub queries\n   */\n  beginFilter(): ArrayQueryBuilder & { endFilter(): ConstantScoreQueryBuilder } {\n    this._data.filter = {};\n    return new ArrayQueryBuilder(\"endFilter\", () => {\n      return this;\n    }, this._data.filter) as any;\n  }\n}\n\nexport interface ConstantScoreQuery extends BaseQuery<\"constant_score\"> {\n  filter: ArrayQuery;\n}\n\n/**\n * A query that matches documents matching boolean combinations of sub queries.\n *\n * This query consists of one or more boolean clauses with different behavior but interrelated to each other.\n *\n * Occur         | Description\n * ------------- | -------------\n * must  | Finds documents which matches all sub queries.\n * filter  | Finds documents which matches all sub queries but these documents do not contribute to the score.\n * should  | Finds documents which matches some sub queries. The minimum amount of matches can be controlled with [minimumShouldMatch]{@link BoolQueryBuilder#minimumShouldMatch} (default is 1).\n * not  | Documents which match any sub query will be ignored.\n *\n * A sub query can be any other query type and also the bool query itself.\n *\n * See also [Lucene#BooleanQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/BooleanQuery.html}\n * and [Elasticsearch#BoolQueryBuilder]{@link https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-bool-query.html}.\n *\n * @example\n * new QueryBuilder()\n *   .bool()\n *     .beginMust().boost(2)\n *       .term(\"first_name\", \"albert\")\n *     .endMust()\n *     .beginFilter()\n *       .term(\"birthplace\", \"ulm\")\n *     .endFilter()\n *     .beginShould().minimumShouldMatch(2)\n *       .fuzzy(\"surname\", \"einstin\")\n *       .wildcard(\"name\", \"geni?s\")\n *       .term(\"quotes\", \"infinity\")\n *     .endShould()\n *     .beginNot()\n *       .terms(\"research_field\", [\"biology\", \"geography\"])\n *     .endNot()\n * .build();\n * // The resulting documents:\n * // contains the name albert (must: contribute to the score with a boost of 2)\n * // contains the birthplace ulm (filter: not contribute to the score)\n * // contains a minimum of two matches from the fuzzy, wildcard and/or term query (should: contribute to the score)\n * // do not contains biology or geography as research field (not: not contribute to the score)\n *\n * @extends BaseQueryBuilder\n */\nexport class BoolQueryBuilder extends BaseQueryBuilder {\n  constructor(data: any = {}) {\n    super(\"bool\", data);\n  }\n\n  /**\n   * Starts an array of queries for must clause. Use endMust() to finish the array.\n   * @return {ArrayQueryBuilder} array query for holding sub queries\n   */\n  beginMust(): ArrayQueryBuilder & { endMust(): BoolQueryBuilder } {\n    this._data.must = {};\n    return new ArrayQueryBuilder(\"endMust\", () => {\n      return this;\n    }, this._data.must) as any;\n  }\n\n  /**\n   * Starts an array of queries for filter clause. Use endFilter() to finish the array.\n   * @return {ArrayQueryBuilder} array query for holding sub queries\n   */\n  beginFilter(): ArrayQueryBuilder & { endFilter(): BoolQueryBuilder } {\n    this._data.filter = {};\n    return new ArrayQueryBuilder(\"endFilter\", () => {\n      return this;\n    }, this._data.filter) as any;\n  }\n\n  /**\n   * Starts an array of queries for should clause. Use endShould() to finish the array.\n   * @return {ArrayQueryBuilder} array query for holding sub queries\n   */\n  beginShould(): ArrayQueryBuilder & { endShould(): BoolQueryBuilder } {\n    this._data.should = {};\n    return new ArrayQueryBuilder(\"endShould\", () => {\n      return this;\n    }, this._data.should) as any;\n  }\n\n  /**\n   * Starts an array of queries for not clause. Use endNot() to finish the array.\n   * @return {ArrayQueryBuilder} array query for holding sub queries\n   */\n  beginNot(): ArrayQueryBuilder & { endNot(): BoolQueryBuilder } {\n    this._data.not = {};\n    return new ArrayQueryBuilder(\"endNot\", () => {\n      return this;\n    }, this._data.not) as any;\n  }\n\n  /**\n   * Controls the amount of minimum matching sub queries before a document will be considered.\n   * @param {number} minShouldMatch - number of minimum matching sub queries\n   *   minShouldMatch >= 1: Indicates a fixed value regardless of the number of sub queries.\n   *   minShouldMatch <= -1: Indicates that the number of sub queries, minus this number should be mandatory.\n   *   minShouldMatch < 0: Indicates that this percent of the total number of sub queries can be missing.\n   *     The number computed from the percentage is rounded down, before being subtracted from the total to determine\n   *     the minimum.\n   *   minShouldMatch < 1: Indicates that this percent of the total number of sub queries are necessary.\n   *     The number computed from the percentage is rounded down and used as the minimum.\n   * @return {BoolQueryBuilder} object itself for cascading\n   */\n  minimumShouldMatch(minShouldMatch: number) {\n    this._data.minimum_should_match = minShouldMatch;\n    return this;\n  }\n}\n\nexport interface BoolQuery extends BaseQuery<\"bool\"> {\n  must?: ArrayQuery;\n  filter?: ArrayQuery;\n  should?: ArrayQuery;\n  not?: ArrayQuery;\n  minimum_should_match?: number;\n}\n\n\n/**\n * A query which holds all sub queries like an array.\n */\nexport class ArrayQueryBuilder extends BaseQueryBuilder {\n  private _callbackName: string;\n  private _prepare: (queryType: { new(...args: any[]): any }, ...args: any[]) => any;\n\n  constructor(callbackName: string, callback: Function, data: any = {}) {\n    super(\"array\", data);\n    this._data.values = [];\n    this._callbackName = callbackName;\n    this[callbackName] = callback;\n\n    this._prepare = (queryType: any, ...args: any[]) => {\n      const data = {};\n      const query = new queryType(...args, data);\n      this._data.values.push(data);\n      query.bool = this.bool;\n      query.constantScore = this.constantScore;\n      query.term = this.term;\n      query.terms = this.terms;\n      query.wildcard = this.wildcard;\n      query.fuzzy = this.fuzzy;\n      query.match = this.match;\n      query.matchAll = this.matchAll;\n      query.prefix = this.prefix;\n      query.exists = this.exists;\n      query._prepare = this._prepare;\n      query[this._callbackName] = this[this._callbackName];\n      return query;\n    };\n  }\n\n  bool() {\n    return this._prepare(BoolQueryBuilder);\n  }\n\n  constantScore() {\n    return this._prepare(ConstantScoreQueryBuilder);\n  }\n\n  term(field: string, term: string) {\n    return this._prepare(TermQueryBuilder, field, term);\n  }\n\n  terms(field: string, terms: Array<string>) {\n    return this._prepare(TermsQueryBuilder, field, terms);\n  }\n\n  wildcard(field: string, wildcard: string) {\n    return this._prepare(WildcardQueryBuilder, field, wildcard);\n  }\n\n  fuzzy(field: string, fuzzy: string) {\n    return this._prepare(FuzzyQueryBuilder, field, fuzzy);\n  }\n\n  match(field: string, query: string) {\n    return this._prepare(MatchQueryBuilder, field, query);\n  }\n\n  matchAll() {\n    return this._prepare(MatchAllQueryBuilder);\n  }\n\n  prefix(field: string, prefix: string) {\n    return this._prepare(PrefixQueryBuilder, field, prefix);\n  }\n\n  exists(field: string) {\n    return this._prepare(ExistsQueryBuilder, field);\n  }\n}\n\nexport interface ArrayQuery extends BaseQuery<\"array\"> {\n  values: QueryTypes[];\n}\n\n/**\n * This query builder is the root of each query search.\n * The query contains a sub query and parameters for setup scoring and search options.\n *\n * Possible sub query types are:\n * {@link TermQueryBuilder}, {@link TermsQueryBuilder}, {@link FuzzyQueryBuilder}, {@link WildcardQueryBuilder},\n * {@link MatchQueryBuilder}, {@link MatchAllQueryBuilder}, {@link PrefixQueryBuilder},  {@link BoolQueryBuilder},\n * {@link ConstantScoreQueryBuilder}, {@link ExistsQueryBuilder}\n *\n * @example\n * new QueryBuilder()\n *   .finalScoring(true)\n *   .useBM25(1.5, 0.5)\n *   .term(\"first_name\", \"albert\")\n * .build();\n * // The resulting documents:\n * // contains the first name albert\n * // are scored and ranked using BM25 with k1=1.5 and b=0.5\n */\nexport class QueryBuilder {\n  private _data: any;\n\n  constructor() {\n    this._data = {query: {}};\n  }\n\n  /**\n   * The query performs a final scoring over all scored sub queries.\n   * @param {boolean} enable - flag to enable or disable final scoring\n   * @return {this}\n   */\n  enableFinalScoring(enable: boolean) {\n    this._data.final_scoring = enable;\n    return this;\n  }\n\n  /**\n   * Adds an explanation of the scoring of each document for all matched terms.\n   * @param {boolean} enable -flag to enable or disable explanation\n   * @returns {this}\n   */\n  explain(enable: boolean) {\n    this._data.explain = enable;\n    return this;\n  }\n\n  /**\n   * Configures the [Okapi BM25]{@link https://en.wikipedia.org/wiki/Okapi_BM25} as scoring model.\n   *\n   * See also [Lucene#MatchAllDocsQuery]{@link https://lucene.apache.org/core/6_4_0/core/org/apache/lucene/search/similarities/BM25Similarity.html}\n   * and [Elasticsearch#BM25]{@link https://www.elastic.co/guide/en/elasticsearch/guide/current/pluggable-similarites.html#bm25}.\n   *\n   * @param {number} [k1=1.2] - controls how quickly an increase in term frequency results in term-frequency saturation.\n   *                            Lower values result in quicker saturation, and higher values in slower saturation\n   * @param {number} [b=0.75] - controls how much effect field-length normalization should have.\n   *                            A value of 0.0 disables normalization completely, and a value of 1.0 normalizes fully\n   * @return {this}\n   */\n  BM25Similarity(k1: number = 1.2, b: number = 0.75) {\n    if (k1 < 0) {\n      throw TypeError(\"BM25s k1 must be a positive number.\");\n    }\n    if (b < 0 || b > 1) {\n      throw TypeError(\"BM25s b must be a number between 0 and 1 inclusive.\");\n    }\n\n    this._data.bm25 = {\n      k1,\n      b\n    };\n    return this;\n  }\n\n  bool(): BoolQueryBuilder {\n    return this._prepare(BoolQueryBuilder);\n  }\n\n  constantScore(): ConstantScoreQueryBuilder {\n    return this._prepare(ConstantScoreQueryBuilder);\n  }\n\n  term(field: string, term: string): TermQueryBuilder {\n    return this._prepare(TermQueryBuilder, field, term);\n  }\n\n  terms(field: string, terms: Array<string>): TermsQueryBuilder {\n    return this._prepare(TermsQueryBuilder, field, terms);\n  }\n\n  wildcard(field: string, wildcard: string): WildcardQueryBuilder {\n    return this._prepare(WildcardQueryBuilder, field, wildcard);\n  }\n\n  fuzzy(field: string, fuzzy: string): FuzzyQueryBuilder {\n    return this._prepare(FuzzyQueryBuilder, field, fuzzy);\n  }\n\n  match(field: string, query: string): MatchQueryBuilder {\n    return this._prepare(MatchQueryBuilder, field, query);\n  }\n\n  matchAll(): MatchAllQueryBuilder {\n    return this._prepare(MatchAllQueryBuilder);\n  }\n\n  prefix(field: string, prefix: string): PrefixQueryBuilder {\n    return this._prepare(PrefixQueryBuilder, field, prefix);\n  }\n\n  exists(field: string): ExistsQueryBuilder {\n    return this._prepare(ExistsQueryBuilder, field);\n  }\n\n  private _prepare<T extends BaseQueryBuilder>(queryType: { new(...args: any[]): T }, ...args: any[]): T {\n    const query = new queryType(...args, this._data.query);\n    query.build = () => {\n      return this._data;\n    };\n    return query;\n  }\n}\n\nexport type QueryTypes = BoolQuery | ConstantScoreQuery | TermQuery | TermsQuery | WildcardQuery | FuzzyQuery\n  | MatchQuery | MatchQueryAll | PrefixQuery | ExistsQuery;\n\nexport interface Query {\n  query: QueryTypes;\n  final_scoring?: boolean;\n  explain?: boolean;\n  bm25?: {\n    k1: number;\n    b: number;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/query_builder.ts","import {Long} from \"./long\";\n\nconst MASKS = [new Long(0x1), new Long(0x3), new Long(0x7), new Long(0xf),\n  new Long(0x1f), new Long(0x3f), new Long(0x7f), new Long(0xff),\n  new Long(0x1ff), new Long(0x3ff), new Long(0x7ff), new Long(0xfff),\n  new Long(0x1fff), new Long(0x3fff), new Long(0x7fff), new Long(0xffff),\n  new Long(0xf, 0x1fff), new Long(0xf, 0x3fff), new Long(0xf, 0x7fff), new Long(0xf, 0xffff),\n  new Long(0xff, 0x1fff), new Long(0xff, 0x3fff), new Long(0xff, 0x7fff), new Long(0xff, 0xffff),\n  new Long(0xfff, 0x1fff), new Long(0xfff, 0x3fff), new Long(0xfff, 0x7fff), new Long(0xfff, 0xffff),\n  new Long(0xffff, 0x1fff), new Long(0xffff, 0x3fff), new Long(0xffff, 0x7fff), new Long(0xffff, 0xffff),\n  new Long(0xfffff, 0x1fff), new Long(0xfffff, 0x3fff), new Long(0xfffff, 0x7fff), new Long(0xfffff, 0xffff),\n  new Long(0xffffff, 0x1fff), new Long(0xffffff, 0x3fff), new Long(0xffffff, 0x7fff), new Long(0xffffff, 0xffff),\n  new Long(0xfffffff, 0x1fff), new Long(0xfffffff, 0x3fff), new Long(0xfffffff, 0x7fff), new Long(0xfffffff, 0xffff),\n  new Long(0xffffffff, 0x1fff), new Long(0xffffffff, 0x3fff), new Long(0xffffffff, 0x7fff), new Long(0xffffffff, 0xffff),\n  new Long(0xfffffffff, 0x1fff), new Long(0xfffffffff, 0x3fff), new Long(0xfffffffff, 0x7fff), new Long(0xfffffffff, 0xffff),\n  new Long(0xffffffffff, 0x1fff), new Long(0xffffffffff, 0x3fff), new Long(0xffffffffff, 0x7fff), new Long(0xffffffffff, 0xffff),\n  new Long(0xfffffffffff, 0x1fff), new Long(0xfffffffffff, 0x3fff), new Long(0xfffffffffff, 0x7fff), new Long(0xfffffffffff, 0xffff),\n  new Long(0xffffffffffff, 0x1fff), new Long(0xffffffffffff, 0x3fff), new Long(0xffffffffffff, 0x7fff)];\n\n/**\n * From org/apache/lucene/util/automaton/LevenshteinAutomata.java#ParametricDescription\n * @hidden\n */\nexport class ParametricDescription {\n  protected _w: number;\n  private _n: number;\n  private _minErrors: number[];\n\n  constructor(w: number, n: number, minErrors: number[]) {\n    this._w = w;\n    this._n = n;\n    this._minErrors = minErrors;\n  }\n\n  /**\n   * Return the number of states needed to compute a Levenshtein DFA\n   */\n  public size(): number {\n    return this._minErrors.length * (this._w + 1);\n  }\n\n  /**\n   * Returns true if the <code>state</code> in any Levenshtein DFA is an accept state (final state).\n   */\n  public isAccept(absState: number): boolean {\n    // decode absState -> state, offset\n    let state = Math.floor(absState / (this._w + 1));\n    let offset = absState % (this._w + 1);\n    //assert offset >= 0;\n    return this._w - offset + this._minErrors[state] <= this._n;\n  }\n\n  /**\n   * Returns the position in the input word for a given <code>state</code>.\n   * This is the minimal boundary for the state.\n   */\n  public getPosition(absState: number): number {\n    return absState % (this._w + 1);\n  }\n\n  public unpack(data: Long[], index: number, bitsPerValue: number): number {\n    const bitLoc = bitsPerValue * index;\n    const dataLoc = (bitLoc >> 6);\n    const bitStart = (bitLoc & 63);\n\n    if (bitStart + bitsPerValue <= 64) {\n      // not split\n      return data[dataLoc].shiftRight(bitStart).and(MASKS[bitsPerValue - 1]).toInt();\n    } else {\n      // split\n      const part = 64 - bitStart;\n      return (data[dataLoc].shiftRight(bitStart).and(MASKS[part - 1])).toInt()\n        + (data[1 + dataLoc].and(MASKS[bitsPerValue - part - 1]).shiftLeft(part)).toInt();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/parametric_description.ts","import {FullTextSearch} from \"./full_text_search\";\nimport {Tokenizer} from \"./tokenizer\";\nimport {QueryBuilder} from \"./query_builder\";\n\nFullTextSearch[\"Tokenizer\"] = Tokenizer;\nFullTextSearch[\"QueryBuilder\"] = QueryBuilder;\n\nexport {FullTextSearch, Tokenizer, QueryBuilder};\nexport default FullTextSearch;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/index.ts","import {InvertedIndex} from \"./inverted_index\";\nimport {IndexSearcher} from \"./index_searcher\";\nimport {Tokenizer} from \"./tokenizer\";\nimport {Dict} from \"../../common/types\";\nimport {PLUGINS} from \"../../common/plugin\";\nimport {Query} from \"./query_builder\";\nimport {Scorer} from \"./scorer\";\n\nexport class FullTextSearch {\n  private _id: string;\n  private _docs: Set<number>;\n  private _idxSearcher: IndexSearcher;\n  private _invIdxs: Dict<InvertedIndex> = {};\n\n  /**\n   * Registers the full-text search as plugin.\n   */\n  public static register(): void {\n    PLUGINS[\"FullTextSearch\"] = FullTextSearch;\n  }\n\n  /**\n   * Initialize the full-text search for the given fields.\n   * @param {object[]} fields - the field options\n   * @param {string} fields.name - the name of the field\n   * @param {boolean=true} fields.store - flag to indicate if the full-text search should be stored on serialization or\n   *  rebuild on deserialization\n   * @param {boolean=true} fields.optimizeChanges - flag to indicate if deleting/updating a document should be optimized\n   *  (requires more memory but performs better)\n   * @param {Tokenizer=Tokenizer} fields.tokenizer - the tokenizer of the field\n   * @param {string} [id] - the property name of the document index\n   */\n  constructor(fields: FullTextSearch.FieldOptions[] = [], id?: string) {\n    // Create inverted indices for each field.\n    for (let i = 0; i < fields.length; i++) {\n      let field = fields[i];\n      this._invIdxs[field.name] = new InvertedIndex(field);\n    }\n    this._id = id;\n    this._docs = new Set();\n    this._idxSearcher = new IndexSearcher(this._invIdxs, this._docs);\n  }\n\n  public addDocument(doc: object, id: number = doc[this._id]): void {\n    let fieldNames = Object.keys(doc);\n    for (let i = 0, fieldName; i < fieldNames.length, fieldName = fieldNames[i]; i++) {\n      if (this._invIdxs[fieldName] !== undefined) {\n        this._invIdxs[fieldName].insert(doc[fieldName], id);\n      }\n    }\n    this._docs.add(id);\n    this._idxSearcher.setDirty();\n  }\n\n  public removeDocument(doc: object, id: number = doc[this._id]): void {\n    let fieldNames = Object.keys(this._invIdxs);\n    for (let i = 0; i < fieldNames.length; i++) {\n      this._invIdxs[fieldNames[i]].remove(id);\n    }\n    this._docs.delete(id);\n    this._idxSearcher.setDirty();\n  }\n\n  public updateDocument(doc: object, id: number = doc[this._id]): void {\n    this.removeDocument(doc, id);\n    this.addDocument(doc, id);\n  }\n\n  public clear(): void {\n    for (let id of this._docs) {\n      this.removeDocument(null, id);\n    }\n  }\n\n  public search(query: Query): Scorer.ScoreResult {\n    return this._idxSearcher.search(query);\n  }\n\n  public toJSON(): FullTextSearch.Serialization {\n    let serialized = {id: this._id, ii: {}};\n    let fieldNames = Object.keys(this._invIdxs);\n    for (let i = 0; i < fieldNames.length; i++) {\n      const fieldName = fieldNames[i];\n      serialized.ii[fieldName] = this._invIdxs[fieldName].toJSON();\n    }\n    return serialized;\n  }\n\n  public static fromJSONObject(serialized: FullTextSearch.Serialization, tokenizers: Dict<Tokenizer.FunctionSerialization> = {}): FullTextSearch {\n    let fts = new FullTextSearch([], serialized.id);\n    let fieldNames = Object.keys(serialized.ii);\n    for (let i = 0; i < fieldNames.length; i++) {\n      const fieldName = fieldNames[i];\n      fts._invIdxs[fieldName] = InvertedIndex.fromJSONObject(serialized.ii[fieldName], tokenizers[fieldName]);\n    }\n    return fts;\n  }\n}\n\nexport namespace FullTextSearch {\n  export interface FieldOptions extends InvertedIndex.FieldOptions {\n    name: string;\n  }\n\n  export interface Serialization {\n    id: string;\n    ii: Dict<InvertedIndex.Serialization>;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/full_text_search.ts","import {Scorer} from \"./scorer\";\nimport {InvertedIndex, toCodePoints} from \"./inverted_index\";\nimport {FuzzyQuery, Query, QueryBuilder, WildcardQuery} from \"./query_builder\";\nimport {Dict} from \"../../common/types\";\nimport {RunAutomaton} from \"./fuzzy/run_automaton\";\nimport {LevenshteinAutomata} from \"./fuzzy/levenshtein_automata\";\nimport QueryResults = Scorer.QueryResults;\nimport Index = InvertedIndex.Index;\n\n\n/**\n * @hidden\n */\nexport class IndexSearcher {\n  private _invIdxs: Dict<InvertedIndex>;\n  private _docs: Set<number>;\n  private _scorer: Scorer;\n\n  /**\n   * @param {object} invIdxs\n   */\n  constructor(invIdxs: Dict<InvertedIndex>, docs: Set<number>) {\n    this._invIdxs = invIdxs;\n    this._docs = docs;\n    this._scorer = new Scorer(this._invIdxs);\n  }\n\n  public search(query: Query): Scorer.ScoreResult {\n    let queryResults = this._recursive(query.query, true);\n\n    // Do final scoring.\n    if (query.final_scoring !== undefined ? query.final_scoring : true) {\n      return this._scorer.finalScore(query, queryResults);\n    }\n\n    const result: Scorer.ScoreResult = {};\n    for (const key of queryResults.keys()) {\n      result[key] = {score: 1};\n    }\n    return result;\n  }\n\n  public setDirty() {\n    this._scorer.setDirty();\n  }\n\n  private _recursive(query: any, doScoring: boolean) {\n    let queryResults: QueryResults = new Map();\n    const boost = query.boost !== undefined ? query.boost : 1;\n    const fieldName = query.field !== undefined ? query.field : null;\n\n    let root = null;\n    let tokenizer = null;\n    if (this._invIdxs[fieldName] !== undefined) {\n      root = this._invIdxs[fieldName].root;\n      tokenizer = this._invIdxs[fieldName].tokenizer;\n    }\n\n    switch (query.type) {\n      case \"bool\": {\n        queryResults = null;\n        if (query.must !== undefined) {\n          queryResults = this._getUnique(query.must.values, doScoring, queryResults);\n        }\n        if (query.filter !== undefined) {\n          queryResults = this._getUnique(query.filter.values, false, queryResults);\n        }\n        if (query.should !== undefined) {\n          let shouldDocs = this._getAll(query.should.values, doScoring);\n\n          let empty = false;\n          if (queryResults === null) {\n            queryResults = new Map();\n            empty = true;\n          }\n\n          let msm = 1;\n          // TODO: Enable percent and ranges.\n          if (query.minimum_should_match !== undefined) {\n            msm = query.minimum_should_match;\n            let shouldLength = query.should.values.length;\n            if (msm <= -1) {\n              msm = shouldLength + msm;\n            } else if (msm < 0) {\n              msm = shouldLength - Math.floor(shouldLength * -msm);\n            } else if (msm < 1) {\n              msm = Math.floor(shouldLength * msm);\n            }\n          }\n          // Remove all docs with fewer matches.\n          for (const [docId, res] of shouldDocs) {\n            if (res.length >= msm) {\n              if (queryResults.has(docId)) {\n                queryResults.get(docId).push(...res);\n              } else if (empty) {\n                queryResults.set(docId, res);\n              } else {\n                queryResults.delete(docId);\n              }\n            }\n          }\n        }\n        if (query.not !== undefined) {\n          let notDocs = this._getAll(query.not.values, false);\n          // Remove all docs.\n          for (const docId of notDocs.keys()) {\n            if (queryResults.has(docId)) {\n              queryResults.delete(docId);\n            }\n          }\n        }\n        break;\n      }\n      case \"term\": {\n        const cps = toCodePoints(query.value);\n        let termIdx = InvertedIndex.getTermIndex(cps, root);\n        this._scorer.score(fieldName, boost, termIdx, doScoring, queryResults, cps);\n        break;\n      }\n      case \"terms\": {\n        for (let i = 0; i < query.value.length; i++) {\n          const cps = toCodePoints(query.value[i]);\n          let termIdx = InvertedIndex.getTermIndex(cps, root);\n          this._scorer.score(fieldName, boost, termIdx, doScoring, queryResults, cps);\n        }\n        break;\n      }\n      case \"fuzzy\": {\n        const f = fuzzySearch(query, root);\n        for (let i = 0; i < f.length; i++) {\n          this._scorer.score(fieldName, boost * f[i].boost, f[i].index, doScoring, queryResults, f[i].term);\n        }\n        break;\n      }\n      case \"wildcard\": {\n        const enableScoring = query.enable_scoring !== undefined ? query.enable_scoring : false;\n        const w = wildcardSearch(query, root);\n        for (let i = 0; i < w.length; i++) {\n          this._scorer.score(fieldName, boost, w[i].index, doScoring && enableScoring, queryResults, w[i].term);\n        }\n        break;\n      }\n      case \"match_all\": {\n        for (let docId of this._docs) {\n          this._scorer.scoreConstant(boost, docId, queryResults);\n        }\n        break;\n      }\n      case \"constant_score\": {\n        let tmpQueryResults = this._getAll(query.filter.values, false);\n        // Add to each document a constant score.\n        for (const docId of tmpQueryResults.keys()) {\n          this._scorer.scoreConstant(boost, docId, queryResults);\n        }\n        break;\n      }\n      case \"prefix\": {\n        const enableScoring = query.enable_scoring !== undefined ? query.enable_scoring : false;\n        const cps = toCodePoints(query.value);\n        const termIdx = InvertedIndex.getTermIndex(cps, root);\n        if (termIdx !== null) {\n          const termIdxs = InvertedIndex.extendTermIndex(termIdx);\n          for (let i = 0; i < termIdxs.length; i++) {\n            this._scorer.score(fieldName, boost, termIdxs[i].index, doScoring && enableScoring, queryResults, [...cps, ...termIdxs[i].term]);\n          }\n        }\n        break;\n      }\n      case \"exists\": {\n        if (root !== null) {\n          for (const docId of this._invIdxs[fieldName].documentStore.keys()) {\n            this._scorer.scoreConstant(boost, docId, queryResults);\n          }\n        }\n        break;\n      }\n      case \"match\": {\n        let terms = tokenizer.tokenize(query.value);\n        let operator = query.operator !== undefined ? query.operator : \"or\";\n\n        let tmpQuery: any = new QueryBuilder().bool();\n        if (operator === \"or\") {\n          if (query.minimum_should_match !== undefined) {\n            tmpQuery = tmpQuery.minimumShouldMatch(query.minimum_should_match);\n          }\n          // Build a should query.\n          tmpQuery = tmpQuery.beginShould();\n        } else {\n          // Build a must query.\n          tmpQuery = tmpQuery.beginMust();\n        }\n        tmpQuery = tmpQuery.boost(boost);\n\n        if (query.fuzziness !== undefined) {\n          let prefixLength = query.prefix_length !== undefined ? query.prefix_length : 2;\n          let extended = query.extended !== undefined ? query.extended : false;\n          // Add each fuzzy.\n          for (let i = 0; i < terms.length; i++) {\n            tmpQuery = tmpQuery.fuzzy(fieldName, terms[i]).fuzziness(query.fuzziness).prefixLength(prefixLength).extended(extended);\n          }\n        } else {\n          // Add each term.\n          for (let i = 0; i < terms.length; i++) {\n            tmpQuery = tmpQuery.term(fieldName, terms[i]);\n          }\n        }\n        if (operator === \"or\") {\n          tmpQuery = tmpQuery.endShould();\n        } else {\n          tmpQuery = tmpQuery.endMust();\n        }\n        queryResults = this._recursive(tmpQuery.build().query, doScoring);\n\n        break;\n      }\n      default:\n        break;\n    }\n    return queryResults;\n  }\n\n  private _getUnique(queries: any[], doScoring: boolean, queryResults: QueryResults) {\n    if (queries.length === 0) {\n      return queryResults;\n    }\n\n    for (let i = 0; i < queries.length; i++) {\n      let currDocs = this._recursive(queries[i], doScoring);\n      if (queryResults === null) {\n        queryResults = this._recursive(queries[0], doScoring);\n        continue;\n      }\n\n      for (const docId of queryResults.keys()) {\n        if (!currDocs.has(docId)) {\n          queryResults.delete(docId);\n        } else {\n          queryResults.get(docId).push(...currDocs.get(docId));\n        }\n      }\n    }\n    return queryResults;\n  }\n\n  private _getAll(queries: any[], doScoring: boolean) {\n    let queryResults: QueryResults = new Map();\n    for (let i = 0; i < queries.length; i++) {\n      let currDocs = this._recursive(queries[i], doScoring);\n      for (const docId of currDocs.keys()) {\n        if (!queryResults.has(docId)) {\n          queryResults.set(docId, currDocs.get(docId));\n        } else {\n          queryResults.get(docId).push(...currDocs.get(docId));\n        }\n      }\n    }\n    return queryResults;\n  }\n}\n\ntype FuzzyResult = { index: Index, term: number[], boost: number };\n\n/**\n * Performs a fuzzy search.\n * @param {FuzzyQuery} query - the fuzzy query\n * @param {Index} root - the root index\n * @returns {FuzzyResult} - the results\n */\nfunction fuzzySearch(query: FuzzyQuery, root: Index): FuzzyResult[] {\n  let value = toCodePoints(query.value);\n  let fuzziness = query.fuzziness !== undefined ? query.fuzziness : \"AUTO\";\n  if (fuzziness === \"AUTO\") {\n    if (value.length <= 2) {\n      fuzziness = 0;\n    } else if (value.length <= 5) {\n      fuzziness = 1;\n    } else {\n      fuzziness = 2;\n    }\n  }\n  let prefixLength = query.prefix_length !== undefined ? query.prefix_length : 2;\n  let extended = query.extended !== undefined ? query.extended : false;\n\n  // Do just a prefix search if zero fuzziness.\n  if (fuzziness === 0) {\n    prefixLength = value.length;\n  }\n\n  let result: FuzzyResult[] = [];\n  let startIdx = root;\n  let prefix = value.slice(0, prefixLength);\n  let fuzzy = value;\n\n  // Perform a prefix search.\n  if (prefixLength !== 0) {\n    startIdx = InvertedIndex.getTermIndex(prefix, startIdx);\n    fuzzy = fuzzy.slice(prefixLength);\n  }\n\n  // No startIdx found.\n  if (startIdx === null) {\n    return result;\n  }\n\n  // Fuzzy is not necessary anymore, because prefix search includes the whole query value.\n  if (fuzzy.length === 0) {\n    if (extended) {\n      // Add all terms down the index.\n      const all = InvertedIndex.extendTermIndex(startIdx);\n      for (let i = 0; i < all.length; i++) {\n        result.push({index: all[i].index, term: all[i].term, boost: 1});\n      }\n    } else if (startIdx.dc !== undefined) {\n      // Add prefix search result.\n      result.push({index: startIdx, term: value, boost: 1});\n    }\n    return result;\n  }\n\n  // The matching term.\n  const term = [0];\n  // Create an automaton from the fuzzy.\n  const automaton = new RunAutomaton(new LevenshteinAutomata(fuzzy, fuzziness).toAutomaton());\n\n  function determineEditDistance(state: number, termLength: number, fuzzyLength: number): number {\n    // Check how many edits this fuzzy can still do.\n    let ed = 0;\n    state = automaton.step(state, 0);\n    if (state !== -1 && automaton.isAccept(state)) {\n      ed++;\n      state = automaton.step(state, 0);\n      if (state !== -1 && automaton.isAccept(state)) {\n        ed++;\n      }\n    }\n    // Include the term and fuzzy length.\n    ed -= Math.abs(termLength - fuzzyLength);\n    return fuzziness as number - ed;\n  }\n\n  function recursive(state: number, key: number, idx: Index) {\n    term[term.length - 1] = key;\n\n    // Check the current key of term with the automaton.\n    state = automaton.step(state, key);\n    if (state === -1) {\n      return;\n    }\n\n    if (automaton.isAccept(state)) {\n      if (extended) {\n        // Add all terms down the index.\n        let all = InvertedIndex.extendTermIndex(idx);\n        for (let i = 0; i < all.length; i++) {\n          result.push({index: all[i].index, term: all[i].term, boost: 1});\n        }\n        return;\n      } else if (idx.df !== undefined) {\n        // Calculate boost.\n        let distance = determineEditDistance(state, term.length, fuzzy.length);\n        let boost = 1 - distance / Math.min(prefix.length + term.length, value.length);\n        result.push({index: idx, term: [...prefix, ...term], boost});\n      }\n    }\n\n    term.push(0);\n    for (const child of idx) {\n      recursive(state, child[0], child[1]);\n    }\n    term.pop();\n  }\n\n  for (const child of startIdx) {\n    recursive(0, child[0], child[1]);\n  }\n\n  return result;\n}\n\ntype WildcardResult = { index: Index, term: number[] };\n\n/**\n * Performs a wildcard search.\n * @param {WildcardQuery} query - the wildcard query\n * @param {Index} root - the root index\n * @returns {Array} - the results\n */\nfunction wildcardSearch(query: WildcardQuery, root: Index): WildcardResult[] {\n  let wildcard = toCodePoints(query.value);\n  let result: WildcardResult[] = [];\n\n  function recursive(index: Index, idx: number = 0, term: number[] = [], escaped: boolean = false) {\n    if (index === null) {\n      return;\n    }\n\n    if (idx === wildcard.length) {\n      if (index.df !== undefined) {\n        result.push({index: index, term: term.slice()});\n      }\n      return;\n    }\n\n    // Escaped character.\n    if (!escaped && wildcard[idx] === 92 /* \\ */) {\n      recursive(index, idx + 1, term, true);\n    } else if (!escaped && wildcard[idx] === 63 /* ? */) {\n      for (const child of index) {\n        recursive(child[1], idx + 1, [...term, child[0]]);\n      }\n    } else if (!escaped && wildcard[idx] === 42 /* * */) {\n      // Check if asterisk is last wildcard character\n      if (idx + 1 === wildcard.length) {\n        const all = InvertedIndex.extendTermIndex(index);\n        for (let i = 0; i < all.length; i++) {\n          recursive(all[i].index, idx + 1, [...term, ...all[i].term]);\n        }\n      } else {\n        // Iterate over the whole tree.\n        recursive(index, idx + 1, term, false);\n        const indices: InvertedIndex.IndexTerm[] = [{index: index, term: []}];\n        do {\n          const index = indices.pop();\n          for (const child of index.index) {\n            recursive(child[1], idx + 1, [...term, ...index.term, child[0]]);\n            indices.push({index: child[1], term: [...index.term, child[0]]});\n          }\n        } while (indices.length !== 0);\n      }\n    } else {\n      recursive(InvertedIndex.getTermIndex([wildcard[idx]], index), idx + 1, [...term, wildcard[idx]]);\n    }\n  }\n\n  recursive(root);\n\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/index_searcher.ts","import {InvertedIndex} from \"./inverted_index\";\nimport {Dict} from \"../../common/types\";\nimport {Query} from \"./query_builder\";\n\n/**\n * @hidden\n */\nexport class Scorer {\n  private _invIdxs: Dict<InvertedIndex>;\n  private _cache: Dict<Scorer.IDFCache>;\n\n  constructor(invIdxs: Dict<InvertedIndex>) {\n    this._invIdxs = invIdxs;\n    this._cache = {};\n  }\n\n  public setDirty(): void {\n    this._cache = {};\n  }\n\n  public score(fieldName: string, boost: number, termIdx: InvertedIndex.Index, doScoring: boolean,\n               queryResults: Scorer.QueryResults, term: number[]): void {\n    if (termIdx === null || termIdx.dc === undefined) {\n      return;\n    }\n\n    const idf = this._idf(fieldName, termIdx.df);\n    for (const [docId, tf] of termIdx.dc) {\n      if (!queryResults.has(docId)) {\n        queryResults.set(docId, []);\n      }\n\n      if (doScoring) {\n        // BM25 scoring.\n        queryResults.get(docId).push({tf, idf, boost, fieldName, term});\n      } else {\n        // Constant scoring.\n        queryResults.set(docId, [{boost}]);\n      }\n    }\n  }\n\n  public scoreConstant(boost: number, docId: number, queryResults: Scorer.QueryResults) {\n    if (!queryResults.has(docId)) {\n      queryResults.set(docId, []);\n    }\n    queryResults.get(docId).push({boost});\n    return queryResults;\n  }\n\n  public finalScore(query: Query, queryResults: Scorer.QueryResults): Scorer.ScoreResult {\n    const result: Scorer.ScoreResult = {};\n    const k1 = query.bm25 !== undefined ? query.bm25.k1 : 1.2;\n    const b = query.bm25 !== undefined ? query.bm25.b : 0.75;\n    const explain = query.explain !== undefined ? query.explain : false;\n\n    for (const [docId, result1] of queryResults) {\n      let docScore = 0;\n      let docExplanation: Scorer.ScoreExplanation[] = [];\n      for (let j = 0; j < result1.length; j++) {\n        const queryResult = result1[j];\n        let score = 0;\n        if (queryResult.tf !== undefined) {\n          // BM25 scoring.\n          const tf = queryResult.tf;\n          const fieldLength = Scorer._calculateFieldLength(this._invIdxs[queryResult.fieldName].documentStore.get(+docId)\n            .fieldLength);\n          const avgFieldLength = this._avgFieldLength(queryResult.fieldName);\n          const tfNorm = (tf * (k1 + 1)) / (tf + k1 * (1 - b + b * (fieldLength / avgFieldLength)));\n          score = queryResult.idf * tfNorm * queryResult.boost;\n          if (explain) {\n            docExplanation.push({\n              boost: queryResult.boost,\n              score: score,\n              docID: docId,\n              fieldName: queryResult.fieldName,\n              index: String.fromCharCode(...queryResult.term),\n              idf: queryResult.idf,\n              tfNorm: tfNorm,\n              tf: tf,\n              fieldLength: fieldLength,\n              avgFieldLength: avgFieldLength,\n            });\n          }\n        } else {\n          // Constant scoring.\n          score = queryResult.boost;\n\n          if (explain) {\n            docExplanation.push({\n              boost: queryResult.boost,\n              score: score\n            });\n          }\n        }\n        docScore += score;\n      }\n      if (explain) {\n        result[docId] = {\n          score: docScore,\n          explanation: docExplanation\n        };\n      } else {\n        result[docId] = {\n          score: docScore\n        };\n      }\n    }\n    return result;\n  }\n\n  private static _calculateFieldLength(fieldLength: number): number {\n    // Dummy function to be compatible to lucene in unit tests.\n    return fieldLength;\n  }\n\n  private _getCache(fieldName: string): Scorer.IDFCache {\n    if (this._cache[fieldName] === undefined) {\n      const avgFieldLength = this._invIdxs[fieldName].totalFieldLength / this._invIdxs[fieldName].documentCount;\n      this._cache[fieldName] = {idfs: {}, avgFieldLength};\n    }\n    return this._cache[fieldName];\n  }\n\n  /**\n   * Returns the idf by either calculate it or use a cached one.\n   * @param {string} fieldName - the name of the field\n   * @param {number} docFreq - the doc frequency of the term\n   * @returns {number} the idf\n   * @private\n   */\n  private _idf(fieldName: string, docFreq: number): number {\n    const cache = this._getCache(fieldName);\n    if (cache.idfs[docFreq] !== undefined) {\n      return cache.idfs[docFreq];\n    }\n    return cache.idfs[docFreq] = Math.log(1 + (this._invIdxs[fieldName].documentCount - docFreq + 0.5) / (docFreq + 0.5));\n  }\n\n  private _avgFieldLength(fieldName: string): number {\n    return this._getCache(fieldName).avgFieldLength;\n  }\n}\n\nexport namespace Scorer {\n  export interface IDFCache {\n    idfs: Dict<number>;\n    avgFieldLength: number;\n  }\n\n  export interface QueryResult {\n    tf?: number; // Term frequency.\n    idf?: number; // Inverse document frequency\n    boost: number;\n    fieldName?: string;\n    term?: number[];\n  }\n\n  export type QueryResults = Map<number, QueryResult[]>;\n\n  export interface BM25Explanation {\n    boost: number;\n    score: number;\n    docID: number;\n    fieldName: string;\n    index: string;\n    idf: number;\n    tfNorm: number;\n    tf: number;\n    fieldLength: number;\n    avgFieldLength: number;\n  }\n\n  export interface ConstantExplanation {\n    boost: number;\n    score: number;\n  }\n\n  export type ScoreExplanation = BM25Explanation | ConstantExplanation;\n\n  export type ScoreResult = Dict<{ score: number, explanation?: ScoreExplanation[] }>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/scorer.ts","import {Automaton} from \"./automaton\";\n\n/**\n * From org/apache/lucene/util/automaton/RunAutomaton.java\n * @hidden\n */\nexport class RunAutomaton {\n  private _points: number[];\n  private _accept: boolean[];\n  private _transitions: number[];\n  private _classmap: number[];\n\n  constructor(automaton: Automaton) {\n    const size = automaton.getNumStates();\n    this._points = automaton.getStartPoints();\n    this._accept = new Array(size);\n    this._transitions = new Array(size * this._points.length);\n\n    for (let n = 0; n < size; n++) {\n      this._accept[n] = automaton.isAccept(n);\n      for (let c = 0; c < this._points.length; c++) {\n        // assert dest === -1 || dest < size;\n        this._transitions[n * this._points.length + c] = automaton.step(n, this._points[c]);\n      }\n    }\n\n    this._classmap = new Array(256 /* alphaSize */);\n    for (let i = 0, j = 0; j < this._classmap.length; j++) {\n      if (i + 1 < this._points.length && j === this._points[i + 1]) {\n        i++;\n      }\n      this._classmap[j] = i;\n    }\n  }\n\n  getCharClass(c: number): number {\n    // binary search\n    let a = 0;\n    let b = this._points.length;\n    while (b - a > 1) {\n      const d = (a + b) >>> 1;\n      if (this._points[d] > c) {\n        b = d;\n      } else if (this._points[d] < c) {\n        a = d;\n      } else {\n        return d;\n      }\n    }\n    return a;\n  }\n\n  step(state: number, c: number): number {\n    if (c >= this._classmap.length) {\n      return this._transitions[state * this._points.length + this.getCharClass(c)];\n    } else {\n      return this._transitions[state * this._points.length + this._classmap[c]];\n    }\n  }\n\n  isAccept(state: number): boolean {\n    return this._accept[state];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/run_automaton.ts","import {Automaton, MAX_CODE_POINT} from \"./automaton\";\nimport {Lev1TParametricDescription} from \"./lev1t_parametric_description\";\nimport {Lev2TParametricDescription} from \"./lev2t_parametric_description\";\n\n/**\n * From org/apache/lucene/util/automaton/LevenshteinAutomata.java\n * @hidden\n */\nexport class LevenshteinAutomata {\n  private _word: number[];\n  private _numRanges: number;\n  private _rangeLower: number[];\n  private _rangeUpper: number[];\n  private _description: Lev1TParametricDescription;\n  private _alphabet: number[];\n  private _editDistance: number;\n\n  constructor(input: number[], editDistance: number) {\n    this._word = input;\n    this._editDistance = editDistance;\n    this._alphabet = [...new Set(this._word)].sort((a, b) => a - b) as any;\n\n    this._numRanges = 0;\n    this._rangeLower = new Array(this._alphabet.length + 2);\n    this._rangeUpper = new Array(this._alphabet.length + 2);\n    // calculate the unicode range intervals that exclude the alphabet\n    // these are the ranges for all unicode characters not in the alphabet\n    let lower = 0;\n    for (let i = 0; i < this._alphabet.length; i++) {\n      const higher = this._alphabet[i];\n      if (higher > lower) {\n        this._rangeLower[this._numRanges] = lower;\n        this._rangeUpper[this._numRanges] = higher - 1;\n        this._numRanges++;\n      }\n      lower = higher + 1;\n    }\n    /* add the final endpoint */\n    if (lower <= MAX_CODE_POINT) {\n      this._rangeLower[this._numRanges] = lower;\n      this._rangeUpper[this._numRanges] = MAX_CODE_POINT;\n      this._numRanges++;\n    }\n\n    if (editDistance === 1) {\n      this._description = new Lev1TParametricDescription(input.length);\n    } else {\n      this._description = new Lev2TParametricDescription(input.length);\n    }\n  }\n\n  /**\n   * Transforms the NDFA to a DFA.\n   * @returns {Automaton}\n   */\n  public toAutomaton() {\n    let automat = new Automaton();\n    const range = 2 * this._editDistance + 1;\n\n    // the number of states is based on the length of the word and the edit distance\n    const numStates = this._description.size();\n\n    // Prefix is not needed to be handled by the automaton.\n    // stateOffset = 0;\n    automat.createState();\n\n    // create all states, and mark as accept states if appropriate\n    for (let i = 1; i < numStates; i++) {\n      let state = automat.createState();\n      automat.setAccept(state, this._description.isAccept(i));\n    }\n\n    for (let k = 0; k < numStates; k++) {\n      const xpos = this._description.getPosition(k);\n\n      if (xpos < 0) {\n        continue;\n      }\n\n      const end = xpos + Math.min(this._word.length - xpos, range);\n      for (let x = 0; x < this._alphabet.length; x++) {\n        const ch = this._alphabet[x];\n        const cvec = this.getVector(ch, xpos, end);\n        const dest = this._description.transition(k, xpos, cvec);\n\n        if (dest >= 0) {\n          automat.addTransition(k, dest, ch, ch);\n        }\n      }\n\n      const dest = this._description.transition(k, xpos, 0);\n      if (dest >= 0) {\n        for (let r = 0; r < this._numRanges; r++) {\n          automat.addTransition(k, dest, this._rangeLower[r], this._rangeUpper[r]);\n        }\n      }\n    }\n\n    // assert automat.deterministic;\n    automat.finishState();\n\n    return automat;\n  }\n\n  private getVector(x: number, pos: number, end: number) {\n    let vector = 0;\n    for (let i = pos; i < end; i++) {\n      vector <<= 1;\n      if (this._word[i] === x) {\n        vector |= 1;\n      }\n    }\n    return vector;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/levenshtein_automata.ts","/**\n * Transition with dest, min and max.\n * @hidden\n */\nexport declare type Transition = [number, number, number];\n\n/**\n * @type {number}\n * @hidden\n */\nexport const MIN_CODE_POINT = 0;\n/**\n * @type {number}\n * @hidden\n */\nexport const MAX_CODE_POINT = 1114111;\n\nfunction sortByDestMinMax(a: Transition, b: Transition) {\n  if (a[0] < b[0]) {\n    return -1;\n  } else if (a[0] > b[0]) {\n    return 1;\n  }\n  if (a[1] < b[1]) {\n    return -1;\n  } else if (a[1] > b[1]) {\n    return 1;\n  }\n  if (a[2] < b[2]) {\n    return -1;\n  } else if (a[2] > b[2]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction sortByMinMaxDest(a: Transition, b: Transition) {\n  if (a[1] < b[1]) {\n    return -1;\n  } else if (a[1] > b[1]) {\n    return 1;\n  }\n  if (a[2] < b[2]) {\n    return -1;\n  } else if (a[2] > b[2]) {\n    return 1;\n  }\n  if (a[0] < b[0]) {\n    return -1;\n  } else if (a[0] > b[0]) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * From org/apache/lucene/util/automaton/Automaton.java\n * @hidden\n */\nexport class Automaton {\n  private _stateTransitions: Transition[] = [];\n  private _accept: Set<number>;\n  private _nextState: number;\n  private _currState: number;\n  // public deterministic: boolean;\n  private _transitions: object;\n\n  constructor() {\n    this._stateTransitions = [];\n    this._accept = new Set();\n    this._nextState = 0;\n    this._currState = -1;\n    // this.deterministic = true;\n    this._transitions = {};\n  }\n\n  public isAccept(n: number): boolean {\n    return this._accept.has(n);\n  }\n\n  public createState(): number {\n    return this._nextState++;\n  }\n\n  public setAccept(state: number, accept: boolean): void {\n    if (accept) {\n      this._accept.add(state);\n    } else {\n      this._accept.delete(state);\n    }\n  }\n\n  public finishState(): void {\n    if (this._currState !== -1) {\n      this._finishCurrentState();\n      this._currState = -1;\n    }\n  }\n\n  private _finishCurrentState(): void {\n    // Sort all transitions.\n    this._stateTransitions.sort(sortByDestMinMax);\n\n    let upto = 0;\n    let p: Transition = [-1, -1, -1];\n\n    for (let i = 0, len = this._stateTransitions.length; i < len; i++) {\n      let t = this._stateTransitions[i];\n      if (p[0] === t[0]) {\n        if (t[1] <= p[2] + 1) {\n          if (t[2] > p[2]) {\n            p[2] = t[2];\n          }\n        } else {\n          if (p[0] !== -1) {\n            this._stateTransitions[upto][0] = p[0];\n            this._stateTransitions[upto][1] = p[1];\n            this._stateTransitions[upto][2] = p[2];\n            upto++;\n          }\n          p[1] = t[1];\n          p[2] = t[2];\n        }\n      } else {\n        if (p[0] !== -1) {\n          this._stateTransitions[upto][0] = p[0];\n          this._stateTransitions[upto][1] = p[1];\n          this._stateTransitions[upto][2] = p[2];\n          upto++;\n        }\n        p[0] = t[0];\n        p[1] = t[1];\n        p[2] = t[2];\n      }\n    }\n\n    if (p[0] !== -1) {\n      // Last transition\n      this._stateTransitions[upto][0] = p[0];\n      this._stateTransitions[upto][1] = p[1];\n      this._stateTransitions[upto][2] = p[2];\n      upto++;\n    }\n\n    this._transitions[this._currState] = this._stateTransitions.slice(0, upto).sort(sortByMinMaxDest);\n\n    // if (this.deterministic && upto > 1) {\n    //   let lastMax = this.stateTransitions[0][2];\n    //   for (let i = 1; i < upto; i++) {\n    //     let min = this.stateTransitions[i][1];\n    //     if (min <= lastMax) {\n    //       this.deterministic = false;\n    //       break;\n    //     }\n    //     lastMax = this.stateTransitions[i][2];\n    //   }\n    // }\n\n    this._stateTransitions = [];\n  }\n\n  public getStartPoints(): number[] {\n    const pointset = new Set();\n    pointset.add(MIN_CODE_POINT);\n\n    const states = Object.keys(this._transitions);\n    for (let i = 0; i < states.length; i++) {\n      let trans = this._transitions[states[i]];\n      for (let j = 0; j < trans.length; j++) {\n        let tran = trans[j];\n        pointset.add(tran[1]);\n        if (tran[2] < MAX_CODE_POINT) {\n          pointset.add(tran[2] + 1);\n        }\n      }\n    }\n    return Array.from(pointset).sort((a, b) => a - b);\n  }\n\n  public step(state: number, label: number): number {\n    let trans = this._transitions[state];\n    if (trans) {\n      for (let i = 0; i < trans.length; i++) {\n        let tran = trans[i];\n        if (tran[1] <= label && label <= tran[2]) {\n          return tran[0];\n        }\n      }\n    }\n    return -1;\n  }\n\n  public getNumStates(): number {\n    return this._nextState;\n  }\n\n  public addTransition(source: number, dest: number, min: number, max: number): void {\n    if (this._currState !== source) {\n      if (this._currState !== -1) {\n        this._finishCurrentState();\n      }\n      this._currState = source;\n    }\n    this._stateTransitions.push([dest, min, max]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/automaton.ts","import {Long} from \"./long\";\nimport {ParametricDescription} from \"./parametric_description\";\n\n// 1 vectors; 2 states per vector; array length = 2\nconst toStates0 = [new Long(0x2)];\nconst offsetIncrs0 = [new Long(0x0)];\n\n// 2 vectors; 3 states per vector; array length = 6\nconst toStates1 = [new Long(0xa43)];\n\nconst offsetIncrs1 = [new Long(0x38)];\n\n// 4 vectors; 6 states per vector; array length = 24\nconst toStates2 = [new Long(0x82140003, 0x34534914), new Long(0x6d)];\nconst offsetIncrs2 = [new Long(0x55a20000, 0x5555)];\n\n// 8 vectors; 6 states per vector; array length = 48\nconst toStates3 = [new Long(0x900C0003, 0x21520854), new Long(0x4534916d, 0x5b4d19a2), new Long(0xda34)];\nconst offsetIncrs3 = [new Long(0x20fc0000, 0x5555ae0a), new Long(0x55555555)];\n\n// state map\n//   0 -> [(0, 0)]\n//   1 -> [(0, 1)]\n//   2 -> [(0, 1), (1, 1)]\n//   3 -> [(0, 1), (2, 1)]\n//   4 -> [t(0, 1), (0, 1), (1, 1), (2, 1)]\n//   5 -> [(0, 1), (1, 1), (2, 1)]\n\n/**\n * From org/apache/lucene/util/automaton/Lev1TParametricDescription.java\n * @hidden\n */\nexport class Lev1TParametricDescription extends ParametricDescription {\n  constructor(w: number) {\n    super(w, 1, [0, 1, 0, -1, -1, -1]);\n  }\n\n  public transition(absState: number, position: number, vector: number): number {\n    // null absState should never be passed in\n    //assert absState != -1;\n\n    // decode absState -> state, offset\n    let state = Math.floor(absState / (this._w + 1));\n    let offset = absState % (this._w + 1);\n    //assert offset >= 0;\n\n    if (position === this._w) {\n      if (state < 2) {\n        const loc = vector * 2 + state;\n        offset += this.unpack(offsetIncrs0, loc, 1);\n        state = this.unpack(toStates0, loc, 2) - 1;\n      }\n    } else if (position === this._w - 1) {\n      if (state < 3) {\n        const loc = vector * 3 + state;\n        offset += this.unpack(offsetIncrs1, loc, 1);\n        state = this.unpack(toStates1, loc, 2) - 1;\n      }\n    } else if (position === this._w - 2) {\n      if (state < 6) {\n        const loc = vector * 6 + state;\n        offset += this.unpack(offsetIncrs2, loc, 2);\n        state = this.unpack(toStates2, loc, 3) - 1;\n      }\n    } else {\n      if (state < 6) {\n        const loc = vector * 6 + state;\n        offset += this.unpack(offsetIncrs3, loc, 2);\n        state = this.unpack(toStates3, loc, 3) - 1;\n      }\n    }\n\n    if (state === -1) {\n      // null state\n      return -1;\n    } else {\n      // translate back to abs\n      return state * (this._w + 1) + offset;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/lev1t_parametric_description.ts","import {Long} from \"./long\";\nimport {ParametricDescription} from \"./parametric_description\";\n\n// 1 vectors; 3 states per vector; array length = 3\nconst toStates0 = /*2 bits per value */ [\n  new Long(0x23)\n];\nconst offsetIncrs0 = /*1 bits per value */ [\n  new Long(0x0)\n];\n\n// 2 vectors; 5 states per vector; array length = 10\nconst toStates1 = /*3 bits per value */ [\n  new Long(0x13688b44)\n];\nconst offsetIncrs1 = /*1 bits per value */ [\n  new Long(0x3e0)\n];\n\n// 4 vectors; 13 states per vector; array length = 52\nconst toStates2 = /*4 bits per value */ [\n  new Long(0x5200b504, 0x60dbb0b0), new Long(0x27062227, 0x52332176), new Long(0x14323235, 0x23555432), new Long(0x4354)\n];\nconst offsetIncrs2 = /*2 bits per value */ [\n  new Long(0x00002000, 0x555080a8), new Long(0x55555555, 0x55)\n];\n\n// 8 vectors; 28 states per vector; array length = 224\nconst toStates3 = /*5 bits per value */ [\n  new Long(0x40059404, 0xe701c029), new Long(0x00a50000, 0xa0101620), new Long(0xa1416288, 0xb02c8c40), new Long(0x310858c0, 0xa821032),\n  new Long(0x0d28b201, 0x31442398), new Long(0x847788e0, 0x5281e528), new Long(0x08c2280e, 0xa23980d3), new Long(0xa962278c, 0x1e3294b1),\n  new Long(0x2288e528, 0x8c41309e), new Long(0x021aca21, 0x11444409), new Long(0x86b1086b, 0x11a46248), new Long(0x1d6240c4, 0x2a625894),\n  new Long(0x489074ad, 0x5024a50b), new Long(0x520c411a, 0x14821aca), new Long(0x0b594a44, 0x5888b589), new Long(0xc411a465, 0x941d6520),\n  new Long(0xad6a62d4, 0x8b589075), new Long(0x1a5055a4)\n];\nconst offsetIncrs3 = /*2 bits per value */ [\n  new Long(0x00002000, 0x30c302), new Long(0xc3fc333c, 0x2a0030f3), new Long(0x8282a820, 0x233a0032), new Long(0x32b283a8, 0x55555555),\n  new Long(0x55555555, 0x55555555), new Long(0x55555555, 0x55555555), new Long(0x55555555, 0x55555555)\n];\n\n// 16 vectors; 45 states per vector; array length = 720\nconst toStates4 = /*6 bits per value */ [\n  new Long(0x002c5004, 0x3801450), new Long(0x00000e38, 0xc500014b), new Long(0x51401402, 0x514), new Long(0x0),\n  new Long(0x14010000, 0x518000b), new Long(0x28e20230, 0x9f1c208), new Long(0x830a70c2, 0x219f0df0), new Long(0x08208200, 0x82000082),\n  new Long(0x60800800, 0x8050501), new Long(0x02602643, 0x30820986), new Long(0x50508064, 0x45640142), new Long(0x20000831, 0x8500514),\n  new Long(0x85002082, 0x41405820), new Long(0x0990c201, 0x45618098), new Long(0x50a01051, 0x8316d0c), new Long(0x050df0e0, 0x21451420),\n  new Long(0x14508214, 0xd142140), new Long(0x50821c60, 0x3c21c018), new Long(0xcb142087, 0x1cb1403), new Long(0x1851822c, 0x80082145),\n  new Long(0x20800020, 0x200208), new Long(0x87180345, 0xd0061820), new Long(0x24976b09, 0xcb0a81cb), new Long(0x624709d1, 0x8b1a60e),\n  new Long(0x82249089, 0x2490820), new Long(0x00d2c024, 0xc31421c6), new Long(0x15454423, 0x3c314515), new Long(0xc21cb140, 0x31853c22),\n  new Long(0x2c208214, 0x4514500b), new Long(0x508b0051, 0x8718034), new Long(0x5108f0c5, 0xb2cb4551), new Long(0x1cb0a810, 0xe824715d),\n  new Long(0x908b0e60, 0x1422cb14), new Long(0xc02cb145, 0x30812c22), new Long(0x0cb1420c, 0x84202202), new Long(0x20ce0850, 0x5c20ce08),\n  new Long(0x8b0d70c2, 0x20820820), new Long(0x14214208, 0x42085082), new Long(0x50830c20, 0x9208340), new Long(0x13653592, 0xc6134dc6),\n  new Long(0x6dc4db4d, 0xd309341c), new Long(0x54d34d34, 0x6424d908), new Long(0x030814c2, 0x92072c22), new Long(0x24a30930, 0x4220724b),\n  new Long(0x25c920e2, 0x2470d720), new Long(0x975c9082, 0x92c92d70), new Long(0x04924e08, 0xcb0880c2), new Long(0xc24c2481, 0x45739728),\n  new Long(0xda6174da, 0xc6da4db5), new Long(0x5d30971d, 0x4b5d35d7), new Long(0x93825ce2, 0x1030815c), new Long(0x020cb145, 0x51442051),\n  new Long(0x2c220e2c, 0xc538210e), new Long(0x52cb0d70, 0x8514214), new Long(0x85145142, 0x204b0850), new Long(0x4051440c, 0x92156083),\n  new Long(0xa60e6595, 0x4d660e4d), new Long(0x1c6dc658, 0x94d914e4), new Long(0x1454d365, 0x82642659), new Long(0x51030813, 0x2892072c),\n  new Long(0xcb2ca30b, 0xe2c22072), new Long(0x20538910, 0x452c70d7), new Long(0x708e3891, 0x8b2cb2d), new Long(0xc204b24e, 0x81cb1440),\n  new Long(0x28c2ca24, 0xda44e38e), new Long(0x85d660e4, 0x1dc6da65), new Long(0x8e5d914e, 0xe2cb5d33), new Long(0x38938238)\n];\nconst offsetIncrs4 = /*3 bits per value */ [\n  new Long(0x00080000, 0x30020000), new Long(0x20c060), new Long(0x04000000, 0x81490000), new Long(0x10824824, 0x40249241),\n  new Long(0x60002082, 0xdb6030c3), new Long(0x301b0d80, 0x6c36c06c), new Long(0x000db0db, 0xb01861b0), new Long(0x9188e06d, 0x1b703620),\n  new Long(0x06d86db7, 0x8009200), new Long(0x02402490, 0x4920c24), new Long(0x08249009, 0x490002), new Long(0x28124804, 0x49081281),\n  new Long(0x124a44a2, 0x34800104), new Long(0x0d24020c, 0xc3093090), new Long(0x24c24d24, 0x40009a09), new Long(0x9201061a, 0x4984a06),\n  new Long(0x71269262, 0x494d0492), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249),\n  new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924),\n  new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492),\n  new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249),\n  new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x2492)\n];\n\n// 32 vectors; 45 states per vector; array length = 1440\nconst toStates5 = /*6 bits per value */ [\n  new Long(0x002c5004, 0x3801450), new Long(0x00000e38, 0xc500014b), new Long(0x51401402, 0x514), new Long(0x0),\n  new Long(0x14010000, 0x514000b), new Long(0x038e00e0, 0x550000), new Long(0x0600b180, 0x26451850), new Long(0x08208208, 0x82082082),\n  new Long(0x40820820, 0x2c500), new Long(0x808c0146, 0x70820a38), new Long(0x9c30827c, 0xc37c20c2), new Long(0x20800867, 0x208208),\n  new Long(0x02002080, 0xb1401020), new Long(0x00518000, 0x828e2023), new Long(0x209f1c20, 0x830a70c), new Long(0x853df0df, 0x51451450),\n  new Long(0x14508214, 0x16142142), new Long(0x30805050, 0x60260264), new Long(0x43082098, 0x25050806), new Long(0x14564014, 0x42000083),\n  new Long(0x20850051, 0x8500208), new Long(0x14140582, 0x80990c20), new Long(0x08261809, 0x82019202), new Long(0x90060941, 0x8920519),\n  new Long(0xc22cb242, 0x22492492), new Long(0x0162492c, 0x43080505), new Long(0x86026026, 0x80414515), new Long(0xc5b43142, 0x37c38020),\n  new Long(0x14508014, 0x42085085), new Long(0x50850051, 0x1414058), new Long(0x980990c2, 0x51456180), new Long(0x0c50a010, 0xe008316d),\n  new Long(0x508b21f0, 0x2c52cb2c), new Long(0xc22cb249, 0x600d2c92), new Long(0x1850821c, 0x873c21c0), new Long(0x03cb1420, 0x2c01cb14),\n  new Long(0x45185182, 0x20800821), new Long(0x08208000, 0x45002002), new Long(0x20871803, 0x8700614), new Long(0x050821cf, 0x740500f5),\n  new Long(0x18609000, 0x934d9646), new Long(0x30824d30, 0x4c24d34d), new Long(0xc600d642, 0x1860821), new Long(0x25dac274, 0xc2a072c9),\n  new Long(0x91c27472, 0x2c698398), new Long(0x89242242, 0x92420820), new Long(0x34b00900, 0x82087180), new Long(0xb09d0061, 0x1cb24976),\n  new Long(0x9d1cb0a8, 0x60e62470), new Long(0x1574ce3e, 0xd31455d7), new Long(0x25c25d74, 0x1c600d38), new Long(0x423c3142, 0x51515454),\n  new Long(0x1403c314, 0xc22c21cb), new Long(0x21431853, 0xb2c208), new Long(0x05145145, 0x34508b0), new Long(0x0c508718, 0x5515108f),\n  new Long(0xf2051454, 0x8740500), new Long(0x0618f090, 0xe2534d92), new Long(0x6592c238, 0x49382659), new Long(0x21c600d6, 0x4423c314),\n  new Long(0xcb2d1545, 0x72c2a042), new Long(0xa091c574, 0x422c3983), new Long(0x508b2c52, 0xb2c514), new Long(0x8034b08b, 0xf0c50871),\n  new Long(0x45515108, 0xa810b2cb), new Long(0x715d1cb0, 0x2260e824), new Long(0x8e2d74ce, 0xe6592c53), new Long(0x38938238, 0x420c3081),\n  new Long(0x22020cb1, 0x8508420), new Long(0xce0820ce, 0x70c25c20), new Long(0x08208b0d, 0x42082082), new Long(0x50821421, 0xc204208),\n  new Long(0x832c5083, 0x21080880), new Long(0x0838c214, 0xa5083882), new Long(0xa9c39430, 0xaaaaaaaa), new Long(0x9fa9faaa, 0x1aaa7eaa),\n  new Long(0x1420c308, 0x824820d0), new Long(0x84d94d64, 0x7184d371), new Long(0x1b7136d3, 0x34c24d07), new Long(0x1534d34d, 0x99093642),\n  new Long(0x30c20530, 0x8340508), new Long(0x53592092, 0x34dc6136), new Long(0x4db4dc61, 0xa479c6dc), new Long(0x4924924a, 0x920a9f92),\n  new Long(0x8192a82a, 0x72c22030), new Long(0x30930920, 0x724b24a), new Long(0x920e2422, 0xd72025c), new Long(0xc9082247, 0x92d70975),\n  new Long(0x24e0892c, 0x880c2049), new Long(0xc2481cb0, 0x2c928c24), new Long(0x89088749, 0x80a52488), new Long(0xaac74394, 0x6a861b2a),\n  new Long(0xab27b278, 0x81b2ca6), new Long(0x072c2203, 0xa3093092), new Long(0x6915ce5c, 0xd76985d3), new Long(0x771b6936, 0x5d74c25c),\n  new Long(0x892d74d7, 0x724e0973), new Long(0x0880c205, 0x4c2481cb), new Long(0x739728c2, 0x6174da45), new Long(0xda4db5da, 0x4aa175c6),\n  new Long(0x86486186, 0x6a869b27), new Long(0x308186ca, 0xcb14510), new Long(0x44205102, 0x220e2c51), new Long(0x38210e2c, 0xcb0d70c5),\n  new Long(0x51421452, 0x14514208), new Long(0x4b085085, 0x51440c20), new Long(0x1440832c, 0xcb145108), new Long(0x488b0888, 0x94316208),\n  new Long(0x9f7e79c3, 0xfaaa7dfa), new Long(0x7ea7df7d, 0x30819ea), new Long(0x20d01451, 0x65648558), new Long(0x93698399, 0x96135983),\n  new Long(0x39071b71, 0xd9653645), new Long(0x96451534, 0x4e09909), new Long(0x051440c2, 0x21560834), new Long(0x60e65959, 0xd660e4da),\n  new Long(0xc6dc6584, 0x9207e979), new Long(0xdf924820, 0xa82a8207), new Long(0x103081a6, 0x892072c5), new Long(0xb2ca30b2, 0x2c22072c),\n  new Long(0x0538910e, 0x52c70d72), new Long(0x08e38914, 0x8b2cb2d7), new Long(0x204b24e0, 0x1cb1440c), new Long(0x8c2ca248, 0x874b2cb2),\n  new Long(0x24488b08, 0x43948162), new Long(0x9b1f7e77, 0x9e786aa6), new Long(0xeca6a9e7, 0x51030819), new Long(0x2892072c, 0x8e38a30b),\n  new Long(0x83936913, 0x69961759), new Long(0x4538771b, 0x74ce3976), new Long(0x08e38b2d, 0xc204e24e), new Long(0x81cb1440, 0x28c2ca24),\n  new Long(0xda44e38e, 0x85d660e4), new Long(0x75c6da65, 0x698607e9), new Long(0x99e7864a, 0xa6ca6aa6)\n];\nconst offsetIncrs5 = /*3 bits per value */ [\n  new Long(0x00080000, 0x30020000), new Long(0x20c060), new Long(0x04000000, 0x1000000), new Long(0x50603018, 0xdb6db6db),\n  new Long(0x00002db6, 0xa4800002), new Long(0x41241240, 0x12492088), new Long(0x00104120, 0x40000100), new Long(0x92092052, 0x2492c420),\n  new Long(0x096592d9, 0xc30d800), new Long(0xc36036d8, 0xb01b0c06), new Long(0x6c36db0d, 0x186c0003), new Long(0xb01b6c06, 0xad860361),\n  new Long(0x5b6dd6dd, 0x360001b7), new Long(0x0db6030c, 0xc412311c), new Long(0xb6e36e06, 0xdb0d), new Long(0xdb01861b, 0x9188e06),\n  new Long(0x71b72b62, 0x6dd6db), new Long(0x00800920, 0x40240249), new Long(0x904920c2, 0x20824900), new Long(0x40049000, 0x12012480),\n  new Long(0xa4906120, 0x5524ad4a), new Long(0x02480015, 0x40924020), new Long(0x48409409, 0x92522512), new Long(0x24000820, 0x49201001),\n  new Long(0x204a04a0, 0x29128924), new Long(0x00055549, 0x900830d2), new Long(0x24c24034, 0x934930c), new Long(0x02682493, 0x4186900),\n  new Long(0x61201a48, 0x9a498612), new Long(0x355249d4, 0xc348001), new Long(0x940d2402, 0x24c40930), new Long(0x0924e24d, 0x1a40009a),\n  new Long(0x06920106, 0x6204984a), new Long(0x92712692, 0x92494d54), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924),\n  new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492),\n  new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249),\n  new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924),\n  new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492),\n  new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249),\n  new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924),\n  new Long(0x49249249, 0x92492492), new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492),\n  new Long(0x24924924, 0x49249249), new Long(0x92492492, 0x24924924), new Long(0x49249249, 0x92492492), new Long(0x24924924)\n];\n\n// state map\n//   0 -> [(0, 0)]\n//   1 -> [(0, 2)]\n//   2 -> [(0, 1)]\n//   3 -> [(0, 1), (1, 1)]\n//   4 -> [(0, 2), (1, 2)]\n//   5 -> [t(0, 2), (0, 2), (1, 2), (2, 2)]\n//   6 -> [(0, 2), (2, 1)]\n//   7 -> [(0, 1), (2, 2)]\n//   8 -> [(0, 2), (2, 2)]\n//   9 -> [(0, 1), (1, 1), (2, 1)]\n//   10 -> [(0, 2), (1, 2), (2, 2)]\n//   11 -> [(0, 1), (2, 1)]\n//   12 -> [t(0, 1), (0, 1), (1, 1), (2, 1)]\n//   13 -> [(0, 2), (1, 2), (2, 2), (3, 2)]\n//   14 -> [t(0, 2), (0, 2), (1, 2), (2, 2), (3, 2)]\n//   15 -> [(0, 2), t(1, 2), (1, 2), (2, 2), (3, 2)]\n//   16 -> [(0, 2), (2, 1), (3, 1)]\n//   17 -> [(0, 1), t(1, 2), (2, 2), (3, 2)]\n//   18 -> [(0, 2), (3, 2)]\n//   19 -> [(0, 2), (1, 2), t(1, 2), (2, 2), (3, 2)]\n//   20 -> [t(0, 2), (0, 2), (1, 2), (3, 1)]\n//   21 -> [(0, 1), (1, 1), (3, 2)]\n//   22 -> [(0, 2), (2, 2), (3, 2)]\n//   23 -> [(0, 2), (1, 2), (3, 1)]\n//   24 -> [(0, 2), (1, 2), (3, 2)]\n//   25 -> [(0, 1), (2, 2), (3, 2)]\n//   26 -> [(0, 2), (3, 1)]\n//   27 -> [(0, 1), (3, 2)]\n//   28 -> [(0, 2), (2, 1), (4, 2)]\n//   29 -> [(0, 2), t(1, 2), (1, 2), (2, 2), (3, 2), (4, 2)]\n//   30 -> [(0, 2), (1, 2), (4, 2)]\n//   31 -> [(0, 2), (1, 2), (3, 2), (4, 2)]\n//   32 -> [(0, 2), (2, 2), (3, 2), (4, 2)]\n//   33 -> [(0, 2), (1, 2), t(2, 2), (2, 2), (3, 2), (4, 2)]\n//   34 -> [(0, 2), (1, 2), (2, 2), t(2, 2), (3, 2), (4, 2)]\n//   35 -> [(0, 2), (3, 2), (4, 2)]\n//   36 -> [(0, 2), t(2, 2), (2, 2), (3, 2), (4, 2)]\n//   37 -> [t(0, 2), (0, 2), (1, 2), (2, 2), (4, 2)]\n//   38 -> [(0, 2), (1, 2), (2, 2), (4, 2)]\n//   39 -> [t(0, 2), (0, 2), (1, 2), (2, 2), (3, 2), (4, 2)]\n//   40 -> [(0, 2), (1, 2), (2, 2), (3, 2), (4, 2)]\n//   41 -> [(0, 2), (4, 2)]\n//   42 -> [t(0, 2), (0, 2), (1, 2), (2, 2), t(2, 2), (3, 2), (4, 2)]\n//   43 -> [(0, 2), (2, 2), (4, 2)]\n//   44 -> [(0, 2), (1, 2), t(1, 2), (2, 2), (3, 2), (4, 2)]\n\n/**\n * From org/apache/lucene/util/automaton/Lev2TParametricDescription.java\n * @hidden\n */\nexport class Lev2TParametricDescription extends ParametricDescription {\n  constructor(w: number) {\n    super(w, 2, [0, 2, 1, 0, 1, 0, -1, 0, 0, -1, 0, -1, -1, -1, -1, -1, -2, -1, -1, -1, -2, -1, -1, -2, -1, -1, -2, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]);\n  }\n\n  public transition(absState: number, position: number, vector: number): number {\n    // null absState should never be passed in\n    // assert absState != -1;\n\n    // decode absState -> state, offset\n    let state = Math.floor(absState / (this._w + 1));\n    let offset = absState % (this._w + 1);\n    // assert offset >= 0;\n\n    if (position === this._w) {\n      if (state < 3) {\n        const loc = vector * 3 + state;\n        offset += this.unpack(offsetIncrs0, loc, 1);\n        state = this.unpack(toStates0, loc, 2) - 1;\n      }\n    } else if (position === this._w - 1) {\n      if (state < 5) {\n        const loc = vector * 5 + state;\n        offset += this.unpack(offsetIncrs1, loc, 1);\n        state = this.unpack(toStates1, loc, 3) - 1;\n      }\n    } else if (position === this._w - 2) {\n      if (state < 13) {\n        const loc = vector * 13 + state;\n        offset += this.unpack(offsetIncrs2, loc, 2);\n        state = this.unpack(toStates2, loc, 4) - 1;\n      }\n    } else if (position === this._w - 3) {\n      if (state < 28) {\n        const loc = vector * 28 + state;\n        offset += this.unpack(offsetIncrs3, loc, 2);\n        state = this.unpack(toStates3, loc, 5) - 1;\n      }\n    } else if (position === this._w - 4) {\n      if (state < 45) {\n        const loc = vector * 45 + state;\n        offset += this.unpack(offsetIncrs4, loc, 3);\n        state = this.unpack(toStates4, loc, 6) - 1;\n      }\n    } else {\n      if (state < 45) {\n        const loc = vector * 45 + state;\n        offset += this.unpack(offsetIncrs5, loc, 3);\n        state = this.unpack(toStates5, loc, 6) - 1;\n      }\n    }\n\n    if (state === -1) {\n      // null state\n      return -1;\n    } else {\n      // translate back to abs\n      return state * (this._w + 1) + offset;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/full-text-search/src/fuzzy/lev2t_parametric_description.ts","function getGlobal(): any {\n  let glob;\n  (function (global) {\n    glob = global;\n  })(global !== undefined && global || this);\n  return glob;\n}\n\n\nfunction create(): void {\n  const global = getGlobal();\n  const sym = Symbol.for(\"LOKI\") as any;\n  if (global[sym] === undefined) {\n    global[sym] = {\n    };\n  }\n  return global[sym];\n}\n\n/**\n * @hidden\n */\nexport const PLUGINS = create();\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/common/plugin.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}