(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory();else if(typeof define==="function"&&define.amd)define("@lokidb/loki",[],factory);else if(typeof exports==="object")exports["@lokidb/loki"]=factory();else{root["@lokidb/loki"]=factory();root["Loki"]=root["@lokidb/loki"].default}})(typeof self!=="undefined"?self:this,function(){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter})}};__webpack_require__.r=function(exports){if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if(mode&4&&typeof value==="object"&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,"default",{enumerable:true,value:value});if(mode&2&&typeof value!="string")for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=8)}([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return ComparatorMap});var _operator_packages__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2);let ComparatorMap={js:CreateJavascriptComparator(),"abstract-js":CreateAbstractJavascriptComparator(),"abstract-date":CreateAbstractDateJavascriptComparator(),loki:CreateLokiComparator()};function CreateJavascriptComparator(){return(val,val2)=>{if(val===val2)return 0;if(val<val2)return-1;return 1}}function CreateAbstractJavascriptComparator(){return(val,val2)=>{if(val==val2)return 0;if(val<val2)return-1;return 1}}function CreateAbstractDateJavascriptComparator(){return(val,val2)=>{let v1=new Date(val).toISOString();let v2=new Date(val2).toISOString();if(v1==v2)return 0;if(v1<v2)return-1;return 1}}function CreateLokiComparator(){return(val,val2)=>{if(Object(_operator_packages__WEBPACK_IMPORTED_MODULE_0__["b"])(val,val2))return 0;if(Object(_operator_packages__WEBPACK_IMPORTED_MODULE_0__["c"])(val,val2,false))return-1;return 1}}},function(module,__webpack_exports__,__webpack_require__){"use strict";(function(global){__webpack_require__.d(__webpack_exports__,"a",function(){return PLUGINS});function getGlobal(){let glob;(function(global){glob=global})(global!==undefined&&global||this);return glob}function create(){const global=getGlobal();const sym=Symbol.for("LOKI");if(global[sym]===undefined){global[sym]={}}return global[sym]}const PLUGINS=create()}).call(this,__webpack_require__(7))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",function(){return aeqHelper});__webpack_require__.d(__webpack_exports__,"c",function(){return ltHelper});__webpack_require__.d(__webpack_exports__,"d",function(){return sortHelper});__webpack_require__.d(__webpack_exports__,"a",function(){return LokiOperatorPackageMap});function aeqHelper(prop1,prop2){if(prop1===prop2)return true;if(!prop1||!prop2||prop1===true||prop2===true||prop1!==prop1||prop2!==prop2){let t1;let t2;switch(prop1){case undefined:t1=1;break;case null:t1=1;break;case false:t1=3;break;case true:t1=4;break;case"":t1=5;break;default:t1=prop1===prop1?9:0;break}switch(prop2){case undefined:t2=1;break;case null:t2=1;break;case false:t2=3;break;case true:t2=4;break;case"":t2=5;break;default:t2=prop2===prop2?9:0;break}if(t1!==9||t2!==9){return t1===t2}}let cv1=Number(prop1);let cv2=Number(prop2);if(cv1===cv1||cv2===cv2){return cv1===cv2}cv1=prop1.toString();cv2=prop2.toString();return cv1==cv2}function ltHelper(prop1,prop2,equal){if(!prop1||!prop2||prop1===true||prop2===true||prop1!==prop1||prop2!==prop2){let t1;let t2;switch(prop1){case undefined:t1=1;break;case null:t1=1;break;case false:t1=3;break;case true:t1=4;break;case"":t1=5;break;default:t1=prop1===prop1?9:0;break}switch(prop2){case undefined:t2=1;break;case null:t2=1;break;case false:t2=3;break;case true:t2=4;break;case"":t2=5;break;default:t2=prop2===prop2?9:0;break}if(t1!==9||t2!==9){return t1===t2?equal:t1<t2}}let cv1=Number(prop1);let cv2=Number(prop2);if(cv1===cv1&&cv2===cv2){if(cv1<cv2)return true;if(cv1>cv2)return false;return equal}if(cv1===cv1&&cv2!==cv2){return true}if(cv2===cv2&&cv1!==cv1){return false}if(prop1<prop2)return true;if(prop1>prop2)return false;if(prop1==prop2)return equal;cv1=prop1.toString();cv2=prop2.toString();if(cv1<cv2){return true}if(cv1==cv2){return equal}return false}function gtHelper(prop1,prop2,equal){if(!prop1||!prop2||prop1===true||prop2===true||prop1!==prop1||prop2!==prop2){let t1;let t2;switch(prop1){case undefined:t1=1;break;case null:t1=1;break;case false:t1=3;break;case true:t1=4;break;case"":t1=5;break;default:t1=prop1===prop1?9:0;break}switch(prop2){case undefined:t2=1;break;case null:t2=1;break;case false:t2=3;break;case true:t2=4;break;case"":t2=5;break;default:t2=prop2===prop2?9:0;break}if(t1!==9||t2!==9){return t1===t2?equal:t1>t2}}let cv1=Number(prop1);let cv2=Number(prop2);if(cv1===cv1&&cv2===cv2){if(cv1>cv2)return true;if(cv1<cv2)return false;return equal}if(cv1===cv1&&cv2!==cv2){return false}if(cv2===cv2&&cv1!==cv1){return true}if(prop1>prop2)return true;if(prop1<prop2)return false;if(prop1==prop2)return equal;cv1=prop1.toString();cv2=prop2.toString();if(cv1>cv2){return true}if(cv1==cv2){return equal}return false}function sortHelper(prop1,prop2,descending){if(aeqHelper(prop1,prop2)){return 0}if(ltHelper(prop1,prop2,false)){return descending?1:-1}if(gtHelper(prop1,prop2,false)){return descending?-1:1}return 0}class LokiOperatorPackage{$eq(a,b){return a===b}$ne(a,b){return a!==b}$gt(a,b){return a>b}$gte(a,b){return a>=b}$lt(a,b){return a<b}$lte(a,b){return a<=b}$between(a,range){if(a===undefined||a===null)return false;return a>=range[0]&&a<=range[1]}$in(a,b){return b.indexOf(a)!==-1}$nin(a,b){return b.indexOf(a)===-1}$keyin(a,b){return a in b}$nkeyin(a,b){return!(a in b)}$definedin(a,b){return b[a]!==undefined}$undefinedin(a,b){return b[a]===undefined}$regex(a,b){return b.test(a)}$containsNone(a,b){return!this.$containsAny(a,b)}$containsAny(a,b){const checkFn=this.containsCheckFn(a);if(checkFn!==null){return Array.isArray(b)?b.some(checkFn):checkFn(b)}return false}$contains(a,b){const checkFn=this.containsCheckFn(a);if(checkFn!==null){return Array.isArray(b)?b.every(checkFn):checkFn(b)}return false}$type(a,b){let type=typeof a;if(type==="object"){if(Array.isArray(a)){type="array"}else if(a instanceof Date){type="date"}}return typeof b!=="object"?type===b:this.doQueryOp(type,b)}$finite(a,b){return b===isFinite(a)}$size(a,b){if(Array.isArray(a)){return typeof b!=="object"?a.length===b:this.doQueryOp(a.length,b)}return false}$len(a,b){if(typeof a==="string"){return typeof b!=="object"?a.length===b:this.doQueryOp(a.length,b)}return false}$where(a,b){return b(a)===true}$not(a,b){return!this.doQueryOp(a,b)}$and(a,b){for(let idx=0,len=b.length;idx<len;idx++){if(!this.doQueryOp(a,b[idx])){return false}}return true}$or(a,b){for(let idx=0,len=b.length;idx<len;idx++){if(this.doQueryOp(a,b[idx])){return true}}return false}doQueryOp(val,op){for(let p in op){if(Object.hasOwnProperty.call(op,p)){return this[p](val,op[p])}}return false}containsCheckFn(a){if(typeof a==="string"||Array.isArray(a)){return b=>a.indexOf(b)!==-1}else if(typeof a==="object"&&a!==null){return b=>Object.hasOwnProperty.call(a,b)}return null}}class LokiAbstractOperatorPackage extends LokiOperatorPackage{constructor(){super()}$eq(a,b){return aeqHelper(a,b)}$ne(a,b){return!aeqHelper(a,b)}$gt(a,b){return gtHelper(a,b,false)}$gte(a,b){return gtHelper(a,b,true)}$lt(a,b){return ltHelper(a,b,false)}$lte(a,b){return ltHelper(a,b,true)}$between(a,range){if(a===undefined||a===null)return false;return gtHelper(a,range[0],true)&&ltHelper(a,range[1],true)}}class ComparatorOperatorPackage extends LokiOperatorPackage{constructor(comparator){super();this.comparator=comparator}$eq(a,b){return this.comparator(a,b)===0}$ne(a,b){return this.comparator(a,b)!==0}$gt(a,b){return this.comparator(a,b)===1}$gte(a,b){return this.comparator(a,b)>-1}$lt(a,b){return this.comparator(a,b)===-1}$lte(a,b){return this.comparator(a,b)<1}$between(a,range){if(a===undefined||a===null)return false;return this.comparator(a,range[0])>-1&&this.comparator(a,range[1])<1}}let LokiOperatorPackageMap={js:new LokiOperatorPackage,loki:new LokiAbstractOperatorPackage}},function(module,__webpack_exports__,__webpack_require__){"use strict";var event_emitter=__webpack_require__(5);class UniqueIndex{constructor(propertyField){this._field=propertyField;this._lokiMap={};this._valMap={}}set(id,value){if(value!==null&&value!==undefined){if(value in this._lokiMap){throw new Error("Duplicate key for property "+this._field+": "+value)}if(id in this._valMap){throw new Error("Duplicate key for property $loki : "+id)}this._lokiMap[value]=id;this._valMap[id]=value}}get(value){return this._lokiMap[value]}update(id,value){if(value===this._valMap[id]){return}if(value in this._lokiMap){throw new Error("Duplicate key for property "+this._field+": "+value)}this.remove(id);this.set(id,value)}remove(id){if(!(id in this._valMap)){throw new Error("Key is not in unique index: "+this._field)}let oldValue=this._valMap[id];delete this._lokiMap[oldValue];delete this._valMap[id]}clear(){this._lokiMap={};this._valMap={}}}function add(copy,key,value){if(copy instanceof Array){copy.push(value);return copy[copy.length-1]}else if(copy instanceof Object){copy[key]=value;return copy[key]}}function walk(target,copy){for(let key in target){let obj=target[key];if(obj instanceof Date){let value=new Date(obj.getTime());add(copy,key,value)}else if(obj instanceof Function){let value=obj;add(copy,key,value)}else if(obj instanceof Array){let value=[];let last=add(copy,key,value);walk(obj,last)}else if(obj instanceof Object){let value={};let last=add(copy,key,value);walk(obj,last)}else{let value=obj;add(copy,key,value)}}}function deepCopy(target){if(/number|string|boolean/.test(typeof target)){return target}else if(target instanceof Date){return new Date(target.getTime())}const copy=target instanceof Array?[]:{};walk(target,copy);return copy}function clone(data,method="parse-stringify"){if(data===null||data===undefined){return null}let cloned;switch(method){case"parse-stringify":cloned=JSON.parse(JSON.stringify(data));break;case"deep":cloned=deepCopy(data);break;case"shallow":cloned=Object.create(data.constructor.prototype);Object.assign(cloned,data);break;case"shallow-recurse":cloned=clone(data,"shallow");const keys=Object.keys(data);for(let i=0;i<keys.length;i++){const key=keys[i];if(typeof data[key]==="object"&&data[key].constructor.name==="Object"){cloned[key]=clone(data[key],"shallow-recurse")}}break;default:break}return cloned}var operator_packages=__webpack_require__(2);var comparators=__webpack_require__(0);function resolveTransformObject(subObj,params,depth=0){if(++depth>=10){return subObj}for(const prop in subObj){if(typeof subObj[prop]==="string"&&subObj[prop].indexOf("[%lktxp]")===0){const pname=subObj[prop].substring(8);if(params[pname]!==undefined){subObj[prop]=params[pname]}}else if(typeof subObj[prop]==="object"){subObj[prop]=resolveTransformObject(subObj[prop],params,depth)}}return subObj}function resolveTransformParams(transform,params){if(params===undefined){return transform}const resolvedTransform=[];for(let idx=0;idx<transform.length;idx++){const clonedStep=clone(transform[idx],"shallow-recurse");resolvedTransform.push(resolveTransformObject(clonedStep,params))}return resolvedTransform}const indexedOps={$eq:true,$dteq:true,$gt:true,$gte:true,$lt:true,$lte:true,$in:true,$between:true};class result_set_ResultSet{constructor(collection){this._filteredRows=[];this._filterInitialized=false;this._scoring=null;this._collection=collection}reset(){if(this._filteredRows.length>0){this._filteredRows=[]}this._filterInitialized=false;return this}toJSON(){const copy=this.copy();copy._collection=null;return copy}limit(qty){if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}this._filteredRows=this._filteredRows.slice(0,qty);this._filterInitialized=true;return this}offset(pos){if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}this._filteredRows=this._filteredRows.slice(pos);this._filterInitialized=true;return this}copy(){const result=new result_set_ResultSet(this._collection);result._filteredRows=this._filteredRows.slice();result._filterInitialized=this._filterInitialized;return result}transform(transform,parameters){if(typeof transform==="string"){transform=this._collection._transforms[transform]}if(parameters!==undefined){transform=resolveTransformParams(transform,parameters)}let rs=this;for(let idx=0;idx<transform.length;idx++){const step=transform[idx];switch(step.type){case"find":rs.find(step.value);break;case"where":rs.where(step.value);break;case"simplesort":rs.simplesort(step.property,step.options);break;case"compoundsort":rs.compoundsort(step.value);break;case"sort":rs.sort(step.value);break;case"sortByScoring":rs.sortByScoring(step.desc);break;case"limit":rs=rs.limit(step.value);break;case"offset":rs=rs.offset(step.value);break;case"map":rs=rs.map(step.value,step.dataOptions);break;case"eqJoin":rs=rs.eqJoin(step.joinData,step.leftJoinKey,step.rightJoinKey,step.mapFun,step.dataOptions);break;case"mapReduce":rs=rs.mapReduce(step.mapFunction,step.reduceFunction);break;case"update":rs.update(step.value);break;case"remove":rs.remove();break;default:break}}return rs}sort(comparefun){if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}const data=this._collection._data;const wrappedComparer=(a,b)=>comparefun(data[a],data[b]);this._filteredRows.sort(wrappedComparer);return this}simplesort(propname,options={desc:false}){if(typeof options==="boolean"){options={desc:options}}if(!this._filterInitialized&&this._collection._rangedIndexes.hasOwnProperty(propname)){let sortedIds=this._collection._rangedIndexes[propname].index.rangeRequest();let dataPositions=[];for(let id of sortedIds){dataPositions.push(this._collection.get(id,true)[1])}this._filteredRows=options.desc?dataPositions.reverse():dataPositions;this._filterInitialized=true;return this}if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}const data=this._collection._data;let comparator=options.sortComparator?comparators["a"][options.sortComparator]:comparators["a"][this._collection._unindexedSortComparator];const wrappedComparer=(a,b)=>{return comparator(data[a][propname],data[b][propname])};this._filteredRows.sort(wrappedComparer);if(options.desc){this._filteredRows.reverse()}return this}compoundsort(properties){if(properties.length===0){throw new Error("Invalid call to compoundsort, need at least one property")}if(properties.length===1){const prop=properties[0];if(typeof prop==="string"){return this.simplesort(prop,false)}else{return this.simplesort(prop[0],prop[1])}}for(let i=0,len=properties.length;i<len;i++){const prop=properties[i];if(typeof prop==="string"){properties[i]=[prop,false]}}if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}const data=this._collection._data;const wrappedComparer=(a,b)=>this._compoundeval(properties,data[a],data[b]);this._filteredRows.sort(wrappedComparer);return this}_compoundeval(properties,obj1,obj2){for(let i=0,len=properties.length;i<len;i++){const prop=properties[i];const field=prop[0];const res=Object(operator_packages["d"])(obj1[field],obj2[field],prop[1]);if(res!==0){return res}}return 0}sortByScoring(ascending=false){if(this._scoring===null){throw new Error("No scoring available")}if(ascending){this._filteredRows.sort((a,b)=>this._scoring[a].score-this._scoring[b].score)}else{this._filteredRows.sort((a,b)=>this._scoring[b].score-this._scoring[a].score)}return this}getScoring(){if(this._scoring===null){throw new Error("No scoring available")}const scoring=[];for(let i=0;i<this._filteredRows.length;i++){scoring.push(this._scoring[this._filteredRows[i]])}return scoring}findOr(expressionArray){const docset=[];const idxset=[];const origCount=this.count();for(let ei=0,elen=expressionArray.length;ei<elen;ei++){const fr=this.copy().find(expressionArray[ei])._filteredRows;const frlen=fr.length;if(frlen===origCount){return this}for(let fri=0;fri<frlen;fri++){const idx=fr[fri];if(idxset[idx]===undefined){idxset[idx]=true;docset.push(idx)}}}this._filteredRows=docset;this._filterInitialized=true;return this}$or(expressionArray){return this.findOr(expressionArray)}findAnd(expressionArray){for(let i=0,len=expressionArray.length;i<len;i++){if(this.count()===0){return this}this.find(expressionArray[i])}return this}$and(expressionArray){return this.findAnd(expressionArray)}find(query,firstOnly=false){if(this._collection._data.length===0){this._filteredRows=[];this._filterInitialized=true;return this}const queryObject=query||"getAll";let property;let queryObjectOp;let value;if(typeof queryObject==="object"){let filters=[];for(let p in queryObject){let obj={};obj[p]=queryObject[p];filters.push(obj);if(queryObject[p]!==undefined){property=p;queryObjectOp=queryObject[p]}}if(filters.length>1){return this.find({$and:filters},firstOnly)}}if(!property||queryObject==="getAll"){if(firstOnly){this._filteredRows=this._collection._data.length>0?[0]:[];this._filterInitialized=true}return this}if(property==="$and"||property==="$or"){this[property](queryObjectOp);if(firstOnly&&this._filteredRows.length>1){this._filteredRows=this._filteredRows.slice(0,1)}return this}let operator="";if(queryObjectOp===null||(typeof queryObjectOp!=="object"||queryObjectOp instanceof Date)){operator="$eq";value=queryObjectOp}else if(typeof queryObjectOp==="object"){for(let key in queryObjectOp){if(queryObjectOp[key]!==undefined){operator=key;value=queryObjectOp[key];break}}}else{throw new Error("Do not know what you want to do.")}if(operator==="$regex"){if(Array.isArray(value)){value=new RegExp(value[0],value[1])}else if(!(value instanceof RegExp)){value=new RegExp(value)}}const doIndexCheck=!this._filterInitialized;let searchByIndex=false;if(doIndexCheck&&this._collection._rangedIndexes[property]&&indexedOps[operator]){searchByIndex=true}const operatorPackage=operator_packages["a"][this._collection._defaultLokiOperatorPackage];const data=this._collection._data;let result=[];if(this._filterInitialized){let filter=this._filteredRows;if(property==="$fts"){this._scoring=this._collection._fullTextSearch.search(queryObject.$fts);let keys=Object.keys(this._scoring);for(let i=0;i<keys.length;i++){if(filter.indexOf(+keys[i])!==-1){result.push(+keys[i])}}}else if(this._collection._constraints.unique[property]!==undefined&&operator==="$eq"){let row=this._collection.get(this._collection._constraints.unique[property].get(value),true)[1];if(filter.indexOf(row)!==-1){result.push(row)}}else{for(let i=0;i<filter.length;i++){let rowIdx=filter[i];if(operatorPackage[operator](data[rowIdx][property],value)){result.push(rowIdx)}}}this._filteredRows=result;this._filterInitialized=true;return this}this._filteredRows=result;this._filterInitialized=true;if(property==="$fts"){this._scoring=this._collection._fullTextSearch.search(queryObject.$fts);let keys=Object.keys(this._scoring);for(let i=0;i<keys.length;i++){result.push(+keys[i])}return this}if(this._collection._constraints.unique[property]!==undefined&&operator==="$eq"){result.push(this._collection.get(this._collection._constraints.unique[property].get(value),true)[1]);return this}if(!searchByIndex){for(let i=0;i<data.length;i++){if(operatorPackage[operator](data[i][property],value)){result.push(i);if(firstOnly){return this}}}return this}if(this._collection._rangedIndexes[property]){if(operator==="$in"){let ri=this._collection._rangedIndexes[property];for(let val of value){let idResult=ri.index.rangeRequest({op:"$eq",val:val});for(let id of idResult){result.push(this._collection.get(id,true)[1])}}return this}if(operator==="$between"){let idResult=this._collection._rangedIndexes[property].index.rangeRequest({op:operator,val:value[0],high:value[1]});for(let id of idResult){result.push(this._collection.get(id,true)[1])}return this}let idResult=this._collection._rangedIndexes[property].index.rangeRequest({op:operator,val:value});if(indexedOps[operator]!==true){for(let id of idResult){let pos=this._collection.get(id,true)[1];if(indexedOps[operator](data[pos][property],value)){result.push(pos)}}}else{for(let id of idResult){result.push(this._collection.get(id,true)[1])}}}return this}where(fun){let viewFunction;let result=[];if("function"===typeof fun){viewFunction=fun}else{throw new TypeError("Argument is not a stored view or a function")}if(this._filterInitialized){let j=this._filteredRows.length;while(j--){if(viewFunction(this._collection._data[this._filteredRows[j]])===true){result.push(this._filteredRows[j])}}this._filteredRows=result;return this}else{let k=this._collection._data.length;while(k--){if(viewFunction(this._collection._data[k])===true){result.push(k)}}this._filteredRows=result;this._filterInitialized=true;return this}}count(){if(this._filterInitialized){return this._filteredRows.length}return this._collection.count()}data(options={}){let forceClones;let forceCloneMethod;let removeMeta;({forceClones:forceClones=false,forceCloneMethod:forceCloneMethod=this._collection._cloneMethod,removeMeta:removeMeta=false}=options);let result=[];let data=this._collection._data;let obj;let method;if(removeMeta&&!forceClones){forceClones=true;forceCloneMethod="shallow"}if(!this._collection._disableDeltaChangesApi){forceClones=true;forceCloneMethod="deep"}if(!this._filterInitialized){if(this._filteredRows.length===0){if(this._collection._cloneObjects||forceClones){method=forceCloneMethod;for(let i=0;i<data.length;i++){obj=this._collection._defineNestedProperties(clone(data[i],method));if(removeMeta){delete obj.$loki;delete obj.meta}result.push(obj)}return result}else{return data.slice()}}else{this._filterInitialized=true}}const fr=this._filteredRows;if(this._collection._cloneObjects||forceClones){method=forceCloneMethod;for(let i=0;i<fr.length;i++){obj=this._collection._defineNestedProperties(clone(data[fr[i]],method));if(removeMeta){delete obj.$loki;delete obj.meta}result.push(obj)}}else{for(let i=0;i<fr.length;i++){result.push(data[fr[i]])}}return result}update(updateFunction){if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}const len=this._filteredRows.length;const rcd=this._collection._data;for(let idx=0;idx<len;idx++){if(this._collection._cloneObjects||!this._collection._disableDeltaChangesApi){const obj=clone(rcd[this._filteredRows[idx]],this._collection._cloneMethod);updateFunction(obj);this._collection.update(obj)}else{updateFunction(rcd[this._filteredRows[idx]]);this._collection.update(rcd[this._filteredRows[idx]])}}return this}remove(){if(!this._filterInitialized&&this._filteredRows.length===0){this._filteredRows=this._collection._prepareFullDocIndex()}this._collection.remove(this.data());this._filteredRows=[];return this}mapReduce(mapFunction,reduceFunction){try{return reduceFunction(this.data().map(mapFunction))}catch(err){throw err}}eqJoin(joinData,leftJoinKey,rightJoinKey,mapFun,dataOptions){let rightData=[];let rightDataLength;let key;let result=[];let leftKeyisFunction=typeof leftJoinKey==="function";let rightKeyisFunction=typeof rightJoinKey==="function";let joinMap={};let leftData=this.data(dataOptions);let leftDataLength=leftData.length;if(joinData instanceof collection_Collection){rightData=joinData.chain().data(dataOptions)}else if(joinData instanceof result_set_ResultSet){rightData=joinData.data(dataOptions)}else if(Array.isArray(joinData)){rightData=joinData}else{throw new TypeError("joinData needs to be an array or result set")}rightDataLength=rightData.length;for(let i=0;i<rightDataLength;i++){key=rightKeyisFunction?rightJoinKey(rightData[i]):rightData[i][rightJoinKey];joinMap[key]=rightData[i]}if(!mapFun){mapFun=((left,right)=>({left:left,right:right}))}for(let j=0;j<leftDataLength;j++){key=leftKeyisFunction?leftJoinKey(leftData[j]):leftData[j][leftJoinKey];result.push(mapFun(leftData[j],joinMap[key]||{}))}this._collection=new collection_Collection("joinData");this._collection.insert(result);this._filteredRows=[];this._filterInitialized=false;return this}map(mapFun,dataOptions){const data=this.data(dataOptions).map(mapFun);this._collection=new collection_Collection("mappedData");this._collection.insert(data);this._filteredRows=[];this._filterInitialized=false;return this}}class dynamic_view_DynamicView extends event_emitter["a"]{constructor(collection,name,options={}){super();this._rebuildPending=false;this._resultData=[];this._resultDirty=false;this._cachedResultSet=null;this._filterPipeline=[];this._sortFunction=null;this._sortCriteria=null;this._sortCriteriaSimple=null;this._sortByScoring=null;this._sortDirty=false;({persistent:this._persistent=false,sortPriority:this._sortPriority="passive",minRebuildInterval:this._minRebuildInterval=1}=options);this._collection=collection;this.name=name;this._resultSet=new result_set_ResultSet(collection);this._events={rebuild:[]}}_rematerialize({removeWhereFilters:removeWhereFilters=false}){this._resultData=[];this._resultDirty=true;this._resultSet=new result_set_ResultSet(this._collection);if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple||this._sortByScoring!==null){this._sortDirty=true}if(removeWhereFilters){let fpi=this._filterPipeline.length;while(fpi--){if(this._filterPipeline[fpi].type==="where"){if(fpi!==this._filterPipeline.length-1){this._filterPipeline[fpi]=this._filterPipeline[this._filterPipeline.length-1]}this._filterPipeline.length--}}}const ofp=this._filterPipeline;this._filterPipeline=[];for(let idx=0;idx<ofp.length;idx++){this.applyFind(ofp[idx].val)}this.data();this.emit("rebuild",this);return this}branchResultSet(transform,parameters){const rs=this._resultSet.copy();if(transform===undefined){return rs}return rs.transform(transform,parameters)}toJSON(){return{name:this.name,_persistent:this._persistent,_sortPriority:this._sortPriority,_minRebuildInterval:this._minRebuildInterval,_resultSet:this._resultSet,_filterPipeline:this._filterPipeline,_sortCriteria:this._sortCriteria,_sortCriteriaSimple:this._sortCriteriaSimple,_sortByScoring:this._sortByScoring,_sortDirty:this._sortDirty}}static fromJSONObject(collection,obj){let dv=new dynamic_view_DynamicView(collection,obj.name);dv._resultDirty=true;dv._filterPipeline=obj._filterPipeline;dv._resultData=[];dv._sortCriteria=obj._sortCriteria;dv._sortCriteriaSimple=obj._sortCriteriaSimple;dv._sortByScoring=obj._sortByScoring;dv._sortDirty=obj._sortDirty;dv._resultSet._filteredRows=obj._resultSet._filteredRows;dv._resultSet._filterInitialized=obj._resultSet._filterInitialized;dv._rematerialize({removeWhereFilters:true});return dv}removeFilters({queueSortPhase:queueSortPhase=false}={}){this._rebuildPending=false;this._resultSet.reset();this._resultData=[];this._resultDirty=true;this._cachedResultSet=null;this._filterPipeline=[];this._sortFunction=null;this._sortCriteria=null;this._sortCriteriaSimple=null;this._sortByScoring=null;this._sortDirty=false;if(queueSortPhase===true){this._queueSortPhase()}}applySort(comparefun){this._sortFunction=comparefun;this._sortCriteria=null;this._sortCriteriaSimple=null;this._sortByScoring=null;this._queueSortPhase();return this}applySimpleSort(field,options=false){this._sortCriteriaSimple={field:field,options:options};this._sortFunction=null;this._sortCriteria=null;this._sortByScoring=null;this._queueSortPhase();return this}applySortCriteria(criteria){this._sortCriteria=criteria;this._sortCriteriaSimple=null;this._sortFunction=null;this._sortByScoring=null;this._queueSortPhase();return this}applySortByScoring(ascending=false){this._sortFunction=null;this._sortCriteria=null;this._sortCriteriaSimple=null;this._sortByScoring=ascending;this._queueSortPhase();return this}getScoring(){return this._resultSet.getScoring()}startTransaction(){this._cachedResultSet=this._resultSet.copy();return this}commit(){this._cachedResultSet=null;return this}rollback(){this._resultSet=this._cachedResultSet;if(this._persistent){this._resultData=this._resultSet.data();this.emit("rebuild",this)}return this}_indexOfFilterWithId(uid){if(typeof uid==="string"||typeof uid==="number"){for(let idx=0,len=this._filterPipeline.length;idx<len;idx++){if(uid===this._filterPipeline[idx].uid){return idx}}}return-1}_addFilter(filter){this._filterPipeline.push(filter);this._resultSet[filter.type](filter.val)}reapplyFilters(){this._resultSet.reset();this._cachedResultSet=null;if(this._persistent){this._resultData=[];this._resultDirty=true}const filters=this._filterPipeline;this._filterPipeline=[];for(let idx=0,len=filters.length;idx<len;idx++){this._addFilter(filters[idx])}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple||this._sortByScoring!==null){this._queueSortPhase()}else{this._queueRebuildEvent()}return this}applyFilter(filter){const idx=this._indexOfFilterWithId(filter.uid);if(idx>=0){this._filterPipeline[idx]=filter;return this.reapplyFilters()}this._cachedResultSet=null;if(this._persistent){this._resultData=[];this._resultDirty=true}this._addFilter(filter);if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple||this._sortByScoring!==null){this._queueSortPhase()}else{this._queueRebuildEvent()}return this}applyFind(query,uid=""){this.applyFilter({type:"find",val:query,uid:uid});return this}applyWhere(fun,uid){this.applyFilter({type:"where",val:fun,uid:uid});return this}removeFilter(uid){const idx=this._indexOfFilterWithId(uid);if(idx<0){throw new Error("Dynamic view does not contain a filter with ID: "+uid)}this._filterPipeline.splice(idx,1);this.reapplyFilters();return this}count(){if(this._resultDirty){this._resultData=this._resultSet.data()}return this._resultSet.count()}data(options={}){if(this._sortDirty||this._resultDirty){this._performSortPhase({suppressRebuildEvent:true})}return this._persistent?this._resultData:this._resultSet.data(options)}_queueRebuildEvent(){if(this._rebuildPending){return}this._rebuildPending=true;setTimeout(()=>{if(this._rebuildPending){this._rebuildPending=false;this.emit("rebuild",this)}},this._minRebuildInterval)}_queueSortPhase(){if(this._sortDirty){return}this._sortDirty=true;if(this._sortPriority==="active"){setTimeout(()=>{this._performSortPhase()},this._minRebuildInterval)}else{this._queueRebuildEvent()}}_performSortPhase(options={}){if(!this._sortDirty&&!this._resultDirty){return}if(this._sortDirty){if(this._sortFunction){this._resultSet.sort(this._sortFunction)}else if(this._sortCriteria){this._resultSet.compoundsort(this._sortCriteria)}else if(this._sortCriteriaSimple){this._resultSet.simplesort(this._sortCriteriaSimple.field,this._sortCriteriaSimple.options)}else if(this._sortByScoring!==null){this._resultSet.sortByScoring(this._sortByScoring)}this._sortDirty=false}if(this._persistent){this._resultData=this._resultSet.data();this._resultDirty=false}if(!options.suppressRebuildEvent){this.emit("rebuild",this)}}_evaluateDocument(objIndex,isNew){if(!this._resultSet._filterInitialized){if(this._persistent){this._resultData=this._resultSet.data()}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple){this._queueSortPhase()}else{this._queueRebuildEvent()}return}const ofr=this._resultSet._filteredRows;const oldPos=isNew?-1:ofr.indexOf(+objIndex);const oldlen=ofr.length;const evalResultSet=new result_set_ResultSet(this._collection);evalResultSet._filteredRows=[objIndex];evalResultSet._filterInitialized=true;let filter;for(let idx=0,len=this._filterPipeline.length;idx<len;idx++){filter=this._filterPipeline[idx];evalResultSet[filter.type](filter.val)}const newPos=evalResultSet._filteredRows.length===0?-1:0;if(oldPos===-1&&newPos===-1)return;if(oldPos===-1&&newPos!==-1){ofr.push(objIndex);if(this._persistent){this._resultData.push(this._collection._data[objIndex])}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple){this._queueSortPhase()}else{this._queueRebuildEvent()}return}if(oldPos!==-1&&newPos===-1){if(oldPos<oldlen-1){ofr.splice(oldPos,1);if(this._persistent){this._resultData.splice(oldPos,1)}}else{ofr.length=oldlen-1;if(this._persistent){this._resultData.length=oldlen-1}}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple){this._queueSortPhase()}else{this._queueRebuildEvent()}return}if(oldPos!==-1&&newPos!==-1){if(this._persistent){this._resultData[oldPos]=this._collection._data[objIndex]}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple){this._queueSortPhase()}else{this._queueRebuildEvent()}}}_removeDocument(objIndex){if(!this._resultSet._filterInitialized){if(this._persistent){this._resultData=this._resultSet.data()}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple){this._queueSortPhase()}else{this._queueRebuildEvent()}return}const ofr=this._resultSet._filteredRows;const oldPos=ofr.indexOf(+objIndex);let oldlen=ofr.length;if(oldPos!==-1){if(oldPos<oldlen-1){ofr[oldPos]=ofr[oldlen-1];ofr.length=oldlen-1;if(this._persistent){this._resultData[oldPos]=this._resultData[oldlen-1];this._resultData.length=oldlen-1}}else{ofr.length=oldlen-1;if(this._persistent){this._resultData.length=oldlen-1}}if(this._sortFunction||this._sortCriteria||this._sortCriteriaSimple){this._queueSortPhase()}else{this._queueRebuildEvent()}}oldlen=ofr.length;for(let idx=0;idx<oldlen;idx++){if(ofr[idx]>objIndex){ofr[idx]--}}}mapReduce(mapFunction,reduceFunction){try{return reduceFunction(this.data().map(mapFunction))}catch(err){throw err}}}var ranged_indexes=__webpack_require__(4);var common_plugin=__webpack_require__(1);__webpack_require__.d(__webpack_exports__,"a",function(){return collection_Collection});function average(array){return array.reduce((a,b)=>a+b,0)/array.length}function standardDeviation(values){const avg=average(values);const squareDiffs=values.map(value=>{const diff=value-avg;return diff*diff});const avgSquareDiff=average(squareDiffs);return Math.sqrt(avgSquareDiff)}function getNestedPropertyValue(obj,path,array,pathIdx=0){if(obj===undefined){return false}if(pathIdx+1===path.length){array.push(obj[path[pathIdx]]);return false}const curr=obj[path[pathIdx]];if(Array.isArray(curr)){for(let i=0;i<curr.length;i++){getNestedPropertyValue(curr[i],path,array,pathIdx+1)}return true}else{return getNestedPropertyValue(curr,path,array,pathIdx+1)}}class collection_Collection extends event_emitter["a"]{constructor(name,options={}){super();this._data=[];this._idIndex=[];this._rangedIndexes={};this._lokimap={};this._unindexedSortComparator="js";this._defaultLokiOperatorPackage="js";this._constraints={unique:{}};this._transforms={};this._dirty=true;this._cached=null;this._nestedProperties=[];this._ttl={age:null,ttlInterval:null,daemon:null};this._maxId=0;this._dynamicViews=[];this._changes=[];this._stages={};this._commitLog=[];if(options&&options.disableMeta===true){if(options.disableChangesApi===false){throw new Error("disableMeta option cannot be passed as true when disableChangesApi is passed as false")}if(options.disableDeltaChangesApi===false){throw new Error("disableMeta option cannot be passed as true when disableDeltaChangesApi is passed as false")}if(typeof options.ttl==="number"&&options.ttl>0){throw new Error("disableMeta option cannot be passed as true when ttl is enabled")}}this.name=name;this._unindexedSortComparator=options.unindexedSortComparator||"js";this._defaultLokiOperatorPackage=options.defaultLokiOperatorPackage||"js";if(options.unique!==undefined){if(!Array.isArray(options.unique)){options.unique=[options.unique]}options.unique.forEach(prop=>{this._constraints.unique[prop]=new UniqueIndex(prop)})}if(common_plugin["a"]["FullTextSearch"]!==undefined){this._fullTextSearch=options.fullTextSearch!==undefined?new common_plugin["a"]["FullTextSearch"](options.fullTextSearch):null}else{this._fullTextSearch=null}this._transactional=options.transactional!==undefined?options.transactional:false;this._cloneObjects=options.clone!==undefined?options.clone:false;this._asyncListeners=options.asyncListeners!==undefined?options.asyncListeners:false;this._disableMeta=options.disableMeta!==undefined?options.disableMeta:false;this._disableChangesApi=options.disableChangesApi!==undefined?options.disableChangesApi:true;this._disableDeltaChangesApi=options.disableDeltaChangesApi!==undefined?options.disableDeltaChangesApi:true;this._cloneMethod=options.cloneMethod!==undefined?options.cloneMethod:"deep";if(this._disableChangesApi){this._disableDeltaChangesApi=true}this._serializableIndexes=options.serializableIndexes!==undefined?options.serializableIndexes:true;if(options.nestedProperties!=undefined){for(let i=0;i<options.nestedProperties.length;i++){const nestedProperty=options.nestedProperties[i];if(typeof nestedProperty==="string"){this._nestedProperties.push({name:nestedProperty,path:nestedProperty.split(".")})}else{this._nestedProperties.push(nestedProperty)}}}this.setTTL(options.ttl||-1,options.ttlInterval);this._events={insert:[],update:[],"pre-insert":[],"pre-update":[],close:[],flushbuffer:[],error:[],delete:[],warning:[]};this._ensureId();let rangedIndexes=options.rangedIndexes||{};for(let ri in rangedIndexes){this.ensureRangedIndex(ri,rangedIndexes[ri].indexTypeName,rangedIndexes[ri].comparatorName)}this.setChangesApi(this._disableChangesApi,this._disableDeltaChangesApi);this.flushChanges()}toJSON(){return{name:this.name,unindexedSortComparator:this._unindexedSortComparator,defaultLokiOperatorPackage:this._defaultLokiOperatorPackage,_dynamicViews:this._dynamicViews,uniqueNames:Object.keys(this._constraints.unique),transforms:this._transforms,rangedIndexes:this._rangedIndexes,_data:this._data,idIndex:this._idIndex,maxId:this._maxId,_dirty:this._dirty,_nestedProperties:this._nestedProperties,transactional:this._transactional,asyncListeners:this._asyncListeners,disableMeta:this._disableMeta,disableChangesApi:this._disableChangesApi,disableDeltaChangesApi:this._disableDeltaChangesApi,cloneObjects:this._cloneObjects,cloneMethod:this._cloneMethod,changes:this._changes,_fullTextSearch:this._fullTextSearch}}static fromJSONObject(obj,options){let coll=new collection_Collection(obj.name,{disableChangesApi:obj.disableChangesApi,disableDeltaChangesApi:obj.disableDeltaChangesApi,unindexedSortComparator:obj.unindexedSortComparator,defaultLokiOperatorPackage:obj.defaultLokiOperatorPackage});coll._transactional=obj.transactional;coll._asyncListeners=obj.asyncListeners;coll._disableMeta=obj.disableMeta;coll._disableChangesApi=obj.disableChangesApi;coll._cloneObjects=obj.cloneObjects;coll._cloneMethod=obj.cloneMethod||"deep";coll._changes=obj.changes;coll._nestedProperties=obj._nestedProperties;coll._rangedIndexes=obj.rangedIndexes||{};coll._dirty=options&&options.retainDirtyFlags===true?obj._dirty:false;function makeLoader(coll){const collOptions=options[coll.name];if(collOptions.proto){const inflater=collOptions.inflate||((src,dest)=>{for(let prop in src){dest[prop]=src[prop]}});return data=>{const collObj=new collOptions.proto;inflater(data,collObj);return collObj}}return collOptions.inflate}if(options&&options[obj.name]!==undefined){let loader=makeLoader(obj);for(let j=0;j<obj._data.length;j++){coll._data[j]=coll._defineNestedProperties(loader(obj._data[j]));coll._lokimap[coll._data[j].$loki]=coll._data[j]}}else{for(let j=0;j<obj._data.length;j++){coll._data[j]=coll._defineNestedProperties(obj._data[j]);coll._lokimap[coll._data[j].$loki]=coll._data[j]}}coll._maxId=obj.maxId===undefined?0:obj.maxId;coll._idIndex=obj.idIndex;if(obj.transforms!==undefined){coll._transforms=obj.transforms}for(let ri in obj.rangedIndexes){let sri=obj.rangedIndexes[ri];let rif=ranged_indexes["a"][sri.indexTypeName];let ricmp=comparators["a"][sri.comparatorName];let rii=rif(ri,ricmp);rii.restore(sri.index);coll._rangedIndexes[ri].index=rii}coll._ensureId();if(obj.uniqueNames!==undefined){for(let j=0;j<obj.uniqueNames.length;j++){coll.ensureUniqueIndex(obj.uniqueNames[j])}}if(obj._dynamicViews!==undefined){for(let idx=0;idx<obj._dynamicViews.length;idx++){coll._dynamicViews.push(dynamic_view_DynamicView.fromJSONObject(coll,obj._dynamicViews[idx]))}}if(obj._fullTextSearch){coll._fullTextSearch=common_plugin["a"]["FullTextSearch"].fromJSONObject(obj._fullTextSearch,options.fullTextSearch)}return coll}addTransform(name,transform){if(this._transforms[name]!==undefined){throw new Error("a transform by that name already exists")}this._transforms[name]=transform}getTransform(name){return this._transforms[name]}setTransform(name,transform){this._transforms[name]=transform}removeTransform(name){delete this._transforms[name]}setTTL(age,interval){if(age<0){clearInterval(this._ttl.daemon)}else{this._ttl.age=age;this._ttl.ttlInterval=interval;this._ttl.daemon=setInterval(()=>{const now=Date.now();const toRemove=this.chain().where(member=>{const timestamp=member.meta.updated||member.meta.created;const diff=now-timestamp;return this._ttl.age<diff});toRemove.remove()},interval)}}_prepareFullDocIndex(){const indexes=new Array(this._data.length);for(let i=0;i<indexes.length;i++){indexes[i]=i}return indexes}ensureIndex(field,indexTypeName,comparatorName){this.ensureRangedIndex(field,indexTypeName,comparatorName)}ensureRangedIndex(field,indexTypeName,comparatorName){indexTypeName=indexTypeName||"avl";comparatorName=comparatorName||"loki";if(!ranged_indexes["a"][indexTypeName]){throw new Error("ensureRangedIndex: Unknown range index type")}if(!comparators["a"][comparatorName]){throw new Error("ensureRangedIndex: Unknown comparator")}let rif=ranged_indexes["a"][indexTypeName];let comparator=comparators["a"][comparatorName];this._rangedIndexes[field]={index:rif(field,comparator),indexTypeName:indexTypeName,comparatorName:comparatorName};let rii=this._rangedIndexes[field].index;for(let i=0;i<this._data.length;i++){rii.insert(this._data[i].$loki,this._data[i][field])}}ensureUniqueIndex(field){let index=new UniqueIndex(field);this._constraints.unique[field]=index;for(let i=0;i<this._data.length;i++){index.set(this._data[i].$loki,this._data[i][field])}return index}count(query){if(!query){return this._data.length}return this.chain().find(query)._filteredRows.length}_ensureId(){this._idIndex=[];for(let i=0;i<this._data.length;i++){this._idIndex.push(this._data[i].$loki)}}addDynamicView(name,options){const dv=new dynamic_view_DynamicView(this,name,options);this._dynamicViews.push(dv);return dv}removeDynamicView(name){for(let idx=0;idx<this._dynamicViews.length;idx++){if(this._dynamicViews[idx].name===name){this._dynamicViews.splice(idx,1)}}}getDynamicView(name){for(let idx=0;idx<this._dynamicViews.length;idx++){if(this._dynamicViews[idx].name===name){return this._dynamicViews[idx]}}return null}findAndUpdate(filterObject,updateFunction){this.chain().find(filterObject).update(updateFunction)}findAndRemove(filterObject){this.chain().find(filterObject).remove()}insert(doc){if(!Array.isArray(doc)){return this.insertOne(doc)}let obj;let results=[];this.emit("pre-insert",doc);for(let i=0;i<doc.length;i++){obj=this.insertOne(doc[i],true);if(!obj){return undefined}results.push(obj)}this.emit("insert",results);results=this._cloneObjects?clone(results,this._cloneMethod):results;return results.length===1?results[0]:results}insertOne(doc,bulkInsert=false){let err=null;let returnObj;if(typeof doc!=="object"){err=new TypeError("Document needs to be an object")}else if(doc===null){err=new TypeError("Object cannot be null")}if(err!==null){this.emit("error",err);throw err}const obj=this._defineNestedProperties(this._cloneObjects?clone(doc,this._cloneMethod):doc);if(!this._disableMeta&&obj.meta===undefined){obj.meta={version:0,revision:0,created:0}}if(!bulkInsert){this.emit("pre-insert",obj)}if(!this._add(obj)){return undefined}if(this._disableChangesApi){this._insertMeta(obj)}else{this._insertMetaWithChange(obj)}returnObj=this._cloneObjects?clone(obj,this._cloneMethod):obj;if(!bulkInsert){this.emit("insert",returnObj)}return returnObj}_defineNestedProperties(data){for(let i=0;i<this._nestedProperties.length;i++){const name=this._nestedProperties[i].name;const path=this._nestedProperties[i].path;Object.defineProperty(data,name,{get(){const array=[];if(getNestedPropertyValue(this,path,array)){return array}else{return array[0]}},set(val){path.slice(0,path.length-1).reduce((obj,part)=>obj&&obj[part]?obj[part]:null,this)[path[path.length-1]]=val},enumerable:false,configurable:true})}return data}clear({removeIndices:removeIndices=false}={}){this._data=[];this._idIndex=[];this._cached=null;this._maxId=0;this._dynamicViews=[];this._dirty=true;if(removeIndices===true){this._rangedIndexes={};this._constraints={unique:{}}}else{for(let ri in this._rangedIndexes){this.ensureRangedIndex(ri,this._rangedIndexes[ri].indexTypeName,this._rangedIndexes[ri].comparatorName)}const uniqueNames=Object.keys(this._constraints.unique);for(let i=0;i<uniqueNames.length;i++){this._constraints.unique[uniqueNames[i]].clear()}}if(this._fullTextSearch!==null){this._fullTextSearch.clear()}}update(doc){if(Array.isArray(doc)){for(let i=0;i<doc.length;i++){this.update(doc[i])}return}if(doc.$loki===undefined){throw new Error("Trying to update unsynced document. Please save the document first by using insert() or addMany()")}try{this.startTransaction();const arr=this.get(doc.$loki,true);if(!arr){throw new Error("Trying to update a document not in collection.")}let oldInternal=arr[0];let position=arr[1];let newInternal=this._defineNestedProperties(this._cloneObjects||!this._disableDeltaChangesApi?clone(doc,this._cloneMethod):doc);this.emit("pre-update",doc);Object.keys(this._constraints.unique).forEach(key=>{this._constraints.unique[key].update(newInternal.$loki,newInternal[key])});this._data[position]=newInternal;this._lokimap[doc.$loki]=newInternal;for(let idx=0;idx<this._dynamicViews.length;idx++){this._dynamicViews[idx]._evaluateDocument(position,false)}for(let ri in this._rangedIndexes){this._rangedIndexes[ri].index.update(doc.$loki,doc[ri])}this._idIndex[position]=newInternal.$loki;if(this._fullTextSearch!==null){this._fullTextSearch.updateDocument(doc,position)}this.commit();this._dirty=true;if(this._disableChangesApi){this._updateMeta(newInternal)}else{this._updateMetaWithChange(newInternal,oldInternal)}let returnObj=newInternal;if(this._cloneObjects){returnObj=clone(newInternal,this._cloneMethod)}this.emit("update",returnObj,oldInternal)}catch(err){this.rollback();this.emit("error",err);throw err}}_add(obj){if("object"!==typeof obj){throw new TypeError("Object being added needs to be an object")}if(obj["$loki"]!==undefined){throw new Error("Document is already in collection, please use update()")}try{this.startTransaction();this._maxId++;if(isNaN(this._maxId)){this._maxId=this._data[this._data.length-1].$loki+1}const newDoc=obj;newDoc.$loki=this._maxId;if(!this._disableMeta){newDoc.meta.version=0}const constrUnique=this._constraints.unique;for(const key in constrUnique){if(constrUnique[key]!==undefined){constrUnique[key].set(newDoc.$loki,newDoc[key])}}this._idIndex.push(newDoc.$loki);this._lokimap[newDoc.$loki]=newDoc;this._data.push(newDoc);const addedPos=this._data.length-1;const dvlen=this._dynamicViews.length;for(let i=0;i<dvlen;i++){this._dynamicViews[i]._evaluateDocument(addedPos,true)}for(let ri in this._rangedIndexes){if(this._serializableIndexes&&newDoc[ri]instanceof Date){newDoc[ri]=newDoc[ri].getTime()}this._rangedIndexes[ri].index.insert(obj["$loki"],obj[ri])}if(this._fullTextSearch!==null){this._fullTextSearch.addDocument(newDoc,addedPos)}this.commit();this._dirty=true;return this._cloneObjects?clone(newDoc,this._cloneMethod):newDoc}catch(err){this.rollback();this.emit("error",err);throw err}}updateWhere(filterFunction,updateFunction){const results=this.where(filterFunction);try{for(let i=0;i<results.length;i++){this.update(updateFunction(results[i]))}}catch(err){this.rollback();throw err}}removeWhere(filterFunction){this.remove(this._data.filter(filterFunction))}removeDataOnly(){this.remove(this._data.slice())}remove(doc){if(typeof doc==="number"){doc=this.get(doc)}if(Array.isArray(doc)){let k=0;const len=doc.length;for(k;k<len;k++){this.remove(doc[k])}return}if(doc.$loki===undefined){throw new Error("Object is not a document stored in the collection")}try{this.startTransaction();const arr=this.get(doc.$loki,true);const position=arr[1];let aDoc=typeof doc==="number"?this.get(doc):doc;Object.keys(this._constraints.unique).forEach(key=>{if(key in aDoc){this._constraints.unique[key].remove(aDoc.$loki)}});for(let idx=0;idx<this._dynamicViews.length;idx++){this._dynamicViews[idx]._removeDocument(position)}this._data.splice(position,1);this._idIndex.splice(position,1);delete this._lokimap[doc.$loki];for(let ri in this._rangedIndexes){this._rangedIndexes[ri].index.remove(doc.$loki)}if(this._fullTextSearch!==null){this._fullTextSearch.removeDocument(doc,position)}this.commit();this._dirty=true;if(!this._disableChangesApi){this._createChange(this.name,"R",arr[0])}this.emit("delete",arr[0]);delete doc.$loki;delete doc.meta}catch(err){this.rollback();this.emit("error",err);throw err}}getChanges(){return this._changes}setChangesApi(disableChangesApi,disableDeltaChangesApi=true){this._disableChangesApi=disableChangesApi;this._disableDeltaChangesApi=disableChangesApi?true:disableDeltaChangesApi}flushChanges(){this._changes=[]}_getObjectDelta(oldObject,newObject){const propertyNames=newObject!==null&&typeof newObject==="object"?Object.keys(newObject):null;if(propertyNames&&propertyNames.length&&["string","boolean","number"].indexOf(typeof newObject)<0){const delta={};for(let i=0;i<propertyNames.length;i++){const propertyName=propertyNames[i];if(newObject.hasOwnProperty(propertyName)){if(!oldObject.hasOwnProperty(propertyName)||this._constraints.unique[propertyName]!==undefined||propertyName==="$loki"||propertyName==="meta"){delta[propertyName]=newObject[propertyName]}else{const propertyDelta=this._getObjectDelta(oldObject[propertyName],newObject[propertyName]);if(propertyDelta!==undefined&&propertyDelta!=={}){delta[propertyName]=propertyDelta}}}}return Object.keys(delta).length===0?undefined:delta}else{return oldObject===newObject?undefined:newObject}}_getChangeDelta(obj,old){if(old){return this._getObjectDelta(old,obj)}else{return JSON.parse(JSON.stringify(obj))}}_createChange(name,op,obj,old){this._changes.push({name:name,operation:op,obj:op==="U"&&!this._disableDeltaChangesApi?this._getChangeDelta(obj,old):JSON.parse(JSON.stringify(obj))})}_createInsertChange(obj){this._createChange(this.name,"I",obj)}_createUpdateChange(obj,old){this._createChange(this.name,"U",obj,old)}_insertMetaWithChange(obj){this._insertMeta(obj);this._createInsertChange(obj)}_updateMetaWithChange(obj,old){this._updateMeta(obj);this._createUpdateChange(obj,old)}_insertMeta(obj){if(this._disableMeta){return}if(!obj.meta){obj.meta={version:0,revision:0,created:0}}obj.meta.created=(new Date).getTime();obj.meta.revision=0}_updateMeta(obj){if(this._disableMeta){return}obj.meta.updated=(new Date).getTime();obj.meta.revision+=1}get(id,returnPosition=false){if(!returnPosition){let doc=this._lokimap[id];if(doc===undefined)return null;return doc}const data=this._idIndex;let max=data.length-1;let min=0;let mid=min+max>>1;id=typeof id==="number"?id:parseInt(id,10);if(isNaN(id)){throw new TypeError("Passed id is not an integer")}while(data[min]<data[max]){mid=min+max>>1;if(data[mid]<id){min=mid+1}else{max=mid}}if(max===min&&data[min]===id){if(returnPosition){return[this._data[min],min]}return this._data[min]}return null}by(field,value){let lokiId=this._constraints.unique[field].get(value);if(!this._cloneObjects){return this._lokimap[lokiId]}else{return clone(this._lokimap[lokiId],this._cloneMethod)}}findOne(query){query=query||{};const result=this.chain().find(query,true).data();if(Array.isArray(result)&&result.length===0){return null}else{if(!this._cloneObjects){return result[0]}else{return clone(result[0],this._cloneMethod)}}}chain(transform,parameters){const rs=new result_set_ResultSet(this);if(transform===undefined){return rs}return rs.transform(transform,parameters)}find(query){return this.chain().find(query).data()}findOneUnindexed(prop,value){let i=this._data.length;let doc;while(i--){if(this._data[i][prop]===value){doc=this._data[i];return doc}}return null}startTransaction(){if(this._transactional){let rib={};for(let ri in this._rangedIndexes){rib[ri].indexTypeName=this._rangedIndexes[ri].indexTypeName;rib[ri].comparatorName=this._rangedIndexes[ri].comparatorName;rib[ri].index=this._rangedIndexes[ri].index.backup()}this._cached={index:this._idIndex,data:clone(this._data,this._cloneMethod),rangedIndexes:rib};for(let idx=0;idx<this._dynamicViews.length;idx++){this._dynamicViews[idx].startTransaction()}}}commit(){if(this._transactional){this._cached=null;for(let idx=0;idx<this._dynamicViews.length;idx++){this._dynamicViews[idx].commit()}}}rollback(){if(this._transactional){if(this._cached!==null){this._idIndex=this._cached.index;this._data=this._cached.data;for(let i=0;i<this._data.length;i++){this._data[i]=this._defineNestedProperties(this._data[i])}for(let ri in this._cached.rangedIndexes){let sri=this._cached.rangedIndexes[ri];let rif=ranged_indexes["a"][sri.indexTypeName];let ricmp=comparators["a"][sri.comparatorName];let rii=rif(ri,ricmp);rii.restore(sri.index);this._rangedIndexes[ri].index=rii}for(let idx=0;idx<this._dynamicViews.length;idx++){this._dynamicViews[idx].rollback()}}}}where(fun){return this.chain().where(fun).data()}mapReduce(mapFunction,reduceFunction){return reduceFunction(this._data.map(mapFunction))}eqJoin(joinData,leftJoinProp,rightJoinProp,mapFun,dataOptions){return new result_set_ResultSet(this).eqJoin(joinData,leftJoinProp,rightJoinProp,mapFun,dataOptions)}getStage(name){if(!this._stages[name]){this._stages[name]={}}return this._stages[name]}stage(stageName,obj){const copy=JSON.parse(JSON.stringify(obj));this.getStage(stageName)[obj.$loki]=copy;return copy}commitStage(stageName,message){const stage=this.getStage(stageName);const timestamp=(new Date).getTime();for(const prop in stage){this.update(stage[prop]);this._commitLog.push({timestamp:timestamp,message:message,data:JSON.parse(JSON.stringify(stage[prop]))})}this._stages[stageName]={}}extract(field){const result=[];for(let i=0;i<this._data.length;i++){result.push(this._data[i][field])}return result}min(field){return Math.min.apply(null,this.extractNumerical(field))}max(field){return Math.max.apply(null,this.extractNumerical(field))}minRecord(field){const result={index:0,value:0};if(this._data.length===0){result.index=null;result.value=null;return result}result.index=this._data[0].$loki;result.value=parseFloat(this._data[0][field]);for(let i=1;i<this._data.length;i++){const val=parseFloat(this._data[i][field]);if(result.value>val){result.value=val;result.index=this._data[i].$loki}}return result}maxRecord(field){const result={index:0,value:0};if(this._data.length===0){result.index=null;result.value=null;return result}result.index=this._data[0].$loki;result.value=parseFloat(this._data[0][field]);for(let i=1;i<this._data.length;i++){const val=parseFloat(this._data[i][field]);if(result.value<val){result.value=val;result.index=this._data[i].$loki}}return result}extractNumerical(field){return this.extract(field).map(parseFloat).filter(Number).filter(n=>!isNaN(n))}avg(field){return average(this.extractNumerical(field))}stdDev(field){return standardDeviation(this.extractNumerical(field))}mode(field){const dict={};const data=this.extractNumerical(field);let mode=data[0];let maxCount=-Infinity;for(let i=0;i<data.length;i++){const el=data[i];if(dict[el]){dict[el]++}else{dict[el]=1}if(dict[el]>maxCount){mode=el;maxCount=dict[el]}}return mode}median(field){const values=this.extractNumerical(field);values.sort((a,b)=>a-b);const half=Math.floor(values.length/2);if(values.length%2){return values[half]}else{return(values[half-1]+values[half])/2}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";class AvlTreeIndex{constructor(name,comparator){this.nodes={};this.apex=null;this.name=name;this.comparator=comparator}backup(){let result=new AvlTreeIndex(this.name,this.comparator);result.nodes=JSON.parse(JSON.stringify(this.nodes));result.apex=this.apex;return result}restore(tree){this.name=tree.name;this.comparator=tree.comparator;this.nodes=JSON.parse(JSON.stringify(tree.nodes));this.apex=tree.apex}insert(id,val){if(id<=0){throw new Error("avl index ids are required to be numbers greater than zero")}let node=this.nodes[id]={id:id,value:val,parent:null,balance:0,height:0,left:null,right:null,siblings:[]};if(!this.apex){this.apex=id;return}this.insertNode(this.nodes[this.apex],node)}insertNode(current,node){switch(this.comparator(node.value,current.value)){case 0:current.siblings.push(node.id);node.parent=current.id;break;case 1:if(current.right){this.insertNode(this.nodes[current.right],node);this.updateBalance(current)}else{current.right=node.id;node.parent=current.id;this.updateBalance(current)}break;case-1:if(current.left){this.insertNode(this.nodes[current.left],node);this.updateBalance(current)}else{current.left=node.id;node.parent=current.id;this.updateBalance(current)}break;default:throw new Error("Invalid comparator result")}if(current.balance<-1){if(current.left===null){throw new Error("insertNode.balance() : left child should not be null")}if(this.nodes[current.left].balance<=0){this.leftLeftCase(current)}else{this.leftRightCase(current)}}if(current.balance>1){if(current.right===null){throw new Error("insertNode.balance() : right child should not be null")}if(this.nodes[current.right].balance>=0){this.rightRightCase(current)}else{this.rightLeftCase(current)}}return current.height}updateBalance(node){let hl=node.left?this.nodes[node.left].height:-1;let hr=node.right?this.nodes[node.right].height:-1;node.height=hl>hr?1+hl:1+hr;node.balance=hr-hl}leftLeftCase(node){return this.rotateRight(node)}leftRightCase(node){if(!node.left){throw new Error("leftRightCase: left child not set")}node.left=this.rotateLeft(this.nodes[node.left]).id;return this.rotateRight(node)}rightRightCase(node){return this.rotateLeft(node)}rightLeftCase(node){if(!node.right){throw new Error("rightLeftCase: right child not set")}node.right=this.rotateRight(this.nodes[node.right]).id;return this.rotateLeft(node)}rotateLeft(node){if(!node.right){throw new Error("rotateLeft: right child was unavailable.")}let parent=node.parent?this.nodes[node.parent]:null;let right=this.nodes[node.right];node.right=right.left;if(node.right){this.nodes[node.right].parent=node.id}right.left=node.id;right.parent=node.parent;node.parent=right.id;if(parent){if(parent.left===node.id){parent.left=right.id}else if(parent.right===node.id){parent.right=right.id}else{throw new Error("rotateLeft() : attempt to remap parent back to child failed... not found")}}else{if(this.apex!==node.id){throw new Error("rightRotate expecting parentless node to be apex")}this.apex=right.id}this.updateBalance(node);this.updateBalance(right);return right}rotateRight(node){if(!node.left){throw new Error("rotateRight : left child unavailable")}let parent=node.parent?this.nodes[node.parent]:null;let left=this.nodes[node.left];node.left=left.right;if(left.right){this.nodes[left.right].parent=node.id}left.right=node.id;left.parent=node.parent;node.parent=left.id;if(parent){if(parent.left===node.id){parent.left=left.id}else{parent.right=left.id}}else{if(this.apex!==node.id){throw new Error("rightRotate expecting parentless node to be apex")}this.apex=left.id}this.updateBalance(node);this.updateBalance(left);return left}getValuesAsTree(node){if(this.apex===null)return null;node=node||this.nodes[this.apex];return{id:node.id,val:node.value,siblings:node.siblings,balance:node.balance,height:node.height,left:node.left?this.getValuesAsTree(this.nodes[node.left]):null,right:node.right?this.getValuesAsTree(this.nodes[node.right]):null}}update(id,val){let node=this.nodes[id];let cmp=this.comparator(node.value,val);if(cmp===0)return;this.remove(id);this.insert(id,val)}remove(id){if(!this.apex){throw new Error("remove() : attempting remove when tree has no apex")}this.removeNode(this.nodes[this.apex],id)}removeNode(node,id){if(!this.nodes[id]){throw new Error("removeNode: attempting to remove a node which is not in hashmap")}let val=this.nodes[id].value;switch(this.comparator(val,node.value)){case 0:if(node.siblings.length>0){if(node.id===id){let alphaSiblingId=node.siblings.shift();let alphaSibling=this.nodes[alphaSiblingId];alphaSibling.parent=node.parent;this.updateChildLink(node.parent,id,alphaSiblingId);if(node.left){this.nodes[node.left].parent=alphaSiblingId}if(node.right){this.nodes[node.right].parent=alphaSiblingId}alphaSibling.left=node.left;alphaSibling.right=node.right;alphaSibling.siblings=node.siblings;alphaSibling.height=node.height;alphaSibling.balance=node.balance;if(this.apex===id){this.apex=alphaSiblingId}for(let si of alphaSibling.siblings){this.nodes[si].parent=alphaSiblingId}delete this.nodes[id];return}else{let idx=node.siblings.indexOf(id);if(idx===-1){throw new Error("Unable to remove sibling from parented sibling")}node.siblings.splice(idx,1);delete this.nodes[id];return}}else{if(!node.left&&!node.right){this.updateChildLink(node.parent,node.id,null);delete this.nodes[id];if(id===this.apex){this.apex=null}return}if(!node.left||!node.right){if(node.left){this.promoteChild(node,this.nodes[node.left]);if(this.apex===id){this.apex=node.left}}if(node.right){this.promoteChild(node,this.nodes[node.right]);if(this.apex===id){this.apex=node.right}}return}this.promoteSuccessor(node);return}case 1:if(!node.right){throw new Error("removeNode: Unable to find value in tree")}this.removeNode(this.nodes[node.right],id);break;case-1:if(!node.left){throw new Error("removeNode: Unable to find value in tree")}this.removeNode(this.nodes[node.left],id);break}this.updateBalance(node);if(node.balance<-1){if(node.left===null){throw new Error("insertNode.balance() : left child should not be null")}if(this.nodes[node.left].balance<=0){this.leftLeftCase(node)}else{this.leftRightCase(node)}}if(node.balance>1){if(node.right===null){throw new Error("insertNode.balance() : right child should not be null")}if(this.nodes[node.right].balance>=0){this.rightRightCase(node)}else{this.rightLeftCase(node)}}}updateChildLink(parentId,oldChildId,newChildId){if(parentId===null)return;let parent=this.nodes[parentId];if(parent.left===oldChildId){parent.left=newChildId}else if(parent.right===oldChildId){parent.right=newChildId}}promoteChild(parent,child){let gpId=parent.parent;if(gpId){let gp=this.nodes[gpId];if(gp.left===parent.id){gp.left=child.id}else if(gp.right===parent.id){gp.right=child.id}}child.parent=gpId;delete this.nodes[parent.id];return}promoteSuccessor(node){let oldId=node.id;if(!node.right||!node.left){throw new Error("promoteSuccessor() : node to replace does not have two children")}let successor=null;let glsId;let glsValue;let glsSiblings;if(node.balance<0){let lchild=this.nodes[node.left];successor=this.findGreaterLeaf(lchild);glsId=successor.id;glsValue=successor.value;glsSiblings=successor.siblings;successor.siblings=[];this.removeNode(lchild,glsId)}else{let rchild=this.nodes[node.right];successor=this.findLesserLeaf(rchild);glsId=successor.id;glsValue=successor.value;glsSiblings=successor.siblings;successor.siblings=[];this.removeNode(rchild,glsId)}if(node.parent){let p=this.nodes[node.parent];if(p.left===oldId)p.left=glsId;if(p.right===oldId)p.right=glsId}if(node.left)this.nodes[node.left].parent=glsId;if(node.right)this.nodes[node.right].parent=glsId;node.id=glsId;node.value=glsValue;node.siblings=glsSiblings;this.nodes[glsId]=node;delete this.nodes[oldId];if(this.apex===oldId)this.apex=glsId;this.updateBalance(node)}findGreaterLeaf(node){if(!node.right){return node}let result=this.findGreaterLeaf(this.nodes[node.right]);return result?result:node}findLesserLeaf(node){if(!node.left){return node}let result=this.findLesserLeaf(this.nodes[node.left]);return result?result:node}rangeRequest(range){if(!this.apex)return[];if(!range){return this.collateIds(this.nodes[this.apex])}if(range.op==="$eq"){let match=this.locate(this.nodes[this.apex],range.val);if(match===null){return[]}if(match.siblings.length){return[match.id,...match.siblings]}return[match.id]}let result=this.collateRequest(this.nodes[this.apex],range);return result}collateRequest(node,range){let result=[];if(range.op==="$eq"){throw new Error("collateRequest does not support $eq range request")}let cmp1=this.comparator(node.value,range.val);let cmp2=0;if(range.op==="$between"){if(range.high===null||range.high===undefined){throw new Error("collateRequest: $between request missing high range value")}cmp2=this.comparator(node.value,range.high)}if(node.left){switch(range.op){case"$lt":case"$lte":result=this.collateRequest(this.nodes[node.left],range);break;case"$gt":case"$gte":if(cmp1===1){result=this.collateRequest(this.nodes[node.left],range)}break;case"$between":if(cmp1===1){result=this.collateRequest(this.nodes[node.left],range)}break;default:break}}if(!range){result.push(node.id);result.push(...node.siblings)}else{switch(range.op){case"$lt":if(cmp1===-1){result.push(node.id);result.push(...node.siblings)}break;case"$lte":if(cmp1===-1||cmp1===0){result.push(node.id);result.push(...node.siblings)}break;case"$gt":if(cmp1===1){result.push(node.id);result.push(...node.siblings)}break;case"$gte":if(cmp1===1||cmp1===0){result.push(node.id);result.push(...node.siblings)}break;case"$between":if(cmp1>=0&&cmp2<=0){result.push(node.id);result.push(...node.siblings)}break;default:break}}if(node.right){if(!range){result.push(...this.collateRequest(this.nodes[node.right],range))}else{switch(range.op){case"$lt":case"$lte":if(cmp1===-1){result.push(...this.collateRequest(this.nodes[node.right],range))}break;case"$gt":case"$gte":result.push(...this.collateRequest(this.nodes[node.right],range));break;case"$between":if(cmp2===-1){result.push(...this.collateRequest(this.nodes[node.right],range))}break;default:break}}}return result}collateIds(node){let result=[];if(!node){return[]}if(node.left){result=this.collateIds(this.nodes[node.left])}result.push(node.id);result.push(...node.siblings);if(node.right){result.push(...this.collateIds(this.nodes[node.right]))}return result}locate(node,val){while(node!==null){switch(this.comparator(val,node.value)){case 0:return node;case 1:if(!node.right){return null}node=this.nodes[node.right];break;case-1:if(!node.left){return null}node=this.nodes[node.left];break}}return null}validateIndex(){if(!this.apex){if(Object.keys(this.nodes).length!==0){return false}return true}if(this.nodes[this.apex].parent!==null){return false}let result=this.collateIds(this.nodes[this.apex]);let nc=Object.keys(this.nodes).length;if(result.length!==nc){return false}if(result.length===1){if(this.nodes[result[0]].parent!==null)return false;if(this.nodes[result[0]].left!==null)return false;if(this.nodes[result[0]].right!==null)return false;return true}for(let i=0;i<result.length-1;i++){if(this.comparator(this.nodes[result[i]].value,this.nodes[result[i+1]].value)===1){return false}}return this.validateNode(this.nodes[this.apex])}validateNode(node){if([node.parent,node.left,node.right].indexOf(node.id)!==-1){return false}let hl=node.left?this.nodes[node.left].height:-1;let hr=node.right?this.nodes[node.right].height:-1;let eh=1+Math.max(hl,hr);if(node.height!==eh){return false}if(node.balance!==hr-hl){return false}if(node.siblings.length>0){for(let sid of node.siblings){if(this.nodes[sid].parent!==node.id)return false}}if(node.left){if(this.nodes[node.left].parent!==node.id){return false}if(!this.validateNode(this.nodes[node.left])){return false}}if(node.right){if(this.nodes[node.right].parent!==node.id){return false}if(!this.validateNode(this.nodes[node.right])){return false}}return true}}__webpack_require__.d(__webpack_exports__,"a",function(){return RangedIndexFactoryMap});let RangedIndexFactoryMap={avl:(name,comparator)=>{return new AvlTreeIndex(name,comparator)}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return LokiEventEmitter});class LokiEventEmitter{constructor(){this._events={};this._asyncListeners=false}on(eventName,listener){let event;if(Array.isArray(eventName)){eventName.forEach(currentEventName=>{this.on(currentEventName,listener)});return listener}event=this._events[eventName];if(!event){event=this._events[eventName]=[]}event.push(listener);return listener}emit(eventName,...data){if(eventName&&this._events[eventName]){this._events[eventName].forEach(listener=>{if(this._asyncListeners){setTimeout(()=>{listener(...data)},1)}else{listener(...data)}})}}addListener(eventName,listener){return this.on(eventName,listener)}removeListener(eventName,listener){if(Array.isArray(eventName)){eventName.forEach(currentEventName=>{this.removeListener(currentEventName,listener)})}if(this._events[eventName]){const listeners=this._events[eventName];listeners.splice(listeners.indexOf(listener),1)}}}},function(module,__webpack_exports__,__webpack_require__){"use strict";(function(global){__webpack_require__.d(__webpack_exports__,"a",function(){return Loki});var _event_emitter__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(5);var _collection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(3);var _common_plugin__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(1);var _comparators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(0);var _ranged_indexes__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(4);var _operator_packages__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2);function getENV(){if(global!==undefined&&(global["android"]||global["NSObject"])){return"NATIVESCRIPT"}const isNode=global!==undefined&&{}.toString.call(global)==="[object global]";if(isNode){if(global["window"]){return"NODEJS"}else{return"NODEJS"}}if(document!==undefined){if(document.URL.indexOf("http://")===-1&&document.URL.indexOf("https://")===-1){return"CORDOVA"}return"BROWSER"}const isBrowser=window!==undefined&&{}.toString.call(window)==="[object Window]";if(isBrowser){return"BROWSER"}throw SyntaxError("Unknown environment...")}class Loki extends _event_emitter__WEBPACK_IMPORTED_MODULE_0__["a"]{constructor(filename="loki.db",options={}){super();this.databaseVersion=1.5;this.engineVersion=1.5;this._persistenceMethod=null;this._persistenceAdapter=null;this._throttledSaves=true;this._throttledSaveRunning=null;this._throttledSavePending=null;this._autosave=false;this._autosaveInterval=5e3;this._autosaveRunning=false;this._autosaveHandler=Promise.resolve();this.filename=filename;this._collections=[];({serializationMethod:this._serializationMethod="normal",destructureDelimiter:this._destructureDelimiter="$<\n",env:this._env=getENV()}=options);this._events={init:[],loaded:[],flushChanges:[],close:[],changes:[],warning:[]};if(options.comparatorMap){for(let c in options.comparatorMap){_comparators__WEBPACK_IMPORTED_MODULE_3__["a"][c]=options.comparatorMap[c]}}if(options.rangedIndexFactoryMap){for(let rif in options.rangedIndexFactoryMap){_ranged_indexes__WEBPACK_IMPORTED_MODULE_4__["a"][rif]=options.rangedIndexFactoryMap[rif]}}if(options.lokiOperatorPackageMap){for(let lop in options.lokiOperatorPackageMap){_operator_packages__WEBPACK_IMPORTED_MODULE_5__["a"][lop]=options.lokiOperatorPackageMap[lop]}}this.on("init",this.clearChanges)}initializePersistence(options={}){let loaded=this._autosaveDisable();({autosave:this._autosave=false,autosaveInterval:this._autosaveInterval=5e3,persistenceMethod:this._persistenceMethod,throttledSaves:this._throttledSaves=true}=options);const DEFAULT_PERSISTENCE={NODEJS:["fs-storage"],BROWSER:["local-storage","indexed-storage"],CORDOVA:["local-storage","indexed-storage"],MEMORY:["memory-storage"]};const PERSISTENCE_METHODS={"fs-storage":_common_plugin__WEBPACK_IMPORTED_MODULE_2__["a"]["FSStorage"],"local-storage":_common_plugin__WEBPACK_IMPORTED_MODULE_2__["a"]["LocalStorage"],"indexed-storage":_common_plugin__WEBPACK_IMPORTED_MODULE_2__["a"]["IndexedStorage"],"memory-storage":_common_plugin__WEBPACK_IMPORTED_MODULE_2__["a"]["MemoryStorage"]};if(this._persistenceMethod!==undefined){if(typeof PERSISTENCE_METHODS[this._persistenceMethod]==="function"){this._persistenceAdapter=new PERSISTENCE_METHODS[this._persistenceMethod]}else{throw Error("Unknown persistence method.")}}if(options.adapter!==undefined){this._persistenceMethod="adapter";this._persistenceAdapter=options.adapter}if(this._persistenceAdapter===null){let possiblePersistenceMethods=DEFAULT_PERSISTENCE[this._env];if(possiblePersistenceMethods){for(let i=0;i<possiblePersistenceMethods.length;i++){if(PERSISTENCE_METHODS[possiblePersistenceMethods[i]]){this._persistenceMethod=possiblePersistenceMethods[i];this._persistenceAdapter=new PERSISTENCE_METHODS[possiblePersistenceMethods[i]];break}}}}if(options.autoload){loaded=loaded.then(()=>this.loadDatabase(options.inflate))}return loaded.then(()=>{this._autosaveEnable()})}copy(options={}){const databaseCopy=new Loki(this.filename,{env:this._env});databaseCopy.loadJSONObject(this,{retainDirtyFlags:true});if(options.removeNonSerializable){databaseCopy._persistenceAdapter=null;for(let idx=0;idx<databaseCopy._collections.length;idx++){databaseCopy._collections[idx]._constraints=null;databaseCopy._collections[idx]._ttl=null}}return databaseCopy}addCollection(name,options={}){for(let i=0;i<this._collections.length;i++){if(this._collections[i].name===name){return this._collections[i]}}const collection=new _collection__WEBPACK_IMPORTED_MODULE_1__["a"](name,options);this._collections.push(collection);return collection}loadCollection(collection){if(!collection.name){throw new Error("Collection must have a name property to be loaded")}this._collections.push(collection)}getCollection(name){for(let i=0;i<this._collections.length;i++){if(this._collections[i].name===name){return this._collections[i]}}this.emit("warning","collection "+name+" not found");return null}renameCollection(oldName,newName){const c=this.getCollection(oldName);if(c){c.name=newName}return c}listCollections(){const colls=[];for(let i=0;i<this._collections.length;i++){colls.push({name:this._collections[i].name,count:this._collections[i].count()})}return colls}removeCollection(collectionName){for(let i=0;i<this._collections.length;i++){if(this._collections[i].name===collectionName){const tmpcol=new _collection__WEBPACK_IMPORTED_MODULE_1__["a"](collectionName,{});const curcol=this._collections[i];for(const prop in curcol){if(curcol[prop]!==undefined&&tmpcol[prop]!==undefined){curcol[prop]=tmpcol[prop]}}this._collections.splice(i,1);return}}}serialize(options={}){if(options.serializationMethod===undefined){options.serializationMethod=this._serializationMethod}switch(options.serializationMethod){case"normal":return JSON.stringify(this);case"pretty":return JSON.stringify(this,null,2);case"destructured":return this.serializeDestructured();default:return JSON.stringify(this)}}toJSON(){return{_env:this._env,_serializationMethod:this._serializationMethod,_autosave:this._autosave,_autosaveInterval:this._autosaveInterval,_collections:this._collections,databaseVersion:this.databaseVersion,engineVersion:this.engineVersion,filename:this.filename,_persistenceAdapter:this._persistenceAdapter,_persistenceMethod:this._persistenceMethod,_throttledSaves:this._throttledSaves}}serializeDestructured(options={}){if(options.partitioned===undefined){options.partitioned=false}if(options.delimited===undefined){options.delimited=true}if(options.delimiter===undefined){options.delimiter=this._destructureDelimiter}if(options.partitioned===true&&options.partition!==undefined&&options.partition>=0){return this.serializeCollection({delimited:options.delimited,delimiter:options.delimiter,collectionIndex:options.partition})}let dbcopy=new Loki(this.filename);dbcopy.loadJSONObject(this);for(let idx=0;idx<dbcopy._collections.length;idx++){dbcopy._collections[idx]._data=[]}if(options.partitioned===true&&options.partition===-1){return dbcopy.serialize({serializationMethod:"normal"})}const reconstruct=[];reconstruct.push(dbcopy.serialize({serializationMethod:"normal"}));dbcopy=null;for(let idx=0;idx<this._collections.length;idx++){let result=this.serializeCollection({delimited:options.delimited,delimiter:options.delimiter,collectionIndex:idx});if(options.partitioned===false&&options.delimited===false){if(!Array.isArray(result)){throw new Error("a nondelimited, non partitioned collection serialization did not return an expected array")}for(let sidx=0;sidx<result.length;sidx++){reconstruct.push(result[sidx]);result[sidx]=null}reconstruct.push("")}else{reconstruct.push(result)}}if(options.partitioned){if(options.delimited){return reconstruct}else{return reconstruct}}else{if(options.delimited){reconstruct.push("");return reconstruct.join(options.delimiter)}else{reconstruct.push("");return reconstruct}}}serializeCollection(options={}){if(options.delimited===undefined){options.delimited=true}if(options.collectionIndex===undefined){throw new Error("serializeCollection called without 'collectionIndex' option")}const doccount=this._collections[options.collectionIndex].count();let resultlines=[];for(let docidx=0;docidx<doccount;docidx++){resultlines.push(JSON.stringify(this._collections[options.collectionIndex]._data[docidx]))}if(options.delimited){resultlines.push("");return resultlines.join(options.delimiter)}else{return resultlines}}deserializeDestructured(destructuredSource,options={}){if(options.partitioned===undefined){options.partitioned=false}if(options.delimited===undefined){options.delimited=true}if(options.delimiter===undefined){options.delimiter=this._destructureDelimiter}if(options.partitioned){if(options.partition!==undefined){if(options.partition===-1){return JSON.parse(destructuredSource[0])}return this.deserializeCollection(destructuredSource[options.partition+1],options)}const cdb=JSON.parse(destructuredSource[0]);const collCount=cdb._collections.length;for(let collIndex=0;collIndex<collCount;collIndex++){cdb._collections[collIndex]._data=this.deserializeCollection(destructuredSource[collIndex+1],options)}return cdb}let workarray=[];if(options.delimited){workarray=destructuredSource.split(options.delimiter);destructuredSource=null;if(workarray.length===0){return null}}else{workarray=destructuredSource}const cdb=JSON.parse(workarray[0]);const collCount=cdb._collections.length;workarray[0]=null;let collIndex=0;let lineIndex=1;let done=false;while(!done){if(workarray[lineIndex]===""){if(++collIndex>collCount){done=true}}else{cdb._collections[collIndex]._data.push(JSON.parse(workarray[lineIndex]))}workarray[lineIndex++]=null}return cdb}deserializeCollection(destructuredSource,options={}){if(options.partitioned===undefined){options.partitioned=false}if(options.delimited===undefined){options.delimited=true}if(options.delimiter===undefined){options.delimiter=this._destructureDelimiter}let workarray=[];if(options.delimited){workarray=destructuredSource.split(options.delimiter);workarray.pop()}else{workarray=destructuredSource}for(let idx=0;idx<workarray.length;idx++){workarray[idx]=JSON.parse(workarray[idx])}return workarray}loadJSON(serializedDb,options){let dbObject;if(serializedDb.length===0){dbObject={}}else{switch(this._serializationMethod){case"normal":case"pretty":dbObject=JSON.parse(serializedDb);break;case"destructured":dbObject=this.deserializeDestructured(serializedDb);break;default:dbObject=JSON.parse(serializedDb);break}}this.loadJSONObject(dbObject,options)}loadJSONObject(dbObject,options={}){const len=dbObject._collections?dbObject._collections.length:0;this.filename=dbObject.filename;this._collections=[];for(let i=0;i<len;++i){this._collections.push(_collection__WEBPACK_IMPORTED_MODULE_1__["a"].fromJSONObject(dbObject._collections[i],options))}}close(){if(this._autosave){return this._autosaveDisable().then(()=>{if(this._autosaveDirty()){return this.saveDatabase()}return Promise.resolve()})}return Promise.resolve().then(()=>{this.emit("close")})}generateChangesNotification(arrayOfCollectionNames){let changes=[];const selectedCollections=arrayOfCollectionNames||this._collections.map(coll=>coll.name);this._collections.forEach(coll=>{if(selectedCollections.indexOf(coll.name)!==-1){changes=changes.concat(coll.getChanges())}});return changes}serializeChanges(collectionNamesArray){return JSON.stringify(this.generateChangesNotification(collectionNamesArray))}clearChanges(){this._collections.forEach(coll=>{if(coll.flushChanges){coll.flushChanges()}})}throttledSaveDrain(options={}){const now=(new Date).getTime();if(!this._throttledSaves){return Promise.resolve()}if(options.recursiveWait===undefined){options.recursiveWait=true}if(options.recursiveWaitLimit===undefined){options.recursiveWaitLimit=false}if(options.recursiveWaitLimitDuration===undefined){options.recursiveWaitLimitDuration=2e3}if(options.started===undefined){options.started=new Date}if(this._throttledSaves&&this._throttledSaveRunning!==null){if(options.recursiveWait){return Promise.resolve(Promise.all([this._throttledSaveRunning,this._throttledSavePending])).then(()=>{if(this._throttledSaveRunning!==null||this._throttledSavePending!==null){if(options.recursiveWaitLimit&&now-options.started.getTime()>options.recursiveWaitLimitDuration){return Promise.reject({})}return this.throttledSaveDrain(options)}else{return Promise.resolve()}})}else{return Promise.resolve(this._throttledSaveRunning)}}else{return Promise.resolve()}}_loadDatabase(options={}){if(this._persistenceAdapter===null){return Promise.reject(new Error("persistenceAdapter not configured"))}return Promise.resolve(this._persistenceAdapter.loadDatabase(this.filename)).then(dbString=>{if(typeof dbString==="string"){this.loadJSON(dbString,options);this.emit("load",this)}else{dbString=dbString;if(typeof dbString==="object"&&dbString!==null&&!(dbString instanceof Error)){this.loadJSONObject(dbString,options);this.emit("load",this)}else{if(dbString instanceof Error)throw dbString;throw new TypeError("The persistence adapter did not load a serialized DB string or object.")}}})}loadDatabase(options={}){if(!this._throttledSaves){return this._loadDatabase(options)}return this.throttledSaveDrain(options).then(()=>{this._throttledSaveRunning=this._loadDatabase(options).then(()=>{this._throttledSaveRunning=null});return this._throttledSaveRunning},()=>{throw new Error("Unable to pause save throttling long enough to read database")})}_saveDatabase(){if(this._persistenceAdapter===null){return Promise.reject(new Error("persistenceAdapter not configured"))}if(this._persistenceAdapter.mode==="reference"&&typeof this._persistenceAdapter.exportDatabase==="function"){return Promise.resolve(this._persistenceAdapter.exportDatabase(this.filename,this.copy({removeNonSerializable:true}))).then(()=>{this._autosaveClearFlags();this.emit("save")})}this._autosaveClearFlags();return Promise.resolve(this._persistenceAdapter.saveDatabase(this.filename,this.serialize())).then(()=>{this.emit("save")})}saveDatabase(){if(!this._throttledSaves){return this._saveDatabase()}if(this._throttledSaveRunning!==null&&this._throttledSavePending===null){this._throttledSavePending=Promise.resolve(this._throttledSaveRunning).then(()=>{this._throttledSaveRunning=null;this._throttledSavePending=null;return this.saveDatabase()})}if(this._throttledSavePending!==null){return this._throttledSavePending}this._throttledSaveRunning=this._saveDatabase().then(()=>{this._throttledSaveRunning=null});return this._throttledSaveRunning}deleteDatabase(){if(this._persistenceAdapter===null){return Promise.reject(new Error("persistenceAdapter not configured"))}return Promise.resolve(this._persistenceAdapter.deleteDatabase(this.filename))}_autosaveDirty(){for(let idx=0;idx<this._collections.length;idx++){if(this._collections[idx]._dirty){return true}}return false}_autosaveClearFlags(){for(let idx=0;idx<this._collections.length;idx++){this._collections[idx]._dirty=false}}_autosaveEnable(){if(!this._autosave||this._autosaveRunning){return}this._autosaveRunning=true;const interval=setInterval(()=>{if(!this._autosaveRunning){clearInterval(interval)}else if(this._autosaveDirty()){this._autosaveHandler=this._autosaveHandler.then(()=>{return this.saveDatabase()})}},this._autosaveInterval)}_autosaveDisable(){this._autosaveRunning=false;return this._autosaveHandler}}}).call(this,__webpack_require__(7))},function(module,exports){var g;g=function(){return this}();try{g=g||Function("return this")()||(1,eval)("this")}catch(e){if(typeof window==="object")g=window}module.exports=g},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _loki__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(6);__webpack_require__.d(__webpack_exports__,"Loki",function(){return _loki__WEBPACK_IMPORTED_MODULE_0__["a"]});var _collection__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(3);__webpack_require__.d(__webpack_exports__,"Collection",function(){return _collection__WEBPACK_IMPORTED_MODULE_1__["a"]});_loki__WEBPACK_IMPORTED_MODULE_0__["a"]["Collection"]=_collection__WEBPACK_IMPORTED_MODULE_1__["a"];__webpack_exports__["default"]=_loki__WEBPACK_IMPORTED_MODULE_0__["a"]}])});