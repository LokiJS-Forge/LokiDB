{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3726203130c546d96078","webpack:///./packages/local-storage/src/index.ts","webpack:///./packages/local-storage/src/local_storage.ts","webpack:///./packages/common/plugin.ts","webpack:///(webpack)/buildin/global.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7D6C;AAEvB;AACtB,+DAAe,oEAAY,EAAC;;;;;;;;;ACHgB;AAG5C;;;GAGG;AACG;IACJ;;OAEG;IACH,MAAM,CAAC,QAAQ;QACb,+DAAO,CAAC,cAAc,CAAC,GAAG,YAAY,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,UAAU;QACf,OAAO,+DAAO,CAAC,cAAc,CAAC,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,MAAc;QACzB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;IAED;;;;;OAKG;IACH,YAAY,CAAC,MAAc,EAAE,QAAgB;QAC3C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;IACjE,CAAC;IAED;;;;;OAKG;IACH,cAAc,CAAC,MAAc;QAC3B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1D,CAAC;CACF;AAAA;AAAA;AAED,0EAAe,YAAY,EAAC;;;;;;;;ACpD5B;IACE,IAAI,IAAI,CAAC;IACT,CAAC,UAAU,MAAM;QACf,IAAI,GAAG,MAAM,CAAC;IAChB,CAAC,CAAC,CAAC,MAAM,KAAK,SAAS,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC;IAC3C,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAGD;IACE,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,MAAM,CAAQ,CAAC;IACtC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;QAC9B,MAAM,CAAC,GAAG,CAAC,GAAG,EACb,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC;AAED;;GAEG;AACI,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC;AAAA;AAAA;;;;;;;;ACtBhC;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"lokidb.local-storage.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@lokidb/local-storage\"] = factory();\n\telse\n\t\troot[\"@lokidb/local-storage\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3726203130c546d96078","import {LocalStorage} from \"./local_storage\";\n\nexport {LocalStorage};\nexport default LocalStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/local-storage/src/index.ts","import {PLUGINS} from \"../../common/plugin\";\nimport {StorageAdapter} from \"../../common/types\";\n\n/**\n * A loki persistence adapter which persists to web browser's local storage object\n * @constructor LocalStorageAdapter\n */\nexport class LocalStorage implements StorageAdapter {\n  /**\n   * Registers the local storage as plugin.\n   */\n  static register(): void {\n    PLUGINS[\"LocalStorage\"] = LocalStorage;\n  }\n\n  /**\n   * Deregisters the local storage as plugin.\n   */\n  static deregister(): void {\n    delete PLUGINS[\"LocalStorage\"];\n  }\n\n  /**\n   * loadDatabase() - Load data from localstorage\n   * @param {string} dbname - the name of the database to load\n   * @returns {Promise} a Promise that resolves after the database was loaded\n   */\n  loadDatabase(dbname: string) {\n    return Promise.resolve(localStorage.getItem(dbname));\n  }\n\n  /**\n   * saveDatabase() - save data to localstorage, will throw an error if the file can't be saved\n   * might want to expand this to avoid dataloss on partial save\n   * @param {string} dbname - the filename of the database to load\n   * @returns {Promise} a Promise that resolves after the database was saved\n   */\n  saveDatabase(dbname: string, dbstring: string) {\n    return Promise.resolve(localStorage.setItem(dbname, dbstring));\n  }\n\n  /**\n   * deleteDatabase() - delete the database from localstorage, will throw an error if it\n   * can't be deleted\n   * @param {string} dbname - the filename of the database to delete\n   * @returns {Promise} a Promise that resolves after the database was deleted\n   */\n  deleteDatabase(dbname: string) {\n    return Promise.resolve(localStorage.removeItem(dbname));\n  }\n}\n\nexport default LocalStorage;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/local-storage/src/local_storage.ts","function getGlobal(): any {\n  let glob;\n  (function (global) {\n    glob = global;\n  })(global !== undefined && global || this);\n  return glob;\n}\n\n\nfunction create(): void {\n  const global = getGlobal();\n  const sym = Symbol.for(\"LOKI\") as any;\n  if (global[sym] === undefined) {\n    global[sym] = {\n    };\n  }\n  return global[sym];\n}\n\n/**\n * @hidden\n */\nexport const PLUGINS = create();\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./packages/common/plugin.ts","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}